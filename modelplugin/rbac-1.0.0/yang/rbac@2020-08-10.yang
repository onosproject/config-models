module rbac {
  namespace "http://opennetworking.org/aether/rbac";
  prefix rbac;

  import ietf-yang-types { prefix yang; }

  organization "Open Networking Foundation.";
  contact "Sean Condon";
  description "Configuration of Role Based Access Control
    To generate JSON from this use command
    pyang -f jtoxx rbac.yang | python3 -m json.tool > test1.json";

  revision "2020-08-10" {
    description "Initial Version";
    reference "AETHER-308";
  }

  identity VERB {
    description "A verb identity";
  }

  identity CREATE {
    base VERB;
    description "Create verb";
  }

  identity READ {
    base VERB;
    description "Read verb";
  }

  identity UPDATE {
    base VERB;
    description "update verb";
  }

  identity DELETE {
    base VERB;
    description "Delete verb";
  }

  container rbac {
    description "The top level RBAC container";

    list role {
      key roleid;
      description "A role";

      leaf roleid {
        type yang:yang-identifier;
        description "A unique role ID";
      }

      leaf description {
        type string {
            length 1..100;
        }
        description "A role description";
      }
    }

    list group {
      key groupid;
      description "A user group similar to OS level group";

      leaf groupid {
        type yang:yang-identifier;
        description "A unique group ID";
      }

      leaf description {
        type string {
            length 1..100;
        }
        description "A group description";
      }
    }

    list role-binding {
      key "role group";
      description "Binding of roles to groups";

      leaf role {
        type leafref {
          path "../../role/roleid";
        }
      }

      leaf group {
        type leafref {
          path "../../group/groupid";
        }
      }

      leaf description {
        type string {
            length 1..100;
        }
        description "A role binding description";
      }

      list noun {
        key "noun";
        description "A known verb e.g. CREATE, READ, UPDATE, DELETE";

        leaf noun {
            type string {
              length 1..200;
              pattern '/[a-zA-Z0-9\-/_.]*';
            }
            description "The noun - in path format (must start with /)
            Can include wildcards.
            Wilder entries will eclipse a narrower entry";
        }

        list verb {
          key verb;
          description "an action allowed on this noun for this role and group";
          leaf verb {
            type identityref {
              base VERB;
            }
            description "The verb identity";
          }

          leaf comment {
            type string {
              length 0..100;
            }
          }
        }
      }
    }
    
  }
}