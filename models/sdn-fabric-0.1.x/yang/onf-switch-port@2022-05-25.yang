// SPDX-FileCopyrightText: 2022 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

submodule onf-switch-port {
  belongs-to onf-switch { prefix sw; }

  import onf-sdn-fabric-types { prefix st; }
  import onf-switch-model { prefix sm; }
  import onf-dhcp-server { prefix dhcp; }
  import openconfig-interfaces { prefix ocif; }

  include onf-switch-vlan;

  organization "Intel Corporation";
  contact "ROC Engineering";
  description "Configuration of port within switch";

  revision "2022-05-25" {
    description "Initial Version";
    reference "ROC SD-Fabric Notes";
  }

  grouping ports-grouping {
    list port {
/**     TODO: goyang can only handle one must per yang.Entry
 *            Also the $this variable support is yet to be added to xpath
 *      must "set-contains(/sm:switch-model[@sm:switch-model-id=$this/../sw:model-id]/sm:port/@sm:cage-number, ./@sw:cage-number)" {
 *        error-message "port cage-number must be present in corresponding switch-model/port";
 *        description "port cage-number must be from the corresponding switch-model";
 *      }
 *      must "./@sw:channel-number <= /sm:switch-model[@sm:switch-model-id=$this/../sw:model-id]/sm:port[@sm:cage-number=$this/@sw:cage-number]/sm:max-channel" {
 *        error-message "port channel-number exceeds max-channel of corresponding switch-model/port";
 *        description "port channel-number must be equal or less than max-channel in corresponding switch-model/port";
 *      }
 */
      key "cage-number channel-number";
      description "A port in a switch";

      leaf cage-number {
        type leafref {
          path "/sm:switch-model/sm:port/sm:cage-number";
        }
        description "reference to the cage-number of the port in the switch model";
      }

      leaf channel-number {
        type uint8 {
          range 0..16;
        }
        description "reference to the channel-number of the port in the switch model.
        The value cannot exceed the max-channels of the corresponding port in the switch-model";
      }

      uses st:desc-display-name;

      leaf speed {
        type identityref {
          base st:speed;
        }
        mandatory true;
        description "configured port speed";
      }

      leaf-list dhcp-connect-point {
        type leafref {
          path "/dhcp:dhcp-server/dhcp:dhcp-server-id";
        }
        description "Reference to DHCP connect point";
      }

      container vlans {
        leaf untagged {
          type leafref {
            path "../../../sw:vlan/sw:vlan-id";
          }
          default 1;
          description "vlan for untagged packets";
        }
        leaf-list tagged {
          type leafref {
            path "../../../sw:vlan/sw:vlan-id";
          }
          description "multiple tagged vlans";
        }
        description "untagged and tagged vlans per port";
      }

      container state {
        config false;

        uses ocif:interface-common-state;

        description "Op state attributes";
      }
    }
    description "ports grouping";
  }
}