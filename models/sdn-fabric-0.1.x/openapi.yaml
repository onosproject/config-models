# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0
components:
  parameters:
    fabric-id:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: fabric-id (target in onos-config)
      in: path
      name: fabric-id
      required: true
  requestBodies:
    RequestBody_Dhcp-server:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Dhcp-server'
    RequestBody_Route:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Route'
    RequestBody_Switch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch'
    RequestBody_Switch-model:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-model'
    RequestBody_Switch-model_Attribute:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-model_Attribute'
    RequestBody_Switch-model_Port:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-model_Port'
    RequestBody_Switch_Attribute:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Attribute'
    RequestBody_Switch_Management:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Management'
    RequestBody_Switch_Port:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Port'
    RequestBody_Switch_Port_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Port_State'
    RequestBody_Switch_Port_Vlans:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Port_Vlans'
    RequestBody_Switch_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_State'
    RequestBody_Switch_Switch-pair:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Switch-pair'
    RequestBody_Switch_Switch-pair_Pairing-port:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port'
    RequestBody_Switch_Vlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Vlan'
  schemas:
    AdditionalPropertiesUnchTarget:
      description: both the additional property 'unchanged' and the 'fabric-id'
      properties:
        fabric-id:
          description: an override of the fabric-id (target)
          title: fabric-id
          type: string
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertiesUnchTarget
      type: object
    AdditionalPropertyFabric-Id:
      description: Optionally specify a fabric-id other than the default (only on
        PATCH method)
      properties:
        fabric-id:
          description: an override of the fabric-id (target)
          title: fabric-id
          type: string
      title: AdditionalPropertyFabric-Id
      type: object
    AdditionalPropertyUnchanged:
      description: To optionally omit 'required' properties, add them to 'unchanged'
        list
      properties:
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertyUnchanged
      type: object
    Dhcp-server:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: A list of DHCP Servers (single)
      properties:
        address:
          description: an ip address
          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\p{N}\p{L}]+)?
          title: address
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        dhcp-server-id:
          description: The ID of the DHCP Server
          maxLength: 18446744073709551615
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: dhcp-server-id
          type: string
          x-go-type: ListKey
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
      required:
      - address
      - dhcp-server-id
      title: Dhcp-server
      type: object
      x-list-multiple: true
    Dhcp-server_List:
      description: A list of DHCP Servers (list)
      items:
        $ref: '#/components/schemas/Dhcp-server'
      type: array
      uniqueItems: true
      x-keys:
      - dhcp-server-id
      x-list-multiple: true
    Route:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: A list of routes (single)
      properties:
        address:
          description: IP address of hop
          title: address
          type: string
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        metric:
          description: Metric specifies the priority
          maximum: 255
          minimum: 0
          title: metric
          type: integer
        prefix:
          description: subnet to match packet
          title: prefix
          type: string
        route-id:
          description: The ID of the route
          maxLength: 18446744073709551615
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: route-id
          type: string
          x-go-type: ListKey
      required:
      - address
      - metric
      - prefix
      - route-id
      title: Route
      type: object
      x-list-multiple: true
    Route_List:
      description: A list of routes (list)
      items:
        $ref: '#/components/schemas/Route'
      type: array
      uniqueItems: true
      x-keys:
      - route-id
      x-list-multiple: true
    Switch:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: A managed device in the fabric (single)
      properties:
        attribute:
          $ref: '#/components/schemas/Switch_Attribute_List'
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        management:
          $ref: '#/components/schemas/Switch_Management'
        model-id:
          description: link to switch model
          title: model-id
          type: string
          x-leafref: /sm:switch-model/sm:switch-model-id
        port:
          $ref: '#/components/schemas/Switch_Port_List'
        role:
          description: The role of the switch in the fabric
          title: role
          type: string
        state:
          $ref: '#/components/schemas/Switch_State'
        switch-id:
          description: unique identifier for the switch
          maxLength: 253
          minLength: 1
          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
          title: switch-id
          type: string
          x-go-type: ListKey
        switch-pair:
          $ref: '#/components/schemas/Switch_Switch-pair'
        vlan:
          $ref: '#/components/schemas/Switch_Vlan_List'
      required:
      - model-id
      - role
      - switch-id
      title: Switch
      type: object
      x-list-multiple: true
    Switch-model:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: A model of switch (single)
      properties:
        attribute:
          $ref: '#/components/schemas/Switch-model_Attribute_List'
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        pipeline:
          description: Pipeline configuration - dual or quad
          title: pipeline
          type: string
        port:
          $ref: '#/components/schemas/Switch-model_Port_List'
        switch-model-id:
          description: unique identifier for the switch
          maxLength: 100
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: switch-model-id
          type: string
          x-go-type: ListKey
      required:
      - pipeline
      - switch-model-id
      title: Switch-model
      type: object
      x-list-multiple: true
    Switch-model_Attribute:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: 'a map of extra attributes: string-string (single)'
      properties:
        attribute-key:
          description: the key in a map of attributes
          maxLength: 40
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: attribute-key
          type: string
          x-go-type: ListKey
        value:
          description: the value of attribute-key
          maxLength: 200
          minLength: 1
          title: value
          type: string
      required:
      - attribute-key
      - value
      title: Switch-model_Attribute
      type: object
      x-list-multiple: true
    Switch-model_Attribute_List:
      description: 'a map of extra attributes: string-string (list)'
      items:
        $ref: '#/components/schemas/Switch-model_Attribute'
      type: array
      uniqueItems: true
      x-keys:
      - attribute-key
      x-list-multiple: true
    Switch-model_List:
      description: A model of switch (list)
      items:
        $ref: '#/components/schemas/Switch-model'
      type: array
      uniqueItems: true
      x-keys:
      - switch-model-id
      x-list-multiple: true
    Switch-model_Port:
      description: A port in a switch (single)
      properties:
        cage-number:
          description: identifier of the cage - physical port on switch
          maximum: 255
          minimum: 0
          title: cage-number
          type: integer
          x-go-type: ListKey
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        max-channel:
          description: |-
            A splitter can divide the port in to channels.
            The default value 0 indicates the port is not channelizable
          maximum: 16
          minimum: 0
          title: max-channel
          type: integer
        speeds:
          $ref: '#/components/schemas/Switch-model_Port_Speeds'
      required:
      - cage-number
      title: Switch-model_Port
      type: object
      x-list-multiple: true
    Switch-model_Port_List:
      description: A port in a switch (list)
      items:
        $ref: '#/components/schemas/Switch-model_Port'
      type: array
      uniqueItems: true
      x-keys:
      - cage-number
      x-list-multiple: true
    Switch-model_Port_Speeds:
      items:
        description: port speed
        enum:
        - speed-100g
        - speed-10g
        - speed-1g
        - speed-2-5g
        - speed-25g
        - speed-400g
        - speed-40g
        - speed-5g
        - speed-autoneg
        title: speeds
        type: string
      title: leaf-list-speeds
      type: array
    Switch_Attribute:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: 'a map of extra attributes: string-string (single)'
      properties:
        attribute-key:
          description: the key in a map of attributes
          maxLength: 40
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: attribute-key
          type: string
          x-go-type: ListKey
        value:
          description: the value of attribute-key
          maxLength: 200
          minLength: 1
          title: value
          type: string
      required:
      - attribute-key
      - value
      title: Switch_Attribute
      type: object
      x-list-multiple: true
    Switch_Attribute_List:
      description: 'a map of extra attributes: string-string (list)'
      items:
        $ref: '#/components/schemas/Switch_Attribute'
      type: array
      uniqueItems: true
      x-keys:
      - attribute-key
      x-list-multiple: true
    Switch_List:
      description: A managed device in the fabric (list)
      items:
        $ref: '#/components/schemas/Switch'
      type: array
      uniqueItems: true
      x-keys:
      - switch-id
      x-list-multiple: true
    Switch_Management:
      description: configuration of the management port
      properties:
        address:
          description: The management IPv4 address
          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\p{N}\p{L}]+)?
          title: address
          type: string
        port-number:
          description: The mangement port number
          maximum: 65535
          minimum: 0
          title: port-number
          type: integer
      title: Switch_Management
      type: object
    Switch_Port:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: A port in a switch (single)
      properties:
        cage-number:
          description: reference to the cage-number of the port in the switch model
          title: cage-number
          type: string
          x-go-type: ListKey
          x-leafref: /sm:switch-model/sm:port/sm:cage-number
        channel-number:
          description: |-
            reference to the channel-number of the port in the switch model.
            The value cannot exceed the max-channels of the corresponding port in the switch-model
          maximum: 16
          minimum: 0
          title: channel-number
          type: integer
          x-go-type: ListKey
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        dhcp-connect-point:
          $ref: '#/components/schemas/Switch_Port_Dhcp-connect-point'
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        speed:
          description: configured port speed
          enum:
          - speed-100g
          - speed-10g
          - speed-1g
          - speed-2-5g
          - speed-25g
          - speed-400g
          - speed-40g
          - speed-5g
          - speed-autoneg
          title: speed
          type: string
        state:
          $ref: '#/components/schemas/Switch_Port_State'
        vlans:
          $ref: '#/components/schemas/Switch_Port_Vlans'
      required:
      - cage-number
      - channel-number
      - speed
      title: Switch_Port
      type: object
      x-list-multiple: true
    Switch_Port_Dhcp-connect-point:
      items:
        description: Reference to DHCP connect point
        title: dhcp-connect-point
        type: string
        x-leafref: /dhcp:dhcp-server/dhcp:dhcp-server-id
      title: leaf-list-dhcp-connect-point
      type: array
    Switch_Port_List:
      description: A port in a switch (list)
      items:
        $ref: '#/components/schemas/Switch_Port'
      type: array
      uniqueItems: true
      x-keys:
      - cage-number
      - channel-number
      x-list-multiple: true
    Switch_Port_State:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: Op state attributes
      properties:
        admin-status:
          description: |-
            The desired state of the interface.  In RFC 7223 this leaf
            has the same read semantics as ifAdminStatus.  Here, it
            reflects the administrative state as set by enabling or
            disabling the interface.
          title: admin-status
          type: string
        ifindex:
          description: |-
            System assigned number for each interface.  Corresponds to
            ifIndex object in SNMP Interface MIB
          format: int32
          minimum: 0
          title: ifindex
          type: integer
        last-change:
          description: |-
            This timestamp indicates the time of the last state change
            of the interface (e.g., up-to-down transition). This
            corresponds to the ifLastChange object in the standard
            interface MIB.

            The value is the timestamp in nanoseconds relative to
            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
          format: int64
          minimum: 0
          title: last-change
          type: integer
        oper-status:
          description: |-
            The current operational state of the interface.

            This leaf has the same semantics as ifOperStatus.
          title: oper-status
          type: string
      required:
      - admin-status
      - oper-status
      title: Switch_Port_State
      type: object
    Switch_Port_Vlans:
      description: untagged and tagged vlans per port
      properties:
        leaf-list-tagged:
          items:
            description: multiple tagged vlans
            title: tagged
            type: string
            x-leafref: ../../../sw:vlan/sw:vlan-id
          title: leaf-list-tagged
          type: array
        untagged:
          description: vlan for untagged packets
          title: untagged
          type: string
          x-leafref: ../../../sw:vlan/sw:vlan-id
      title: Switch_Port_Vlans
      type: object
    Switch_State:
      description: Op state attributes
      properties:
        connected:
          description: 'status of the port: up|down'
          title: connected
          type: string
        last-connected:
          description: Last known time the switch was connected
          pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
          title: last-connected
          type: string
      title: Switch_State
      type: object
    Switch_Switch-pair:
      description: A Switch pairing. A switch can participate on 0-1 pairings
      properties:
        paired-switch:
          description: |-
            Paired switch identifier. A guard rail will require that
            this field is present when the pairing-port list has at least 1 elements
          title: paired-switch
          type: string
          x-leafref: /sw:switch/sw:switch-id
        pairing-port:
          $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port_List'
      title: Switch_Switch-pair
      type: object
    Switch_Switch-pair_Pairing-port:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: |-
        The port on the local switch to establish the paired link
        In future there may be more than 1 port to provide redundancy.
        For the initial version this is limited to 1 (single)
      properties:
        cage-number:
          description: 'Port cage number used for connecting to '
          title: cage-number
          type: string
          x-go-type: ListKey
          x-leafref: ../../../sw:port/sw:cage-number
        channel-number:
          description: Port channel number used for Switch A
          title: channel-number
          type: string
          x-go-type: ListKey
          x-leafref: ../../../sw:port/sw:channel-number
      required:
      - cage-number
      - channel-number
      title: Switch_Switch-pair_Pairing-port
      type: object
      x-list-multiple: true
    Switch_Switch-pair_Pairing-port_List:
      description: |-
        The port on the local switch to establish the paired link
        In future there may be more than 1 port to provide redundancy.
        For the initial version this is limited to 1 (list)
      items:
        $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port'
      maxItems: 1
      type: array
      uniqueItems: true
      x-keys:
      - cage-number
      - channel-number
      x-list-multiple: true
    Switch_Vlan:
      description: a list of VLANs (single)
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        subnet:
          $ref: '#/components/schemas/Switch_Vlan_Subnet'
        vlan-id:
          description: the VLAN ID
          maximum: 4096
          minimum: 0
          title: vlan-id
          type: integer
          x-go-type: ListKey
      required:
      - vlan-id
      title: Switch_Vlan
      type: object
      x-list-multiple: true
    Switch_Vlan_List:
      description: a list of VLANs (list)
      items:
        $ref: '#/components/schemas/Switch_Vlan'
      type: array
      uniqueItems: true
      x-keys:
      - vlan-id
      x-list-multiple: true
    Switch_Vlan_Subnet:
      items:
        description: Network subnets for VLAN
        pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))
        title: subnet
        type: string
      title: leaf-list-subnet
      type: array
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  description: OpenAPI 3 specification is generated from sdn-fabric onos-config model
    plugin
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: sdn-fabric-0.1.x
  version: 0.1.x
openapi: 3.0.0
paths:
  /sdn-fabric/v0.1.x/{fabric-id}/dhcp-server:
    description: A list of DHCP Servers
    get:
      operationId: getDhcp-server_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp-server_List'
          description: GET OK 200
      summary: GET /dhcp-server List
      tags:
      - Dhcp-server
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
  /sdn-fabric/v0.1.x/{fabric-id}/dhcp-server/{dhcp-server-id}:
    delete:
      operationId: deleteDhcp-server
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /dhcp-server
    description: A list of DHCP Servers
    get:
      operationId: getDhcp-server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dhcp-server'
          description: GET OK 200
      summary: GET /dhcp-server Container
      tags:
      - Dhcp-server
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {dhcp-server-id}
      in: path
      name: dhcp-server-id
      required: true
    post:
      operationId: postDhcp-server
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Dhcp-server'
      responses:
        "201":
          description: created
      summary: POST /dhcp-server
  /sdn-fabric/v0.1.x/{fabric-id}/route:
    description: A list of routes
    get:
      operationId: getRoute_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route_List'
          description: GET OK 200
      summary: GET /route List
      tags:
      - Route
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
  /sdn-fabric/v0.1.x/{fabric-id}/route/{route-id}:
    delete:
      operationId: deleteRoute
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /route
    description: A list of routes
    get:
      operationId: getRoute
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: GET OK 200
      summary: GET /route Container
      tags:
      - Route
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {route-id}
      in: path
      name: route-id
      required: true
    post:
      operationId: postRoute
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Route'
      responses:
        "201":
          description: created
      summary: POST /route
  /sdn-fabric/v0.1.x/{fabric-id}/switch:
    description: A managed device in the fabric
    get:
      operationId: getSwitch_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_List'
          description: GET OK 200
      summary: GET /switch List
      tags:
      - Switch
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
  /sdn-fabric/v0.1.x/{fabric-id}/switch-model:
    description: A model of switch
    get:
      operationId: getSwitch-model_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_List'
          description: GET OK 200
      summary: GET /switch-model List
      tags:
      - Switch-model
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}:
    delete:
      operationId: deleteSwitch-model
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-model
    description: A model of switch
    get:
      operationId: getSwitch-model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model'
          description: GET OK 200
      summary: GET /switch-model Container
      tags:
      - Switch-model
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
    post:
      operationId: postSwitch-model
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-model'
      responses:
        "201":
          description: created
      summary: POST /switch-model
  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}/attribute:
    description: 'a map of extra attributes: string-string'
    get:
      operationId: getSwitch-model_Attribute_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_Attribute_List'
          description: GET OK 200
      summary: GET /switch-model/{switch-model-id}/attribute List
      tags:
      - Switch-model_Attribute
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}/attribute/{attribute-key}:
    delete:
      operationId: deleteSwitch-model_Attribute
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-model/{switch-model-id}/attribute
    description: 'a map of extra attributes: string-string'
    get:
      operationId: getSwitch-model_Attribute
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_Attribute'
          description: GET OK 200
      summary: GET /switch-model/{switch-model-id}/attribute Container
      tags:
      - Switch-model_Attribute
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {attribute-key}
      in: path
      name: attribute-key
      required: true
    post:
      operationId: postSwitch-model_Attribute
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-model_Attribute'
      responses:
        "201":
          description: created
      summary: POST /switch-model/{switch-model-id}/attribute
  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}/port:
    description: A port in a switch
    get:
      operationId: getSwitch-model_Port_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_Port_List'
          description: GET OK 200
      summary: GET /switch-model/{switch-model-id}/port List
      tags:
      - Switch-model_Port
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
  /sdn-fabric/v0.1.x/{fabric-id}/switch-model/{switch-model-id}/port/{cage-number}:
    delete:
      operationId: deleteSwitch-model_Port
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-model/{switch-model-id}/port
    description: A port in a switch
    get:
      operationId: getSwitch-model_Port
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_Port'
          description: GET OK 200
      summary: GET /switch-model/{switch-model-id}/port Container
      tags:
      - Switch-model_Port
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {cage-number}
      in: path
      name: cage-number
      required: true
    post:
      operationId: postSwitch-model_Port
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-model_Port'
      responses:
        "201":
          description: created
      summary: POST /switch-model/{switch-model-id}/port
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}:
    delete:
      operationId: deleteSwitch
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch
    description: A managed device in the fabric
    get:
      operationId: getSwitch
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch'
          description: GET OK 200
      summary: GET /switch Container
      tags:
      - Switch
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    post:
      operationId: postSwitch
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch'
      responses:
        "201":
          description: created
      summary: POST /switch
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/attribute:
    description: 'a map of extra attributes: string-string'
    get:
      operationId: getSwitch_Attribute_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Attribute_List'
          description: GET OK 200
      summary: GET /switch/{switch-id}/attribute List
      tags:
      - Switch_Attribute
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/attribute/{attribute-key}:
    delete:
      operationId: deleteSwitch_Attribute
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/attribute
    description: 'a map of extra attributes: string-string'
    get:
      operationId: getSwitch_Attribute
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Attribute'
          description: GET OK 200
      summary: GET /switch/{switch-id}/attribute Container
      tags:
      - Switch_Attribute
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {attribute-key}
      in: path
      name: attribute-key
      required: true
    post:
      operationId: postSwitch_Attribute
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Attribute'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/attribute
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/management:
    delete:
      operationId: deleteSwitch_Management
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/management
    description: configuration of the management port
    get:
      operationId: getSwitch_Management
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Management'
          description: GET OK 200
      summary: GET /switch/{switch-id}/management Container
      tags:
      - Switch
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    post:
      operationId: postSwitch_Management
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Management'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/management
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/port:
    description: A port in a switch
    get:
      operationId: getSwitch_Port_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Port_List'
          description: GET OK 200
      summary: GET /switch/{switch-id}/port List
      tags:
      - Switch_Port
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/port/{cage-number}/{channel-number}:
    delete:
      operationId: deleteSwitch_Port
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/port
    description: A port in a switch
    get:
      operationId: getSwitch_Port
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Port'
          description: GET OK 200
      summary: GET /switch/{switch-id}/port Container
      tags:
      - Switch_Port
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {cage-number}
      in: path
      name: cage-number
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {channel-number}
      in: path
      name: channel-number
      required: true
    post:
      operationId: postSwitch_Port
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Port'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/port
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/port/{cage-number}/{channel-number}/state:
    description: Op state attributes
    get:
      operationId: getSwitch_Port_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Port_State'
          description: GET OK 200
      summary: GET /switch/{switch-id}/port/{cage-number}/{channel-number}/state Container
      tags:
      - Switch_Port
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {cage-number}
      in: path
      name: cage-number
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {channel-number}
      in: path
      name: channel-number
      required: true
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/port/{cage-number}/{channel-number}/vlans:
    delete:
      operationId: deleteSwitch_Port_Vlans
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/port/{cage-number}/{channel-number}/vlans
    description: untagged and tagged vlans per port
    get:
      operationId: getSwitch_Port_Vlans
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Port_Vlans'
          description: GET OK 200
      summary: GET /switch/{switch-id}/port/{cage-number}/{channel-number}/vlans Container
      tags:
      - Switch_Port
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {cage-number}
      in: path
      name: cage-number
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {channel-number}
      in: path
      name: channel-number
      required: true
    post:
      operationId: postSwitch_Port_Vlans
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Port_Vlans'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/port/{cage-number}/{channel-number}/vlans
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/state:
    description: Op state attributes
    get:
      operationId: getSwitch_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_State'
          description: GET OK 200
      summary: GET /switch/{switch-id}/state Container
      tags:
      - Switch
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/switch-pair:
    delete:
      operationId: deleteSwitch_Switch-pair
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/switch-pair
    description: A Switch pairing. A switch can participate on 0-1 pairings
    get:
      operationId: getSwitch_Switch-pair
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Switch-pair'
          description: GET OK 200
      summary: GET /switch/{switch-id}/switch-pair Container
      tags:
      - Switch
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    post:
      operationId: postSwitch_Switch-pair
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Switch-pair'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/switch-pair
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/switch-pair/pairing-port:
    description: |-
      The port on the local switch to establish the paired link
      In future there may be more than 1 port to provide redundancy.
      For the initial version this is limited to 1
    get:
      operationId: getSwitch_Switch-pair_Pairing-port_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port_List'
          description: GET OK 200
      summary: GET /switch/{switch-id}/switch-pair/pairing-port List
      tags:
      - Switch_Switch-pair_Pairing-port
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/switch-pair/pairing-port/{cage-number}/{channel-number}:
    delete:
      operationId: deleteSwitch_Switch-pair_Pairing-port
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/switch-pair/pairing-port
    description: |-
      The port on the local switch to establish the paired link
      In future there may be more than 1 port to provide redundancy.
      For the initial version this is limited to 1
    get:
      operationId: getSwitch_Switch-pair_Pairing-port
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Switch-pair_Pairing-port'
          description: GET OK 200
      summary: GET /switch/{switch-id}/switch-pair/pairing-port Container
      tags:
      - Switch_Switch-pair_Pairing-port
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {cage-number}
      in: path
      name: cage-number
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {channel-number}
      in: path
      name: channel-number
      required: true
    post:
      operationId: postSwitch_Switch-pair_Pairing-port
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Switch-pair_Pairing-port'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/switch-pair/pairing-port
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/vlan:
    description: a list of VLANs
    get:
      operationId: getSwitch_Vlan_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Vlan_List'
          description: GET OK 200
      summary: GET /switch/{switch-id}/vlan List
      tags:
      - Switch_Vlan
      - List
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
  /sdn-fabric/v0.1.x/{fabric-id}/switch/{switch-id}/vlan/{vlan-id}:
    delete:
      operationId: deleteSwitch_Vlan
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/vlan
    description: a list of VLANs
    get:
      operationId: getSwitch_Vlan
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Vlan'
          description: GET OK 200
      summary: GET /switch/{switch-id}/vlan Container
      tags:
      - Switch_Vlan
      - Container
    parameters:
    - $ref: '#/components/parameters/fabric-id'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {vlan-id}
      in: path
      name: vlan-id
      required: true
    post:
      operationId: postSwitch_Vlan
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Vlan'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/vlan
