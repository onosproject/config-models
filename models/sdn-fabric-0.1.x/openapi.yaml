# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0
components:
  parameters:
    target:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: target (target in onos-config)
      in: path
      name: target
      required: true
  requestBodies:
    RequestBody_Route:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Route'
    RequestBody_Route_Nexthop:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Route_Nexthop'
    RequestBody_Switch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch'
    RequestBody_Switch-model:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-model'
    RequestBody_Switch-model_Attribute:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-model_Attribute'
    RequestBody_Switch-model_Port:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-model_Port'
    RequestBody_Switch-pair:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-pair'
    RequestBody_Switch-pair_Port-a:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-pair_Port-a'
    RequestBody_Switch-pair_Port-b:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch-pair_Port-b'
    RequestBody_Switch_Attribute:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Attribute'
    RequestBody_Switch_Management:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Management'
    RequestBody_Switch_Port:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Switch_Port'
    RequestBody_Vlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vlan'
  schemas:
    AdditionalPropertiesUnchTarget:
      description: both the additional property 'unchanged' and the 'target'
      properties:
        target:
          description: an override of the target (target)
          title: target
          type: string
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertiesUnchTarget
      type: object
    AdditionalPropertyTarget:
      description: Optionally specify a target other than the default (only on PATCH
        method)
      properties:
        target:
          description: an override of the target (target)
          title: target
          type: string
      title: AdditionalPropertyTarget
      type: object
    AdditionalPropertyUnchanged:
      description: To optionally omit 'required' properties, add them to 'unchanged'
        list
      properties:
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertyUnchanged
      type: object
    Route:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: A list of routes (single)
      properties:
        nexthop:
          $ref: '#/components/schemas/Route_Nexthop_List'
        prefix:
          description: subnet to match packet
          title: prefix
          type: string
        route-id:
          description: The ID of the route
          maxLength: 18446744073709551615
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: route-id
          type: string
      required:
      - prefix
      - route-id
      title: Route
      type: object
      x-list-multiple: true
    Route_List:
      description: A list of routes (list)
      items:
        $ref: '#/components/schemas/Route'
      type: array
      uniqueItems: true
      x-keys:
      - route-id
      x-list-multiple: true
    Route_Nexthop:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: ordered list of next hops (single)
      properties:
        address:
          description: IP address of hop
          title: address
          type: string
        index:
          description: the order of the next hops
          format: int32
          minimum: 0
          title: index
          type: integer
      required:
      - address
      - index
      title: Route_Nexthop
      type: object
      x-list-multiple: true
    Route_Nexthop_List:
      description: ordered list of next hops (list)
      items:
        $ref: '#/components/schemas/Route_Nexthop'
      type: array
      uniqueItems: true
      x-keys:
      - index
      x-list-multiple: true
    Switch:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: A managed device in the fabric (single)
      properties:
        attribute:
          $ref: '#/components/schemas/Switch_Attribute_List'
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        management:
          $ref: '#/components/schemas/Switch_Management'
        model:
          description: link to switch model
          title: model
          type: string
          x-leafref: /sm:switch-model/sm:switch-model-id
        port:
          $ref: '#/components/schemas/Switch_Port_List'
        role:
          description: The role of the switch in the fabric
          title: role
          type: string
        switch-id:
          description: unique identifier for the switch
          maxLength: 253
          minLength: 1
          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
          title: switch-id
          type: string
      required:
      - role
      - switch-id
      title: Switch
      type: object
      x-list-multiple: true
    Switch-model:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: A model of switch (single)
      properties:
        attribute:
          $ref: '#/components/schemas/Switch-model_Attribute_List'
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        form-factor:
          description: The form factor for the switch
          title: form-factor
          type: string
          enum:
            - undefined
            - pizza-box
            - smart-nic
            - v-switch
            - ipu
        pipeline:
          description: Pipeline configuration - dual or quad
          title: pipeline
          type: string
          enum:
            - unknown
            - dual
            - quad
        port:
          $ref: '#/components/schemas/Switch-model_Port_List'
        switch-model-id:
          description: unique identifier for the switch
          maxLength: 18446744073709551615
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: switch-model-id
          type: string
      required:
      - form-factor
      - switch-model-id
      title: Switch-model
      type: object
      x-list-multiple: true
    Switch-model_Attribute:
      description: 'a map of extra attributes: string-string (single)'
      properties:
        attribute-key:
          description: the key in a map of attributes
          maxLength: 40
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: attribute-key
          type: string
        value:
          description: the value of attribute-key
          maxLength: 200
          minLength: 1
          title: value
          type: string
      required:
      - attribute-key
      title: Switch-model_Attribute
      type: object
      x-list-multiple: true
    Switch-model_Attribute_List:
      description: 'a map of extra attributes: string-string (list)'
      items:
        $ref: '#/components/schemas/Switch-model_Attribute'
      type: array
      uniqueItems: true
      x-keys:
      - attribute-key
      x-list-multiple: true
    Switch-model_List:
      description: A model of switch (list)
      items:
        $ref: '#/components/schemas/Switch-model'
      type: array
      uniqueItems: true
      x-keys:
      - switch-model-id
      x-list-multiple: true
    Switch-model_Port:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: A port in a switch (single)
      properties:
        /switch-model/port:
          $ref: '#/components/schemas/Switch-model_Port_Speeds'
        cage-number:
          description: identifier of the cage - physical port on switch
          maximum: 255
          minimum: 0
          title: cage-number
          type: integer
        channel-number:
          description: channel in the port. 0 by default. A splitter can divide the
            port in to channels
          maximum: 255
          minimum: 0
          title: channel-number
          type: integer
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
      required:
      - cage-number
      - channel-number
      title: Switch-model_Port
      type: object
      x-list-multiple: true
    Switch-model_Port_List:
      description: A port in a switch (list)
      items:
        $ref: '#/components/schemas/Switch-model_Port'
      type: array
      uniqueItems: true
      x-keys:
      - cage-number
      - channel-number
      x-list-multiple: true
    Switch-model_Port_Speeds:
      items:
        description: port speed
        enum:
        - speed-100g
        - speed-10g
        - speed-1g
        - speed-2-5g
        - speed-25g
        - speed-400g
        - speed-40g
        - speed-5g
        - speed-autoneg
        title: speeds
        type: string
      title: leaf-list-speeds
      type: array
    Switch-pair:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: A Switch pairing. A switch can participate on 0-1 pairings (single)
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        port-a:
          $ref: '#/components/schemas/Switch-pair_Port-a'
        port-b:
          $ref: '#/components/schemas/Switch-pair_Port-b'
        switch-a:
          description: A reference to a configured switch
          title: switch-a
          type: string
          x-leafref: /sw:switch/sw:switch-id
        switch-b:
          description: A switch to pair with switch-a
          title: switch-b
          type: string
          x-leafref: /sw:switch/sw:switch-id
      required:
      - switch-a
      - switch-b
      title: Switch-pair
      type: object
      x-list-multiple: true
    Switch-pair_List:
      description: A Switch pairing. A switch can participate on 0-1 pairings (list)
      items:
        $ref: '#/components/schemas/Switch-pair'
      type: array
      uniqueItems: true
      x-keys:
      - switch-a
      x-list-multiple: true
    Switch-pair_Port-a:
      description: The port of switch-a
      properties:
        cage-number:
          description: Port cage number used for Switch A
          title: cage-number
          type: string
          x-leafref: /sw:switch/sw:port/sw:cage-number
        channel-number:
          description: Port channel number used for Switch A
          title: channel-number
          type: string
          x-leafref: /sw:switch/sw:port/sw:channel-number
      title: Switch-pair_Port-a
      type: object
    Switch-pair_Port-b:
      description: the port of switch-b
      properties:
        cage-number:
          description: Port cage number used for Switch A
          title: cage-number
          type: string
          x-leafref: /sw:switch/sw:port/sw:cage-number
        channel-number:
          description: Port channel number used for Switch A
          title: channel-number
          type: string
          x-leafref: /sw:switch/sw:port/sw:channel-number
      title: Switch-pair_Port-b
      type: object
    Switch_Attribute:
      description: 'a map of extra attributes: string-string (single)'
      properties:
        attribute-key:
          description: the key in a map of attributes
          maxLength: 40
          minLength: 1
          pattern: '[a-zA-Z_][a-zA-Z0-9\-_.]*'
          title: attribute-key
          type: string
        value:
          description: the value of attribute-key
          maxLength: 200
          minLength: 1
          title: value
          type: string
      required:
      - attribute-key
      title: Switch_Attribute
      type: object
      x-list-multiple: true
    Switch_Attribute_List:
      description: 'a map of extra attributes: string-string (list)'
      items:
        $ref: '#/components/schemas/Switch_Attribute'
      type: array
      uniqueItems: true
      x-keys:
      - attribute-key
      x-list-multiple: true
    Switch_List:
      description: A managed device in the fabric (list)
      items:
        $ref: '#/components/schemas/Switch'
      type: array
      uniqueItems: true
      x-keys:
      - switch-id
      x-list-multiple: true
    Switch_Management:
      description: configuration of the management port
      properties:
        address:
          description: The management IPv4 address
          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\p{N}\p{L}]+)?
          title: address
          type: string
        port-number:
          description: The mangement port number
          maximum: 65535
          minimum: 0
          title: port-number
          type: integer
      title: Switch_Management
      type: object
    Switch_Port:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: A port in a switch (single)
      properties:
        switch-port:
          $ref: '#/components/schemas/Switch_Port_Dhcp-connect-point'
        cage-number:
          description: reference to the cage-number of the port in the switch model
          title: cage-number
          type: string
          x-leafref: /sm:switch-model/sm:port/sm:cage-number
        channel-number:
          description: reference to the channel-number of the port in the switch model
          title: channel-number
          type: string
          x-leafref: /sm:switch-model/sm:port/sm:channel-number
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        speed:
          description: configured port speed
          enum:
          - speed-100g
          - speed-10g
          - speed-1g
          - speed-2-5g
          - speed-25g
          - speed-400g
          - speed-40g
          - speed-5g
          - speed-autoneg
          title: speed
          type: string
      required:
      - cage-number
      - channel-number
      title: Switch_Port
      type: object
      x-list-multiple: true
    Switch_Port_Dhcp-connect-point:
      items:
        description: a list of ip addresses
        pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\p{N}\p{L}]+)?
        title: dhcp-connect-point
        type: string
      title: leaf-list-dhcp-connect-point
      type: array
    Switch_Port_List:
      description: A port in a switch (list)
      items:
        $ref: '#/components/schemas/Switch_Port'
      type: array
      uniqueItems: true
      x-keys:
      - cage-number
      - channel-number
      x-list-multiple: true
    Vlan:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertiesUnchTarget'
      description: a list of VLANs (single)
      properties:
        description:
          description: long description field
          maxLength: 1024
          minLength: 1
          title: description
          type: string
        display-name:
          description: display name to use in GUI or CLI
          maxLength: 80
          minLength: 1
          title: display-name
          type: string
        subnet:
          description: Network subnet for VLAN
          pattern: (([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))
          title: subnet
          type: string
        vlan-id:
          description: the VLAN ID
          maximum: 4096
          minimum: 0
          title: vlan-id
          type: integer
      required:
      - subnet
      - vlan-id
      title: Vlan
      type: object
      x-list-multiple: true
    Vlan_List:
      description: a list of VLANs (list)
      items:
        $ref: '#/components/schemas/Vlan'
      type: array
      uniqueItems: true
      x-keys:
      - vlan-id
      x-list-multiple: true
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  description: OpenAPI 3 specification is generated from sdn-fabric onos-config model
    plugin
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: sdn-fabric-0.1.0
  version: 0.1.0
openapi: 3.0.0
paths:
  /sdn-fabric/v0.1.0/{target}/route:
    description: A list of routes
    get:
      operationId: getRoute_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route_List'
          description: GET OK 200
      summary: GET /route List
      tags:
      - Route
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /sdn-fabric/v0.1.0/{target}/route/{route-id}:
    delete:
      operationId: deleteRoute_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /route
    description: A list of routes
    get:
      operationId: getRoute
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: GET OK 200
      summary: GET /route Container
      tags:
      - Route
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {route-id}
      in: path
      name: route-id
      required: true
    post:
      operationId: postRoute
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Route'
      responses:
        "201":
          description: created
      summary: POST /route
  /sdn-fabric/v0.1.0/{target}/route/{route-id}/nexthop:
    description: ordered list of next hops
    get:
      operationId: getRoute_Nexthop_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route_Nexthop_List'
          description: GET OK 200
      summary: GET /route/{route-id}/nexthop List
      tags:
      - Route_Nexthop
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {route-id}
      in: path
      name: route-id
      required: true
  /sdn-fabric/v0.1.0/{target}/route/{route-id}/nexthop/{index}:
    delete:
      operationId: deleteRoute_Nexthop_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /route/{route-id}/nexthop
    description: ordered list of next hops
    get:
      operationId: getRoute_Nexthop
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route_Nexthop'
          description: GET OK 200
      summary: GET /route/{route-id}/nexthop Container
      tags:
      - Route_Nexthop
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {route-id}
      in: path
      name: route-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {index}
      in: path
      name: index
      required: true
    post:
      operationId: postRoute_Nexthop
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Route_Nexthop'
      responses:
        "201":
          description: created
      summary: POST /route/{route-id}/nexthop
  /sdn-fabric/v0.1.0/{target}/switch:
    description: A managed device in the fabric
    get:
      operationId: getSwitch_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_List'
          description: GET OK 200
      summary: GET /switch List
      tags:
      - Switch
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /sdn-fabric/v0.1.0/{target}/switch-model:
    description: A model of switch
    get:
      operationId: getSwitch-model_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_List'
          description: GET OK 200
      summary: GET /switch-model List
      tags:
      - Switch-model
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /sdn-fabric/v0.1.0/{target}/switch-model/{switch-model-id}:
    delete:
      operationId: deleteSwitch-model_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-model
    description: A model of switch
    get:
      operationId: getSwitch-model
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model'
          description: GET OK 200
      summary: GET /switch-model Container
      tags:
      - Switch-model
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
    post:
      operationId: postSwitch-model
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-model'
      responses:
        "201":
          description: created
      summary: POST /switch-model
  /sdn-fabric/v0.1.0/{target}/switch-model/{switch-model-id}/attribute:
    description: 'a map of extra attributes: string-string'
    get:
      operationId: getSwitch-model_Attribute_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_Attribute_List'
          description: GET OK 200
      summary: GET /switch-model/{switch-model-id}/attribute List
      tags:
      - Switch-model_Attribute
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
  /sdn-fabric/v0.1.0/{target}/switch-model/{switch-model-id}/attribute/{attribute-key}:
    delete:
      operationId: deleteSwitch-model_Attribute_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-model/{switch-model-id}/attribute
    description: 'a map of extra attributes: string-string'
    get:
      operationId: getSwitch-model_Attribute
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_Attribute'
          description: GET OK 200
      summary: GET /switch-model/{switch-model-id}/attribute Container
      tags:
      - Switch-model_Attribute
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {attribute-key}
      in: path
      name: attribute-key
      required: true
    post:
      operationId: postSwitch-model_Attribute
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-model_Attribute'
      responses:
        "201":
          description: created
      summary: POST /switch-model/{switch-model-id}/attribute
  /sdn-fabric/v0.1.0/{target}/switch-model/{switch-model-id}/port:
    description: A port in a switch
    get:
      operationId: getSwitch-model_Port_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_Port_List'
          description: GET OK 200
      summary: GET /switch-model/{switch-model-id}/port List
      tags:
      - Switch-model_Port
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
  /sdn-fabric/v0.1.0/{target}/switch-model/{switch-model-id}/port/{cage-number}/{channel-number}:
    delete:
      operationId: deleteSwitch-model_Port_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-model/{switch-model-id}/port
    description: A port in a switch
    get:
      operationId: getSwitch-model_Port
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-model_Port'
          description: GET OK 200
      summary: GET /switch-model/{switch-model-id}/port Container
      tags:
      - Switch-model_Port
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-model-id}
      in: path
      name: switch-model-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {cage-number}
      in: path
      name: cage-number
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {channel-number}
      in: path
      name: channel-number
      required: true
    post:
      operationId: postSwitch-model_Port
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-model_Port'
      responses:
        "201":
          description: created
      summary: POST /switch-model/{switch-model-id}/port
  /sdn-fabric/v0.1.0/{target}/switch-pair:
    description: A Switch pairing. A switch can participate on 0-1 pairings
    get:
      operationId: getSwitch-pair_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-pair_List'
          description: GET OK 200
      summary: GET /switch-pair List
      tags:
      - Switch-pair
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /sdn-fabric/v0.1.0/{target}/switch-pair/{switch-a}:
    delete:
      operationId: deleteSwitch-pair_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-pair
    description: A Switch pairing. A switch can participate on 0-1 pairings
    get:
      operationId: getSwitch-pair
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-pair'
          description: GET OK 200
      summary: GET /switch-pair Container
      tags:
      - Switch-pair
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-a}
      in: path
      name: switch-a
      required: true
    post:
      operationId: postSwitch-pair
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-pair'
      responses:
        "201":
          description: created
      summary: POST /switch-pair
  /sdn-fabric/v0.1.0/{target}/switch-pair/{switch-a}/port-a:
    delete:
      operationId: deleteSwitch-pair_Port-a_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-pair/{switch-a}/port-a
    description: The port of switch-a
    get:
      operationId: getSwitch-pair_Port-a
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-pair_Port-a'
          description: GET OK 200
      summary: GET /switch-pair/{switch-a}/port-a Container
      tags:
      - Switch-pair
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-a}
      in: path
      name: switch-a
      required: true
    post:
      operationId: postSwitch-pair_Port-a
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-pair_Port-a'
      responses:
        "201":
          description: created
      summary: POST /switch-pair/{switch-a}/port-a
  /sdn-fabric/v0.1.0/{target}/switch-pair/{switch-a}/port-b:
    delete:
      operationId: deleteSwitch-pair_Port-b_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch-pair/{switch-a}/port-b
    description: the port of switch-b
    get:
      operationId: getSwitch-pair_Port-b
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch-pair_Port-b'
          description: GET OK 200
      summary: GET /switch-pair/{switch-a}/port-b Container
      tags:
      - Switch-pair
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-a}
      in: path
      name: switch-a
      required: true
    post:
      operationId: postSwitch-pair_Port-b
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch-pair_Port-b'
      responses:
        "201":
          description: created
      summary: POST /switch-pair/{switch-a}/port-b
  /sdn-fabric/v0.1.0/{target}/switch/{switch-id}:
    delete:
      operationId: deleteSwitch_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch
    description: A managed device in the fabric
    get:
      operationId: getSwitch
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch'
          description: GET OK 200
      summary: GET /switch Container
      tags:
      - Switch
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    post:
      operationId: postSwitch
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch'
      responses:
        "201":
          description: created
      summary: POST /switch
  /sdn-fabric/v0.1.0/{target}/switch/{switch-id}/attribute:
    description: 'a map of extra attributes: string-string'
    get:
      operationId: getSwitch_Attribute_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Attribute_List'
          description: GET OK 200
      summary: GET /switch/{switch-id}/attribute List
      tags:
      - Switch_Attribute
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
  /sdn-fabric/v0.1.0/{target}/switch/{switch-id}/attribute/{attribute-key}:
    delete:
      operationId: deleteSwitch_Attribute_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/attribute
    description: 'a map of extra attributes: string-string'
    get:
      operationId: getSwitch_Attribute
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Attribute'
          description: GET OK 200
      summary: GET /switch/{switch-id}/attribute Container
      tags:
      - Switch_Attribute
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {attribute-key}
      in: path
      name: attribute-key
      required: true
    post:
      operationId: postSwitch_Attribute
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Attribute'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/attribute
  /sdn-fabric/v0.1.0/{target}/switch/{switch-id}/management:
    delete:
      operationId: deleteSwitch_Management_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/management
    description: configuration of the management port
    get:
      operationId: getSwitch_Management
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Management'
          description: GET OK 200
      summary: GET /switch/{switch-id}/management Container
      tags:
      - Switch
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    post:
      operationId: postSwitch_Management
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Management'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/management
  /sdn-fabric/v0.1.0/{target}/switch/{switch-id}/port:
    description: A port in a switch
    get:
      operationId: getSwitch_Port_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Port_List'
          description: GET OK 200
      summary: GET /switch/{switch-id}/port List
      tags:
      - Switch_Port
      - List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
  /sdn-fabric/v0.1.0/{target}/switch/{switch-id}/port/{cage-number}/{channel-number}:
    delete:
      operationId: deleteSwitch_Port_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /switch/{switch-id}/port
    description: A port in a switch
    get:
      operationId: getSwitch_Port
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Switch_Port'
          description: GET OK 200
      summary: GET /switch/{switch-id}/port Container
      tags:
      - Switch_Port
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {switch-id}
      in: path
      name: switch-id
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {cage-number}
      in: path
      name: cage-number
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {channel-number}
      in: path
      name: channel-number
      required: true
    post:
      operationId: postSwitch_Port
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Switch_Port'
      responses:
        "201":
          description: created
      summary: POST /switch/{switch-id}/port
  /sdn-fabric/v0.1.0/{target}/vlan:
    description: a list of VLANs
    get:
      operationId: getVlan_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vlan_List'
          description: GET OK 200
      summary: GET /vlan List
      tags:
      - Vlan
      - List
    parameters:
    - $ref: '#/components/parameters/target'
  /sdn-fabric/v0.1.0/{target}/vlan/{vlan-id}:
    delete:
      operationId: deleteVlan_Container
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /vlan
    description: a list of VLANs
    get:
      operationId: getVlan
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vlan'
          description: GET OK 200
      summary: GET /vlan Container
      tags:
      - Vlan
      - Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {vlan-id}
      in: path
      name: vlan-id
      required: true
    post:
      operationId: postVlan
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Vlan'
      responses:
        "201":
          description: created
      summary: POST /vlan
