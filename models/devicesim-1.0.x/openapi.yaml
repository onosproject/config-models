# SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0
components:
  parameters:
    target:
      content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: target (target in onos-config)
      in: path
      name: target
      required: true
  requestBodies:
    RequestBody_Components:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components'
    RequestBody_Components_Component:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component'
    RequestBody_Components_Component_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Config'
    RequestBody_Components_Component_Properties:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Properties'
    RequestBody_Components_Component_Properties_Property:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Properties_Property'
    RequestBody_Components_Component_Properties_Property_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Properties_Property_Config'
    RequestBody_Components_Component_Properties_Property_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Properties_Property_State'
    RequestBody_Components_Component_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_State'
    RequestBody_Components_Component_State_Temperature:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_State_Temperature'
    RequestBody_Components_Component_Subcomponents:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Subcomponents'
    RequestBody_Components_Component_Subcomponents_Subcomponent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent'
    RequestBody_Components_Component_Subcomponents_Subcomponent_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_Config'
    RequestBody_Components_Component_Subcomponents_Subcomponent_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_State'
    RequestBody_Interfaces:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces'
    RequestBody_Interfaces_Interface:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface'
    RequestBody_Interfaces_Interface_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Config'
    RequestBody_Interfaces_Interface_Hold-time:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Hold-time'
    RequestBody_Interfaces_Interface_Hold-time_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Hold-time_Config'
    RequestBody_Interfaces_Interface_Hold-time_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Hold-time_State'
    RequestBody_Interfaces_Interface_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_State'
    RequestBody_Interfaces_Interface_State_Counters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_State_Counters'
    RequestBody_Interfaces_Interface_Subinterfaces:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces'
    RequestBody_Interfaces_Interface_Subinterfaces_Subinterface:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface'
    RequestBody_Interfaces_Interface_Subinterfaces_Subinterface_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_Config'
    RequestBody_Interfaces_Interface_Subinterfaces_Subinterface_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State'
    RequestBody_Interfaces_Interface_Subinterfaces_Subinterface_State_Counters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State_Counters'
    RequestBody_System:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System'
    RequestBody_System_Aaa:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa'
    RequestBody_System_Aaa_Accounting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Accounting'
    RequestBody_System_Aaa_Accounting_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Accounting_Config'
    RequestBody_System_Aaa_Accounting_Events:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Accounting_Events'
    RequestBody_System_Aaa_Accounting_Events_Event:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event'
    RequestBody_System_Aaa_Accounting_Events_Event_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_Config'
    RequestBody_System_Aaa_Accounting_Events_Event_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_State'
    RequestBody_System_Aaa_Accounting_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Accounting_State'
    RequestBody_System_Aaa_Authentication:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication'
    RequestBody_System_Aaa_Authentication_Admin-user:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user'
    RequestBody_System_Aaa_Authentication_Admin-user_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_Config'
    RequestBody_System_Aaa_Authentication_Admin-user_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_State'
    RequestBody_System_Aaa_Authentication_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_Config'
    RequestBody_System_Aaa_Authentication_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_State'
    RequestBody_System_Aaa_Authentication_Users:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_Users'
    RequestBody_System_Aaa_Authentication_Users_User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_Users_User'
    RequestBody_System_Aaa_Authentication_Users_User_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_Config'
    RequestBody_System_Aaa_Authentication_Users_User_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_State'
    RequestBody_System_Aaa_Authorization:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authorization'
    RequestBody_System_Aaa_Authorization_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authorization_Config'
    RequestBody_System_Aaa_Authorization_Events:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authorization_Events'
    RequestBody_System_Aaa_Authorization_Events_Event:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event'
    RequestBody_System_Aaa_Authorization_Events_Event_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_Config'
    RequestBody_System_Aaa_Authorization_Events_Event_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_State'
    RequestBody_System_Aaa_Authorization_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Authorization_State'
    RequestBody_System_Aaa_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Config'
    RequestBody_System_Aaa_Server-groups:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups'
    RequestBody_System_Aaa_Server-groups_Server-group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group'
    RequestBody_System_Aaa_Server-groups_Server-group_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Config'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Config'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_State'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config'
    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State'
    RequestBody_System_Aaa_Server-groups_Server-group_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_State'
    RequestBody_System_Aaa_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Aaa_State'
    RequestBody_System_Clock:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Clock'
    RequestBody_System_Clock_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Clock_Config'
    RequestBody_System_Clock_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Clock_State'
    RequestBody_System_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Config'
    RequestBody_System_Dns:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns'
    RequestBody_System_Dns_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Config'
    RequestBody_System_Dns_Host-entries:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Host-entries'
    RequestBody_System_Dns_Host-entries_Host-entry:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry'
    RequestBody_System_Dns_Host-entries_Host-entry_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_Config'
    RequestBody_System_Dns_Host-entries_Host-entry_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_State'
    RequestBody_System_Dns_Servers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Servers'
    RequestBody_System_Dns_Servers_Server:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Servers_Server'
    RequestBody_System_Dns_Servers_Server_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Servers_Server_Config'
    RequestBody_System_Dns_Servers_Server_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_Servers_Server_State'
    RequestBody_System_Dns_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Dns_State'
    RequestBody_System_Logging:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging'
    RequestBody_System_Logging_Console:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Console'
    RequestBody_System_Logging_Console_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Console_Config'
    RequestBody_System_Logging_Console_Selectors:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Console_Selectors'
    RequestBody_System_Logging_Console_Selectors_Selector:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector'
    RequestBody_System_Logging_Console_Selectors_Selector_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_Config'
    RequestBody_System_Logging_Console_Selectors_Selector_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_State'
    RequestBody_System_Logging_Console_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Console_State'
    RequestBody_System_Logging_Remote-servers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Remote-servers'
    RequestBody_System_Logging_Remote-servers_Remote-server:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server'
    RequestBody_System_Logging_Remote-servers_Remote-server_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Config'
    RequestBody_System_Logging_Remote-servers_Remote-server_Selectors:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors'
    RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector'
    RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config'
    RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_State'
    RequestBody_System_Logging_Remote-servers_Remote-server_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_State'
    RequestBody_System_Memory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Memory'
    RequestBody_System_Memory_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Memory_Config'
    RequestBody_System_Memory_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Memory_State'
    RequestBody_System_Ntp:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp'
    RequestBody_System_Ntp_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Config'
    RequestBody_System_Ntp_Ntp-keys:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Ntp-keys'
    RequestBody_System_Ntp_Ntp-keys_Ntp-key:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key'
    RequestBody_System_Ntp_Ntp-keys_Ntp-key_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_Config'
    RequestBody_System_Ntp_Ntp-keys_Ntp-key_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_State'
    RequestBody_System_Ntp_Servers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Servers'
    RequestBody_System_Ntp_Servers_Server:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Servers_Server'
    RequestBody_System_Ntp_Servers_Server_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Servers_Server_Config'
    RequestBody_System_Ntp_Servers_Server_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_Servers_Server_State'
    RequestBody_System_Ntp_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ntp_State'
    RequestBody_System_Openflow:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow'
    RequestBody_System_Openflow_Agent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Agent'
    RequestBody_System_Openflow_Agent_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Agent_Config'
    RequestBody_System_Openflow_Agent_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Agent_State'
    RequestBody_System_Openflow_Controllers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Controllers'
    RequestBody_System_Openflow_Controllers_Controller:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Controllers_Controller'
    RequestBody_System_Openflow_Controllers_Controller_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Config'
    RequestBody_System_Openflow_Controllers_Controller_Connections:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections'
    RequestBody_System_Openflow_Controllers_Controller_Connections_Connection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection'
    RequestBody_System_Openflow_Controllers_Controller_Connections_Connection_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_Config'
    RequestBody_System_Openflow_Controllers_Controller_Connections_Connection_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_State'
    RequestBody_System_Openflow_Controllers_Controller_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_State'
    RequestBody_System_Processes:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Processes'
    RequestBody_System_Processes_Process:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Processes_Process'
    RequestBody_System_Processes_Process_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Processes_Process_State'
    RequestBody_System_Ssh-server:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ssh-server'
    RequestBody_System_Ssh-server_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ssh-server_Config'
    RequestBody_System_Ssh-server_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Ssh-server_State'
    RequestBody_System_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_State'
    RequestBody_System_Telnet-server:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Telnet-server'
    RequestBody_System_Telnet-server_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Telnet-server_Config'
    RequestBody_System_Telnet-server_State:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/System_Telnet-server_State'
  schemas:
    AdditionalPropertiesUnchTarget:
      description: both the additional property 'unchanged' and the 'target'
      properties:
        target:
          description: an override of the target (target)
          title: target
          type: string
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertiesUnchTarget
      type: object
    AdditionalPropertyTarget:
      description: Optionally specify a target other than the default (only on PATCH
        method)
      properties:
        target:
          description: an override of the target (target)
          title: target
          type: string
      title: AdditionalPropertyTarget
      type: object
    AdditionalPropertyUnchanged:
      description: To optionally omit 'required' properties, add them to 'unchanged'
        list
      properties:
        unchanged:
          description: A comma seperated list of unchanged mandatory attribute names
          title: unchanged
          type: string
      title: AdditionalPropertyUnchanged
      type: object
    Components:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: Enclosing container for the components in the system.
      properties:
        component:
          $ref: '#/components/schemas/Components_Component_List'
      title: Components
      type: object
    Components_Component:
      description: List of components, keyed by component name. (single)
      properties:
        config:
          $ref: '#/components/schemas/Components_Component_Config'
        name:
          description: References the component name
          title: name
          type: string
          x-go-type: ListKey
          x-leafref: ../config/name
        properties:
          $ref: '#/components/schemas/Components_Component_Properties'
        state:
          $ref: '#/components/schemas/Components_Component_State'
        subcomponents:
          $ref: '#/components/schemas/Components_Component_Subcomponents'
      required:
      - name
      title: Components_Component
      type: object
      x-list-multiple: true
    Components_Component_Config:
      description: Configuration data for each component
      properties:
        name:
          description: |-
            Device name for the component -- this will not be a
            configurable parameter on many implementations
          title: name
          type: string
      title: Components_Component_Config
      type: object
    Components_Component_List:
      description: List of components, keyed by component name. (list)
      items:
        $ref: '#/components/schemas/Components_Component'
      type: array
      uniqueItems: true
      x-keys:
      - name
      x-list-multiple: true
    Components_Component_Properties:
      description: 'Enclosing container '
      properties:
        property:
          $ref: '#/components/schemas/Components_Component_Properties_Property_List'
      title: Components_Component_Properties
      type: object
    Components_Component_Properties_Property:
      description: List of system properties for the component (single)
      properties:
        config:
          $ref: '#/components/schemas/Components_Component_Properties_Property_Config'
        name:
          description: Reference to the property name.
          title: name
          type: string
          x-go-type: ListKey
          x-leafref: ../config/name
        state:
          $ref: '#/components/schemas/Components_Component_Properties_Property_State'
      required:
      - name
      title: Components_Component_Properties_Property
      type: object
      x-list-multiple: true
    Components_Component_Properties_Property_Config:
      description: Configuration data for each property
      properties:
        name:
          description: |-
            System-supplied name of the property -- this is typically
            non-configurable
          title: name
          type: string
        value:
          description: |-
            Property values can take on a variety of types.  Signed and
            unsigned integer types may be provided in smaller sizes,
            e.g., int8, uint16, etc.
          title: value
          type: string
      title: Components_Component_Properties_Property_Config
      type: object
    Components_Component_Properties_Property_List:
      description: List of system properties for the component (list)
      items:
        $ref: '#/components/schemas/Components_Component_Properties_Property'
      type: array
      uniqueItems: true
      x-keys:
      - name
      x-list-multiple: true
    Components_Component_Properties_Property_State:
      description: Operational state data for each property
      properties:
        configurable:
          description: Indication whether the property is user-configurable
          title: configurable
          type: boolean
        name:
          description: |-
            System-supplied name of the property -- this is typically
            non-configurable
          title: name
          type: string
        value:
          description: |-
            Property values can take on a variety of types.  Signed and
            unsigned integer types may be provided in smaller sizes,
            e.g., int8, uint16, etc.
          title: value
          type: string
      title: Components_Component_Properties_Property_State
      type: object
    Components_Component_State:
      description: Operational state data for each component
      properties:
        description:
          description: System-supplied description of the component
          title: description
          type: string
        id:
          description: |-
            Unique identifier assigned by the system for the
            component
          title: id
          type: string
        mfg-name:
          description: |-
            System-supplied identifier for the manufacturer of the
            component.  This data is particularly useful when a
            component manufacturer is different than the overall
            device vendor.
          title: mfg-name
          type: string
        name:
          description: |-
            Device name for the component -- this will not be a
            configurable parameter on many implementations
          title: name
          type: string
        part-no:
          description: |-
            System-assigned part number for the component.  This should
            be present in particular if the component is also an FRU
            (field replacable unit)
          title: part-no
          type: string
        serial-no:
          description: System-assigned serial number of the component.
          title: serial-no
          type: string
        temperature:
          $ref: '#/components/schemas/Components_Component_State_Temperature'
        type:
          description: Type of component as identified by the system
          title: type
          type: string
        version:
          description: |-
            System-defined version string for a hardware, firmware,
            or software component.
          title: version
          type: string
      title: Components_Component_State
      type: object
    Components_Component_State_Temperature:
      description: |-
        Temperature in degrees Celsius of the component. Values include
        the instantaneous, average, minimum, and maximum statistics. If
        avg/min/max statistics are not supported, the target is expected
        to just supply the instant value
      properties:
        avg:
          description: |-
            The arithmetic mean value of the statistic over the
            sampling period.
          maximum: 922337203685477600
          minimum: -922337203685477600
          title: avg
          type: number
        instant:
          description: The instantaneous value of the statistic.
          maximum: 922337203685477600
          minimum: -922337203685477600
          title: instant
          type: number
        max:
          description: |-
            The maximum value of the statistic over the sampling
            period
          maximum: 922337203685477600
          minimum: -922337203685477600
          title: max
          type: number
        min:
          description: |-
            The minimum value of the statistic over the sampling
            period
          maximum: 922337203685477600
          minimum: -922337203685477600
          title: min
          type: number
      title: Components_Component_State_Temperature
      type: object
    Components_Component_Subcomponents:
      description: Enclosing container for subcomponent references
      properties:
        subcomponent:
          $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_List'
      title: Components_Component_Subcomponents
      type: object
    Components_Component_Subcomponents_Subcomponent:
      description: List of subcomponent references (single)
      properties:
        config:
          $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_Config'
        name:
          description: Reference to the name list key
          title: name
          type: string
          x-go-type: ListKey
          x-leafref: ../config/name
        state:
          $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_State'
      required:
      - name
      title: Components_Component_Subcomponents_Subcomponent
      type: object
      x-list-multiple: true
    Components_Component_Subcomponents_Subcomponent_Config:
      description: 'Configuration data '
      properties:
        name:
          description: Reference to the name of the subcomponent
          title: name
          type: string
          x-leafref: ../../../../../component/config/name
      title: Components_Component_Subcomponents_Subcomponent_Config
      type: object
    Components_Component_Subcomponents_Subcomponent_List:
      description: List of subcomponent references (list)
      items:
        $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent'
      type: array
      uniqueItems: true
      x-keys:
      - name
      x-list-multiple: true
    Components_Component_Subcomponents_Subcomponent_State:
      description: 'Operational state data '
      properties:
        name:
          description: Reference to the name of the subcomponent
          title: name
          type: string
          x-leafref: ../../../../../component/config/name
      title: Components_Component_Subcomponents_Subcomponent_State
      type: object
    Interfaces:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: |-
        Top level container for interfaces, including configuration
        and state data.
      properties:
        interface:
          $ref: '#/components/schemas/Interfaces_Interface_List'
      title: Interfaces
      type: object
    Interfaces_Interface:
      description: The list of named interfaces on the device. (single)
      properties:
        config:
          $ref: '#/components/schemas/Interfaces_Interface_Config'
        hold-time:
          $ref: '#/components/schemas/Interfaces_Interface_Hold-time'
        name:
          description: References the configured name of the interface
          title: name
          type: string
          x-go-type: ListKey
          x-leafref: ../config/name
        state:
          $ref: '#/components/schemas/Interfaces_Interface_State'
        subinterfaces:
          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces'
      required:
      - name
      title: Interfaces_Interface
      type: object
      x-list-multiple: true
    Interfaces_Interface_Config:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: |-
        Configurable items at the global, physical interface
        level
      properties:
        description:
          description: |-
            A textual description of the interface.

            A server implementation MAY map this leaf to the ifAlias
            MIB object.  Such an implementation needs to use some
            mechanism to handle the differences in size and characters
            allowed between this leaf and ifAlias.  The definition of
            such a mechanism is outside the scope of this document.

            Since ifAlias is defined to be stored in non-volatile
            storage, the MIB implementation MUST map ifAlias to the
            value of 'description' in the persistently stored
            datastore.

            Specifically, if the device supports ':startup', when
            ifAlias is read the device MUST return the value of
            'description' in the 'startup' datastore, and when it is
            written, it MUST be written to the 'running' and 'startup'
            datastores.  Note that it is up to the implementation to

            decide whether to modify this single leaf in 'startup' or
            perform an implicit copy-config from 'running' to
            'startup'.

            If the device does not support ':startup', ifAlias MUST
            be mapped to the 'description' leaf in the 'running'
            datastore.
          title: description
          type: string
        enabled:
          default: true
          description: |-
            This leaf contains the configured, desired state of the
            interface.

            Systems that implement the IF-MIB use the value of this
            leaf in the 'running' datastore to set
            IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
            has been initialized, as described in RFC 2863.

            Changes in this leaf in the 'running' datastore are
            reflected in ifAdminStatus, but if ifAdminStatus is
            changed over SNMP, this leaf is not affected.
          title: enabled
          type: boolean
        mtu:
          description: |-
            Set the max transmission unit size in octets
            for the physical interface.  If this is not set, the mtu is
            set to the operational default -- e.g., 1514 bytes on an
            Ethernet interface.
          maximum: 65535
          minimum: 0
          title: mtu
          type: integer
        name:
          description: |-
            The name of the interface.

            A device MAY restrict the allowed values for this leaf,
            possibly depending on the type of the interface.
            For system-controlled interfaces, this leaf is the
            device-specific name of the interface.  The 'config false'
            list interfaces/interface[name]/state contains the currently
            existing interfaces on the device.

            If a client tries to create configuration for a
            system-controlled interface that is not present in the
            corresponding state list, the server MAY reject
            the request if the implementation does not support
            pre-provisioning of interfaces or if the name refers to
            an interface that can never exist in the system.  A
            NETCONF server MUST reply with an rpc-error with the
            error-tag 'invalid-value' in this case.

            The IETF model in RFC 7223 provides YANG features for the
            following (i.e., pre-provisioning and arbitrary-names),
            however they are omitted here:

             If the device supports pre-provisioning of interface
             configuration, the 'pre-provisioning' feature is
             advertised.

             If the device allows arbitrarily named user-controlled
             interfaces, the 'arbitrary-names' feature is advertised.

            When a configured user-controlled interface is created by
            the system, it is instantiated with the same name in the
            /interfaces/interface[name]/state list.
          title: name
          type: string
        type:
          description: |-
            The type of the interface.

            When an interface entry is created, a server MAY
            initialize the type leaf with a valid value, e.g., if it
            is possible to derive the type from the name of the
            interface.

            If a client tries to set the type of an interface to a
            value that can never be used by the system, e.g., if the
            type is not supported or if the type does not match the
            name of the interface, the server MUST reject the request.
            A NETCONF server MUST reply with an rpc-error with the
            error-tag 'invalid-value' in this case.
          title: type
          type: string
      required:
      - type
      title: Interfaces_Interface_Config
      type: object
    Interfaces_Interface_Hold-time:
      description: |-
        Top-level container for hold-time settings to enable
        dampening advertisements of interface transitions.
      properties:
        config:
          $ref: '#/components/schemas/Interfaces_Interface_Hold-time_Config'
        state:
          $ref: '#/components/schemas/Interfaces_Interface_Hold-time_State'
      title: Interfaces_Interface_Hold-time
      type: object
    Interfaces_Interface_Hold-time_Config:
      description: Configuration data for interface hold-time settings.
      properties:
        down:
          description: |-
            Dampens advertisement when the interface transitions from
            up to down.  A zero value means dampening is turned off,
            i.e., immediate notification.
          format: int32
          minimum: 0
          title: down
          type: integer
        up:
          description: |-
            Dampens advertisement when the interface
            transitions from down to up.  A zero value means dampening
            is turned off, i.e., immediate notification.
          format: int32
          minimum: 0
          title: up
          type: integer
      title: Interfaces_Interface_Hold-time_Config
      type: object
    Interfaces_Interface_Hold-time_State:
      description: Operational state data for interface hold-time.
      properties:
        down:
          description: |-
            Dampens advertisement when the interface transitions from
            up to down.  A zero value means dampening is turned off,
            i.e., immediate notification.
          format: int32
          minimum: 0
          title: down
          type: integer
        up:
          description: |-
            Dampens advertisement when the interface
            transitions from down to up.  A zero value means dampening
            is turned off, i.e., immediate notification.
          format: int32
          minimum: 0
          title: up
          type: integer
      title: Interfaces_Interface_Hold-time_State
      type: object
    Interfaces_Interface_List:
      description: The list of named interfaces on the device. (list)
      items:
        $ref: '#/components/schemas/Interfaces_Interface'
      type: array
      uniqueItems: true
      x-keys:
      - name
      x-list-multiple: true
    Interfaces_Interface_State:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: Operational state data at the global interface level
      properties:
        admin-status:
          description: |-
            The desired state of the interface.  In RFC 7223 this leaf
            has the same read semantics as ifAdminStatus.  Here, it
            reflects the administrative state as set by enabling or
            disabling the interface.
          title: admin-status
          type: string
        counters:
          $ref: '#/components/schemas/Interfaces_Interface_State_Counters'
        description:
          description: |-
            A textual description of the interface.

            A server implementation MAY map this leaf to the ifAlias
            MIB object.  Such an implementation needs to use some
            mechanism to handle the differences in size and characters
            allowed between this leaf and ifAlias.  The definition of
            such a mechanism is outside the scope of this document.

            Since ifAlias is defined to be stored in non-volatile
            storage, the MIB implementation MUST map ifAlias to the
            value of 'description' in the persistently stored
            datastore.

            Specifically, if the device supports ':startup', when
            ifAlias is read the device MUST return the value of
            'description' in the 'startup' datastore, and when it is
            written, it MUST be written to the 'running' and 'startup'
            datastores.  Note that it is up to the implementation to

            decide whether to modify this single leaf in 'startup' or
            perform an implicit copy-config from 'running' to
            'startup'.

            If the device does not support ':startup', ifAlias MUST
            be mapped to the 'description' leaf in the 'running'
            datastore.
          title: description
          type: string
        enabled:
          default: true
          description: |-
            This leaf contains the configured, desired state of the
            interface.

            Systems that implement the IF-MIB use the value of this
            leaf in the 'running' datastore to set
            IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
            has been initialized, as described in RFC 2863.

            Changes in this leaf in the 'running' datastore are
            reflected in ifAdminStatus, but if ifAdminStatus is
            changed over SNMP, this leaf is not affected.
          title: enabled
          type: boolean
        hardware-port:
          description: References the hardware port in the device inventory
          title: hardware-port
          type: string
          x-leafref: /oc-platform:components/oc-platform:component/oc-platform:name
        ifindex:
          description: |-
            System assigned number for each interface.  Corresponds to
            ifIndex object in SNMP Interface MIB
          format: int32
          minimum: 0
          title: ifindex
          type: integer
        last-change:
          description: |-
            This timestamp indicates the time of the last state change
            of the interface (e.g., up-to-down transition). This
            corresponds to the ifLastChange object in the standard
            interface MIB.

            The value is the timestamp in nanoseconds relative to
            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
          format: int64
          minimum: 0
          title: last-change
          type: integer
        mtu:
          description: |-
            Set the max transmission unit size in octets
            for the physical interface.  If this is not set, the mtu is
            set to the operational default -- e.g., 1514 bytes on an
            Ethernet interface.
          maximum: 65535
          minimum: 0
          title: mtu
          type: integer
        name:
          description: |-
            The name of the interface.

            A device MAY restrict the allowed values for this leaf,
            possibly depending on the type of the interface.
            For system-controlled interfaces, this leaf is the
            device-specific name of the interface.  The 'config false'
            list interfaces/interface[name]/state contains the currently
            existing interfaces on the device.

            If a client tries to create configuration for a
            system-controlled interface that is not present in the
            corresponding state list, the server MAY reject
            the request if the implementation does not support
            pre-provisioning of interfaces or if the name refers to
            an interface that can never exist in the system.  A
            NETCONF server MUST reply with an rpc-error with the
            error-tag 'invalid-value' in this case.

            The IETF model in RFC 7223 provides YANG features for the
            following (i.e., pre-provisioning and arbitrary-names),
            however they are omitted here:

             If the device supports pre-provisioning of interface
             configuration, the 'pre-provisioning' feature is
             advertised.

             If the device allows arbitrarily named user-controlled
             interfaces, the 'arbitrary-names' feature is advertised.

            When a configured user-controlled interface is created by
            the system, it is instantiated with the same name in the
            /interfaces/interface[name]/state list.
          title: name
          type: string
        oper-status:
          description: |-
            The current operational state of the interface.

            This leaf has the same semantics as ifOperStatus.
          title: oper-status
          type: string
        type:
          description: |-
            The type of the interface.

            When an interface entry is created, a server MAY
            initialize the type leaf with a valid value, e.g., if it
            is possible to derive the type from the name of the
            interface.

            If a client tries to set the type of an interface to a
            value that can never be used by the system, e.g., if the
            type is not supported or if the type does not match the
            name of the interface, the server MUST reject the request.
            A NETCONF server MUST reply with an rpc-error with the
            error-tag 'invalid-value' in this case.
          title: type
          type: string
      required:
      - admin-status
      - oper-status
      - type
      title: Interfaces_Interface_State
      type: object
    Interfaces_Interface_State_Counters:
      description: A collection of interface-related statistics objects.
      properties:
        carrier-transitions:
          description: |-
            Number of times the interface state has transitioned
            between up and down since the time the device restarted
            or the last-clear time, whichever is most recent.
          format: int64
          minimum: 0
          title: carrier-transitions
          type: integer
        in-broadcast-pkts:
          description: |-
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, that were addressed to a broadcast
            address at this sub-layer.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-broadcast-pkts
          type: integer
        in-discards:
          description: |-
            The number of inbound packets that were chosen to be
            discarded even though no errors had been detected to
            prevent their being deliverable to a higher-layer
            protocol.  One possible reason for discarding such a
            packet could be to free up buffer space.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-discards
          type: integer
        in-errors:
          description: |-
            For packet-oriented interfaces, the number of inbound
            packets that contained errors preventing them from being
            deliverable to a higher-layer protocol.  For character-
            oriented or fixed-length interfaces, the number of
            inbound transmission units that contained errors
            preventing them from being deliverable to a higher-layer
            protocol.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-errors
          type: integer
        in-fcs-errors:
          description: |-
            Number of received packets which had errors in the
            frame check sequence (FCS), i.e., framing errors.

            Discontinuities in the value of this counter can occur
            when the device is re-initialization as indicated by the
            value of 'last-clear'.
          format: int64
          minimum: 0
          title: in-fcs-errors
          type: integer
        in-multicast-pkts:
          description: |-
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, that were addressed to a multicast
            address at this sub-layer.  For a MAC-layer protocol,
            this includes both Group and Functional addresses.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-multicast-pkts
          type: integer
        in-octets:
          description: |-
            The total number of octets received on the interface,
            including framing characters.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-octets
          type: integer
        in-unicast-pkts:
          description: |-
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, that were not addressed to a
            multicast or broadcast address at this sub-layer.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-unicast-pkts
          type: integer
        in-unknown-protos:
          description: |-
            For packet-oriented interfaces, the number of packets
            received via the interface that were discarded because
            of an unknown or unsupported protocol.  For
            character-oriented or fixed-length interfaces that
            support protocol multiplexing, the number of
            transmission units received via the interface that were
            discarded because of an unknown or unsupported protocol.
            For any interface that does not support protocol
            multiplexing, this counter is not present.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-unknown-protos
          type: integer
        last-clear:
          description: |-
            Timestamp of the last time the interface counters were
            cleared.

            The value is the timestamp in nanoseconds relative to
            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
          format: int64
          minimum: 0
          title: last-clear
          type: integer
        out-broadcast-pkts:
          description: |-
            The total number of packets that higher-level protocols
            requested be transmitted, and that were addressed to a
            broadcast address at this sub-layer, including those
            that were discarded or not sent.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-broadcast-pkts
          type: integer
        out-discards:
          description: |-
            The number of outbound packets that were chosen to be
            discarded even though no errors had been detected to
            prevent their being transmitted.  One possible reason
            for discarding such a packet could be to free up buffer
            space.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-discards
          type: integer
        out-errors:
          description: |-
            For packet-oriented interfaces, the number of outbound
            packets that could not be transmitted because of errors.
            For character-oriented or fixed-length interfaces, the
            number of outbound transmission units that could not be
            transmitted because of errors.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-errors
          type: integer
        out-multicast-pkts:
          description: |-
            The total number of packets that higher-level protocols
            requested be transmitted, and that were addressed to a
            multicast address at this sub-layer, including those
            that were discarded or not sent.  For a MAC-layer
            protocol, this includes both Group and Functional
            addresses.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-multicast-pkts
          type: integer
        out-octets:
          description: |-
            The total number of octets transmitted out of the
            interface, including framing characters.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-octets
          type: integer
        out-unicast-pkts:
          description: |-
            The total number of packets that higher-level protocols
            requested be transmitted, and that were not addressed
            to a multicast or broadcast address at this sub-layer,
            including those that were discarded or not sent.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-unicast-pkts
          type: integer
      title: Interfaces_Interface_State_Counters
      type: object
    Interfaces_Interface_Subinterfaces:
      description: |-
        Enclosing container for the list of subinterfaces associated
        with a physical interface
      properties:
        subinterface:
          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_List'
      title: Interfaces_Interface_Subinterfaces
      type: object
    Interfaces_Interface_Subinterfaces_Subinterface:
      description: |-
        The list of subinterfaces (logical interfaces) associated
        with a physical interface (single)
      properties:
        config:
          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_Config'
        index:
          description: |-
            The index number of the subinterface -- used to address
            the logical interface
          format: int32
          title: index
          type: integer
          x-leafref: ../config/index
        state:
          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State'
      required:
      - index
      title: Interfaces_Interface_Subinterfaces_Subinterface
      type: object
      x-list-multiple: true
    Interfaces_Interface_Subinterfaces_Subinterface_Config:
      description: Configurable items at the subinterface level
      properties:
        description:
          description: |-
            A textual description of the interface.

            A server implementation MAY map this leaf to the ifAlias
            MIB object.  Such an implementation needs to use some
            mechanism to handle the differences in size and characters
            allowed between this leaf and ifAlias.  The definition of
            such a mechanism is outside the scope of this document.

            Since ifAlias is defined to be stored in non-volatile
            storage, the MIB implementation MUST map ifAlias to the
            value of 'description' in the persistently stored
            datastore.

            Specifically, if the device supports ':startup', when
            ifAlias is read the device MUST return the value of
            'description' in the 'startup' datastore, and when it is
            written, it MUST be written to the 'running' and 'startup'
            datastores.  Note that it is up to the implementation to

            decide whether to modify this single leaf in 'startup' or
            perform an implicit copy-config from 'running' to
            'startup'.

            If the device does not support ':startup', ifAlias MUST
            be mapped to the 'description' leaf in the 'running'
            datastore.
          title: description
          type: string
        enabled:
          default: true
          description: |-
            This leaf contains the configured, desired state of the
            interface.

            Systems that implement the IF-MIB use the value of this
            leaf in the 'running' datastore to set
            IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
            has been initialized, as described in RFC 2863.

            Changes in this leaf in the 'running' datastore are
            reflected in ifAdminStatus, but if ifAdminStatus is
            changed over SNMP, this leaf is not affected.
          title: enabled
          type: boolean
        index:
          description: |-
            The index of the subinterface, or logical interface number.
            On systems with no support for subinterfaces, or not using
            subinterfaces, this value should default to 0, i.e., the
            default subinterface.
          format: int32
          minimum: 0
          title: index
          type: integer
      title: Interfaces_Interface_Subinterfaces_Subinterface_Config
      type: object
    Interfaces_Interface_Subinterfaces_Subinterface_List:
      description: |-
        The list of subinterfaces (logical interfaces) associated
        with a physical interface (list)
      items:
        $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface'
      type: array
      uniqueItems: true
      x-keys:
      - index
      x-list-multiple: true
    Interfaces_Interface_Subinterfaces_Subinterface_State:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: Operational state data for logical interfaces
      properties:
        admin-status:
          description: |-
            The desired state of the interface.  In RFC 7223 this leaf
            has the same read semantics as ifAdminStatus.  Here, it
            reflects the administrative state as set by enabling or
            disabling the interface.
          title: admin-status
          type: string
        counters:
          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State_Counters'
        description:
          description: |-
            A textual description of the interface.

            A server implementation MAY map this leaf to the ifAlias
            MIB object.  Such an implementation needs to use some
            mechanism to handle the differences in size and characters
            allowed between this leaf and ifAlias.  The definition of
            such a mechanism is outside the scope of this document.

            Since ifAlias is defined to be stored in non-volatile
            storage, the MIB implementation MUST map ifAlias to the
            value of 'description' in the persistently stored
            datastore.

            Specifically, if the device supports ':startup', when
            ifAlias is read the device MUST return the value of
            'description' in the 'startup' datastore, and when it is
            written, it MUST be written to the 'running' and 'startup'
            datastores.  Note that it is up to the implementation to

            decide whether to modify this single leaf in 'startup' or
            perform an implicit copy-config from 'running' to
            'startup'.

            If the device does not support ':startup', ifAlias MUST
            be mapped to the 'description' leaf in the 'running'
            datastore.
          title: description
          type: string
        enabled:
          default: true
          description: |-
            This leaf contains the configured, desired state of the
            interface.

            Systems that implement the IF-MIB use the value of this
            leaf in the 'running' datastore to set
            IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
            has been initialized, as described in RFC 2863.

            Changes in this leaf in the 'running' datastore are
            reflected in ifAdminStatus, but if ifAdminStatus is
            changed over SNMP, this leaf is not affected.
          title: enabled
          type: boolean
        ifindex:
          description: |-
            System assigned number for each interface.  Corresponds to
            ifIndex object in SNMP Interface MIB
          format: int32
          minimum: 0
          title: ifindex
          type: integer
        index:
          description: |-
            The index of the subinterface, or logical interface number.
            On systems with no support for subinterfaces, or not using
            subinterfaces, this value should default to 0, i.e., the
            default subinterface.
          format: int32
          minimum: 0
          title: index
          type: integer
        last-change:
          description: |-
            This timestamp indicates the time of the last state change
            of the interface (e.g., up-to-down transition). This
            corresponds to the ifLastChange object in the standard
            interface MIB.

            The value is the timestamp in nanoseconds relative to
            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
          format: int64
          minimum: 0
          title: last-change
          type: integer
        name:
          description: |-
            The system-assigned name for the sub-interface.  This MAY
            be a combination of the base interface name and the
            subinterface index, or some other convention used by the
            system.
          title: name
          type: string
        oper-status:
          description: |-
            The current operational state of the interface.

            This leaf has the same semantics as ifOperStatus.
          title: oper-status
          type: string
      required:
      - admin-status
      - oper-status
      title: Interfaces_Interface_Subinterfaces_Subinterface_State
      type: object
    Interfaces_Interface_Subinterfaces_Subinterface_State_Counters:
      description: A collection of interface-related statistics objects.
      properties:
        carrier-transitions:
          description: |-
            Number of times the interface state has transitioned
            between up and down since the time the device restarted
            or the last-clear time, whichever is most recent.
          format: int64
          minimum: 0
          title: carrier-transitions
          type: integer
        in-broadcast-pkts:
          description: |-
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, that were addressed to a broadcast
            address at this sub-layer.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-broadcast-pkts
          type: integer
        in-discards:
          description: |-
            The number of inbound packets that were chosen to be
            discarded even though no errors had been detected to
            prevent their being deliverable to a higher-layer
            protocol.  One possible reason for discarding such a
            packet could be to free up buffer space.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-discards
          type: integer
        in-errors:
          description: |-
            For packet-oriented interfaces, the number of inbound
            packets that contained errors preventing them from being
            deliverable to a higher-layer protocol.  For character-
            oriented or fixed-length interfaces, the number of
            inbound transmission units that contained errors
            preventing them from being deliverable to a higher-layer
            protocol.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-errors
          type: integer
        in-fcs-errors:
          description: |-
            Number of received packets which had errors in the
            frame check sequence (FCS), i.e., framing errors.

            Discontinuities in the value of this counter can occur
            when the device is re-initialization as indicated by the
            value of 'last-clear'.
          format: int64
          minimum: 0
          title: in-fcs-errors
          type: integer
        in-multicast-pkts:
          description: |-
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, that were addressed to a multicast
            address at this sub-layer.  For a MAC-layer protocol,
            this includes both Group and Functional addresses.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-multicast-pkts
          type: integer
        in-octets:
          description: |-
            The total number of octets received on the interface,
            including framing characters.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-octets
          type: integer
        in-unicast-pkts:
          description: |-
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, that were not addressed to a
            multicast or broadcast address at this sub-layer.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-unicast-pkts
          type: integer
        in-unknown-protos:
          description: |-
            For packet-oriented interfaces, the number of packets
            received via the interface that were discarded because
            of an unknown or unsupported protocol.  For
            character-oriented or fixed-length interfaces that
            support protocol multiplexing, the number of
            transmission units received via the interface that were
            discarded because of an unknown or unsupported protocol.
            For any interface that does not support protocol
            multiplexing, this counter is not present.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: in-unknown-protos
          type: integer
        last-clear:
          description: |-
            Timestamp of the last time the interface counters were
            cleared.

            The value is the timestamp in nanoseconds relative to
            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
          format: int64
          minimum: 0
          title: last-clear
          type: integer
        out-broadcast-pkts:
          description: |-
            The total number of packets that higher-level protocols
            requested be transmitted, and that were addressed to a
            broadcast address at this sub-layer, including those
            that were discarded or not sent.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-broadcast-pkts
          type: integer
        out-discards:
          description: |-
            The number of outbound packets that were chosen to be
            discarded even though no errors had been detected to
            prevent their being transmitted.  One possible reason
            for discarding such a packet could be to free up buffer
            space.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-discards
          type: integer
        out-errors:
          description: |-
            For packet-oriented interfaces, the number of outbound
            packets that could not be transmitted because of errors.
            For character-oriented or fixed-length interfaces, the
            number of outbound transmission units that could not be
            transmitted because of errors.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-errors
          type: integer
        out-multicast-pkts:
          description: |-
            The total number of packets that higher-level protocols
            requested be transmitted, and that were addressed to a
            multicast address at this sub-layer, including those
            that were discarded or not sent.  For a MAC-layer
            protocol, this includes both Group and Functional
            addresses.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-multicast-pkts
          type: integer
        out-octets:
          description: |-
            The total number of octets transmitted out of the
            interface, including framing characters.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-octets
          type: integer
        out-unicast-pkts:
          description: |-
            The total number of packets that higher-level protocols
            requested be transmitted, and that were not addressed
            to a multicast or broadcast address at this sub-layer,
            including those that were discarded or not sent.

            Discontinuities in the value of this counter can occur
            at re-initialization of the management system, and at
            other times as indicated by the value of
            'last-clear'.
          format: int64
          minimum: 0
          title: out-unicast-pkts
          type: integer
      title: Interfaces_Interface_Subinterfaces_Subinterface_State_Counters
      type: object
    System:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyTarget'
      description: |-
        Enclosing container for system-related configuration and
        operational state data
      properties:
        aaa:
          $ref: '#/components/schemas/System_Aaa'
        clock:
          $ref: '#/components/schemas/System_Clock'
        config:
          $ref: '#/components/schemas/System_Config'
        dns:
          $ref: '#/components/schemas/System_Dns'
        logging:
          $ref: '#/components/schemas/System_Logging'
        memory:
          $ref: '#/components/schemas/System_Memory'
        ntp:
          $ref: '#/components/schemas/System_Ntp'
        openflow:
          $ref: '#/components/schemas/System_Openflow'
        processes:
          $ref: '#/components/schemas/System_Processes'
        ssh-server:
          $ref: '#/components/schemas/System_Ssh-server'
        state:
          $ref: '#/components/schemas/System_State'
        telnet-server:
          $ref: '#/components/schemas/System_Telnet-server'
      title: System
      type: object
    System_Aaa:
      description: Top-level container for AAA services
      properties:
        accounting:
          $ref: '#/components/schemas/System_Aaa_Accounting'
        authentication:
          $ref: '#/components/schemas/System_Aaa_Authentication'
        authorization:
          $ref: '#/components/schemas/System_Aaa_Authorization'
        config:
          $ref: '#/components/schemas/System_Aaa_Config'
        server-groups:
          $ref: '#/components/schemas/System_Aaa_Server-groups'
        state:
          $ref: '#/components/schemas/System_Aaa_State'
      title: System_Aaa
      type: object
    System_Aaa_Accounting:
      description: Top-level container for AAA accounting
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Accounting_Config'
        events:
          $ref: '#/components/schemas/System_Aaa_Accounting_Events'
        state:
          $ref: '#/components/schemas/System_Aaa_Accounting_State'
      title: System_Aaa_Accounting
      type: object
    System_Aaa_Accounting_Config:
      description: Configuration data for user activity accounting.
      properties:
        accounting-method:
          items:
            description: |-
              The method used for AAA accounting for this event
              type.  The method is defined by the destination for
              accounting data, which may be specified as the group of
              all TACACS+/RADIUS servers, a defined server group, or
              the local system.
            title: accounting-method
            type: string
          title: accounting-method
          type: array
      title: System_Aaa_Accounting_Config
      type: object
    System_Aaa_Accounting_Events:
      description: |-
        Enclosing container for defining handling of events
        for accounting
      properties:
        event:
          $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_List'
      title: System_Aaa_Accounting_Events
      type: object
    System_Aaa_Accounting_Events_Event:
      description: List of events subject to accounting (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_Config'
        event-type:
          description: |-
            Reference to the event-type being logged at the
            accounting server
          title: event-type
          type: string
          x-go-type: ListKey
          x-leafref: ../config/event-type
        state:
          $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_State'
      required:
      - event-type
      title: System_Aaa_Accounting_Events_Event
      type: object
      x-list-multiple: true
    System_Aaa_Accounting_Events_Event_Config:
      description: Configuration data for accounting events
      properties:
        event-type:
          description: |-
            The type of activity to record at the AAA accounting
            server
          enum:
          - AAA_ACCOUNTING_EVENT_COMMAND
          - AAA_ACCOUNTING_EVENT_LOGIN
          - AAA_AUTHORIZATION_EVENT_COMMAND
          - AAA_AUTHORIZATION_EVENT_CONFIG
          title: event-type
          type: string
        record:
          description: |-
            Type of record to send to the accounting server for this
            activity type
          title: record
          type: string
      title: System_Aaa_Accounting_Events_Event_Config
      type: object
    System_Aaa_Accounting_Events_Event_List:
      description: List of events subject to accounting (list)
      items:
        $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event'
      type: array
      uniqueItems: true
      x-keys:
      - event-type
      x-list-multiple: true
    System_Aaa_Accounting_Events_Event_State:
      description: Operational state data for accounting events
      properties:
        event-type:
          description: |-
            The type of activity to record at the AAA accounting
            server
          enum:
          - AAA_ACCOUNTING_EVENT_COMMAND
          - AAA_ACCOUNTING_EVENT_LOGIN
          - AAA_AUTHORIZATION_EVENT_COMMAND
          - AAA_AUTHORIZATION_EVENT_CONFIG
          title: event-type
          type: string
        record:
          description: |-
            Type of record to send to the accounting server for this
            activity type
          title: record
          type: string
      title: System_Aaa_Accounting_Events_Event_State
      type: object
    System_Aaa_Accounting_State:
      description: Operational state data for user accounting.
      properties:
        accounting-method:
          items:
            description: |-
              The method used for AAA accounting for this event
              type.  The method is defined by the destination for
              accounting data, which may be specified as the group of
              all TACACS+/RADIUS servers, a defined server group, or
              the local system.
            title: accounting-method
            type: string
          title: accounting-method
          type: array
      title: System_Aaa_Accounting_State
      type: object
    System_Aaa_Authentication:
      description: Top-level container for global authentication data
      properties:
        admin-user:
          $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user'
        config:
          $ref: '#/components/schemas/System_Aaa_Authentication_Config'
        state:
          $ref: '#/components/schemas/System_Aaa_Authentication_State'
        users:
          $ref: '#/components/schemas/System_Aaa_Authentication_Users'
      title: System_Aaa_Authentication
      type: object
    System_Aaa_Authentication_Admin-user:
      description: |-
        Top-level container for the system root or admin user
        configuration and operational state
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_Config'
        state:
          $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_State'
      title: System_Aaa_Authentication_Admin-user
      type: object
    System_Aaa_Authentication_Admin-user_Config:
      description: Configuration data for the root user account
      properties:
        admin-password:
          description: |-
            The admin/root password, supplied as a cleartext string.
            The system should hash and only store the password as a
            hashed value.
          title: admin-password
          type: string
        admin-password-hashed:
          description: |-
            The admin/root password, supplied as a hashed value
            using the notation described in the definition of the
            crypt-password-type.
          title: admin-password-hashed
          type: string
      title: System_Aaa_Authentication_Admin-user_Config
      type: object
    System_Aaa_Authentication_Admin-user_State:
      description: Operational state data for the root user account
      properties:
        admin-password:
          description: |-
            The admin/root password, supplied as a cleartext string.
            The system should hash and only store the password as a
            hashed value.
          title: admin-password
          type: string
        admin-password-hashed:
          description: |-
            The admin/root password, supplied as a hashed value
            using the notation described in the definition of the
            crypt-password-type.
          title: admin-password-hashed
          type: string
        admin-username:
          description: |-
            Name of the administrator user account, e.g., admin, root,
            etc.
          title: admin-username
          type: string
      title: System_Aaa_Authentication_Admin-user_State
      type: object
    System_Aaa_Authentication_Config:
      description: Configuration data for global authentication services
      properties:
        authentication-method:
          items:
            description: |-
              Ordered list of authentication methods for users.  This
              can be either a reference to a server group, or a well-
              defined designation in the AAA_METHOD_TYPE identity.  If
              authentication fails with one method, the next defined
              method is tried -- failure of all methods results in the
              user being denied access.
            title: authentication-method
            type: string
          title: authentication-method
          type: array
      title: System_Aaa_Authentication_Config
      type: object
    System_Aaa_Authentication_State:
      description: |-
        Operational state data for global authentication
        services
      properties:
        authentication-method:
          items:
            description: |-
              Ordered list of authentication methods for users.  This
              can be either a reference to a server group, or a well-
              defined designation in the AAA_METHOD_TYPE identity.  If
              authentication fails with one method, the next defined
              method is tried -- failure of all methods results in the
              user being denied access.
            title: authentication-method
            type: string
          title: authentication-method
          type: array
      title: System_Aaa_Authentication_State
      type: object
    System_Aaa_Authentication_Users:
      description: Enclosing container list of local users
      properties:
        user:
          $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_List'
      title: System_Aaa_Authentication_Users
      type: object
    System_Aaa_Authentication_Users_User:
      description: List of local users on the system (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_Config'
        state:
          $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_State'
        username:
          description: References the configured username for the user
          title: username
          type: string
          x-go-type: ListKey
          x-leafref: ../config/username
      required:
      - username
      title: System_Aaa_Authentication_Users_User
      type: object
      x-list-multiple: true
    System_Aaa_Authentication_Users_User_Config:
      description: Configuration data for local users
      properties:
        password:
          description: |-
            The user password, supplied as cleartext.  The system
            must hash the value and only store the hashed value.
          title: password
          type: string
        password-hashed:
          description: |-
            The user password, supplied as a hashed value
            using the notation described in the definition of the
            crypt-password-type.
          title: password-hashed
          type: string
        role:
          description: |-
            Role assigned to the user.  The role may be supplied
            as a string or a role defined by the SYSTEM_DEFINED_ROLES
            identity.
          title: role
          type: string
        ssh-key:
          description: SSH public key for the user (RSA or DSA)
          title: ssh-key
          type: string
        username:
          description: Assigned username for this user
          title: username
          type: string
      title: System_Aaa_Authentication_Users_User_Config
      type: object
    System_Aaa_Authentication_Users_User_List:
      description: List of local users on the system (list)
      items:
        $ref: '#/components/schemas/System_Aaa_Authentication_Users_User'
      type: array
      uniqueItems: true
      x-keys:
      - username
      x-list-multiple: true
    System_Aaa_Authentication_Users_User_State:
      description: Operational state data for local users
      properties:
        password:
          description: |-
            The user password, supplied as cleartext.  The system
            must hash the value and only store the hashed value.
          title: password
          type: string
        password-hashed:
          description: |-
            The user password, supplied as a hashed value
            using the notation described in the definition of the
            crypt-password-type.
          title: password-hashed
          type: string
        role:
          description: |-
            Role assigned to the user.  The role may be supplied
            as a string or a role defined by the SYSTEM_DEFINED_ROLES
            identity.
          title: role
          type: string
        ssh-key:
          description: SSH public key for the user (RSA or DSA)
          title: ssh-key
          type: string
        username:
          description: Assigned username for this user
          title: username
          type: string
      title: System_Aaa_Authentication_Users_User_State
      type: object
    System_Aaa_Authorization:
      description: |-
        Top-level container for AAA authorization configuration
        and operational state data
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Authorization_Config'
        events:
          $ref: '#/components/schemas/System_Aaa_Authorization_Events'
        state:
          $ref: '#/components/schemas/System_Aaa_Authorization_State'
      title: System_Aaa_Authorization
      type: object
    System_Aaa_Authorization_Config:
      description: |-
        Configuration data for authorization based on AAA
        methods
      properties:
        authorization-method:
          items:
            description: |-
              Ordered list of methods for authorizing commands.  The first
              method that provides a response (positive or negative) should
              be used.  The list may contain a well-defined method such
              as the set of all TACACS or RADIUS servers, or the name of
              a defined AAA server group.  The system must validate
              that the named server group exists.
            title: authorization-method
            type: string
          title: authorization-method
          type: array
      title: System_Aaa_Authorization_Config
      type: object
    System_Aaa_Authorization_Events:
      description: |-
        Enclosing container for the set of events subject
        to authorization
      properties:
        event:
          $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_List'
      title: System_Aaa_Authorization_Events
      type: object
    System_Aaa_Authorization_Events_Event:
      description: List of events subject to AAA authorization (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_Config'
        event-type:
          description: Reference to the event-type list key
          title: event-type
          type: string
          x-go-type: ListKey
          x-leafref: ../config/event-type
        state:
          $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_State'
      required:
      - event-type
      title: System_Aaa_Authorization_Events_Event
      type: object
      x-list-multiple: true
    System_Aaa_Authorization_Events_Event_Config:
      description: Configuration data for each authorized event
      properties:
        event-type:
          description: |-
            The type of event to record at the AAA authorization
            server
          title: event-type
          type: string
      title: System_Aaa_Authorization_Events_Event_Config
      type: object
    System_Aaa_Authorization_Events_Event_List:
      description: List of events subject to AAA authorization (list)
      items:
        $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event'
      type: array
      uniqueItems: true
      x-keys:
      - event-type
      x-list-multiple: true
    System_Aaa_Authorization_Events_Event_State:
      description: Operational state data for each authorized activity
      properties:
        event-type:
          description: |-
            The type of event to record at the AAA authorization
            server
          title: event-type
          type: string
      title: System_Aaa_Authorization_Events_Event_State
      type: object
    System_Aaa_Authorization_State:
      description: Operational state data for authorization based on AAA
      properties:
        authorization-method:
          items:
            description: |-
              Ordered list of methods for authorizing commands.  The first
              method that provides a response (positive or negative) should
              be used.  The list may contain a well-defined method such
              as the set of all TACACS or RADIUS servers, or the name of
              a defined AAA server group.  The system must validate
              that the named server group exists.
            title: authorization-method
            type: string
          title: authorization-method
          type: array
      title: System_Aaa_Authorization_State
      type: object
    System_Aaa_Config:
      description: Configuration data for top level AAA services
      title: System_Aaa_Config
      type: object
    System_Aaa_Server-groups:
      description: Enclosing container for AAA server groups
      properties:
        server-group:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_List'
      title: System_Aaa_Server-groups
      type: object
    System_Aaa_Server-groups_Server-group:
      description: |-
        List of AAA server groups.  All servers in a group
        must have the same type as indicated by the server
        type. (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Config'
        name:
          description: Reference to configured name of the server group
          title: name
          type: string
          x-go-type: ListKey
          x-leafref: ../config/name
        servers:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers'
        state:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_State'
      required:
      - name
      title: System_Aaa_Server-groups_Server-group
      type: object
      x-list-multiple: true
    System_Aaa_Server-groups_Server-group_Config:
      description: Configuration data for each server group
      properties:
        name:
          description: Name for the server group
          title: name
          type: string
        type:
          description: |-
            AAA server type -- all servers in the group must be of this
            type
          enum:
          - RADIUS
          - TACACS
          title: type
          type: string
      title: System_Aaa_Server-groups_Server-group_Config
      type: object
    System_Aaa_Server-groups_Server-group_List:
      description: |-
        List of AAA server groups.  All servers in a group
        must have the same type as indicated by the server
        type. (list)
      items:
        $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group'
      type: array
      uniqueItems: true
      x-keys:
      - name
      x-list-multiple: true
    System_Aaa_Server-groups_Server-group_Servers:
      description: Enclosing container the list of servers
      properties:
        server:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_List'
      title: System_Aaa_Server-groups_Server-group_Servers
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server:
      description: List of AAA servers (single)
      properties:
        address:
          description: Reference to the configured address of the AAA server
          title: address
          type: string
          x-go-type: ListKey
          x-leafref: ../config/address
        config:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Config'
        radius:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius'
        state:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_State'
        tacacs:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs'
      required:
      - address
      title: System_Aaa_Server-groups_Server-group_Servers_Server
      type: object
      x-list-multiple: true
    System_Aaa_Server-groups_Server-group_Servers_Server_Config:
      description: 'Configuration data '
      properties:
        address:
          description: Address of the authentication server
          title: address
          type: string
        name:
          description: Name assigned to the server
          title: name
          type: string
        timeout:
          description: |-
            Set the timeout in seconds on responses from the AAA
            server
          maximum: 65535
          minimum: 0
          title: timeout
          type: integer
      title: System_Aaa_Server-groups_Server-group_Servers_Server_Config
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server_List:
      description: List of AAA servers (list)
      items:
        $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server'
      type: array
      uniqueItems: true
      x-keys:
      - address
      x-list-multiple: true
    System_Aaa_Server-groups_Server-group_Servers_Server_Radius:
      description: Top-level container for RADIUS server data
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config'
        state:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State'
      title: System_Aaa_Server-groups_Server-group_Servers_Server_Radius
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config:
      description: Configuration data for RADIUS servers
      properties:
        acct-port:
          description: Port number for accounting requests
          maximum: 65535
          minimum: 0
          title: acct-port
          type: integer
        auth-port:
          description: Port number for authentication requests
          maximum: 65535
          minimum: 0
          title: auth-port
          type: integer
        retransmit-attempts:
          description: |-
            Number of times the system may resend a request to the
            RADIUS server when it is unresponsive
          maximum: 255
          minimum: 0
          title: retransmit-attempts
          type: integer
        secret-key:
          description: |-
            The unencrypted shared key used between the authentication
            server and the device.
          title: secret-key
          type: string
        source-address:
          description: Source IP address to use in messages to the RADIUS server
          title: source-address
          type: string
      title: System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State:
      description: Operational state data for RADIUS servers
      properties:
        acct-port:
          description: Port number for accounting requests
          maximum: 65535
          minimum: 0
          title: acct-port
          type: integer
        auth-port:
          description: Port number for authentication requests
          maximum: 65535
          minimum: 0
          title: auth-port
          type: integer
        counters:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters'
        retransmit-attempts:
          description: |-
            Number of times the system may resend a request to the
            RADIUS server when it is unresponsive
          maximum: 255
          minimum: 0
          title: retransmit-attempts
          type: integer
        secret-key:
          description: |-
            The unencrypted shared key used between the authentication
            server and the device.
          title: secret-key
          type: string
        source-address:
          description: Source IP address to use in messages to the RADIUS server
          title: source-address
          type: string
      title: System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters:
      description: A collection of RADIUS related state objects.
      properties:
        access-accepts:
          description: Received Access-Accept messages.
          format: int64
          minimum: 0
          title: access-accepts
          type: integer
        access-rejects:
          description: Received Access-Reject messages.
          format: int64
          minimum: 0
          title: access-rejects
          type: integer
        retried-access-requests:
          description: Retransmitted Access-Request messages.
          format: int64
          minimum: 0
          title: retried-access-requests
          type: integer
        timeout-access-requests:
          description: |-
            Access-Request messages that have timed-out,
            requiring retransmission.
          format: int64
          minimum: 0
          title: timeout-access-requests
          type: integer
      title: System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server_State:
      description: 'Operational state data '
      properties:
        address:
          description: Address of the authentication server
          title: address
          type: string
        connection-aborts:
          description: |-
            Number of aborted connections to the server.  These do
            not include connections that are close gracefully.
          format: int64
          minimum: 0
          title: connection-aborts
          type: integer
        connection-closes:
          description: |-
            Number of connection close requests sent to the server, e.g.
            socket close
          format: int64
          minimum: 0
          title: connection-closes
          type: integer
        connection-failures:
          description: Number of connection failures to the server
          format: int64
          minimum: 0
          title: connection-failures
          type: integer
        connection-opens:
          description: |-
            Number of new connection requests sent to the server, e.g.
            socket open
          format: int64
          minimum: 0
          title: connection-opens
          type: integer
        connection-timeouts:
          description: Number of connection timeouts to the server
          format: int64
          minimum: 0
          title: connection-timeouts
          type: integer
        errors-received:
          description: Number of error messages received from the server
          format: int64
          minimum: 0
          title: errors-received
          type: integer
        messages-received:
          description: Number of messages received by the server
          format: int64
          minimum: 0
          title: messages-received
          type: integer
        messages-sent:
          description: Number of messages sent to the server
          format: int64
          minimum: 0
          title: messages-sent
          type: integer
        name:
          description: Name assigned to the server
          title: name
          type: string
        timeout:
          description: |-
            Set the timeout in seconds on responses from the AAA
            server
          maximum: 65535
          minimum: 0
          title: timeout
          type: integer
      title: System_Aaa_Server-groups_Server-group_Servers_Server_State
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs:
      description: Top-level container for TACACS+ server data
      properties:
        config:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config'
        state:
          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State'
      title: System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config:
      description: Configuration data for TACACS+ server
      properties:
        port:
          description: The port number on which to contact the TACACS server
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        secret-key:
          description: |-
            The unencrypted shared key used between the authentication
            server and the device.
          title: secret-key
          type: string
        source-address:
          description: Source IP address to use in messages to the TACACS server
          title: source-address
          type: string
      title: System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config
      type: object
    System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State:
      description: Operational state data for TACACS+ server
      properties:
        port:
          description: The port number on which to contact the TACACS server
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        secret-key:
          description: |-
            The unencrypted shared key used between the authentication
            server and the device.
          title: secret-key
          type: string
        source-address:
          description: Source IP address to use in messages to the TACACS server
          title: source-address
          type: string
      title: System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State
      type: object
    System_Aaa_Server-groups_Server-group_State:
      description: Operational state data for each server group
      properties:
        name:
          description: Name for the server group
          title: name
          type: string
        type:
          description: |-
            AAA server type -- all servers in the group must be of this
            type
          enum:
          - RADIUS
          - TACACS
          title: type
          type: string
      title: System_Aaa_Server-groups_Server-group_State
      type: object
    System_Aaa_State:
      description: 'Operational state data for top level AAA services '
      title: System_Aaa_State
      type: object
    System_Clock:
      description: Top-level container for clock configuration data
      properties:
        config:
          $ref: '#/components/schemas/System_Clock_Config'
        state:
          $ref: '#/components/schemas/System_Clock_State'
      title: System_Clock
      type: object
    System_Clock_Config:
      description: Configuration data for system clock
      properties:
        timezone-name:
          description: |-
            The TZ database name to use for the system, such
            as 'Europe/Stockholm'.
          title: timezone-name
          type: string
      title: System_Clock_Config
      type: object
    System_Clock_State:
      description: Operational state data for system clock
      properties:
        timezone-name:
          description: |-
            The TZ database name to use for the system, such
            as 'Europe/Stockholm'.
          title: timezone-name
          type: string
      title: System_Clock_State
      type: object
    System_Config:
      description: Global configuration data for the system
      properties:
        domain-name:
          description: |-
            Specifies the domain name used to form fully qualified name
            for unqualified hostnames.
          maxLength: 253
          minLength: 1
          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
          title: domain-name
          type: string
        hostname:
          description: |-
            The hostname of the device -- should be a single domain
            label, without the domain.
          maxLength: 253
          minLength: 1
          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
          title: hostname
          type: string
        login-banner:
          description: |-
            The console login message displayed before the login prompt,
            i.e., before a user logs into the system.
          title: login-banner
          type: string
        motd-banner:
          description: |-
            The console message displayed after a user logs into the
            system.  They system may append additional standard
            information such as the current system date and time, uptime,
            last login timestamp, etc.
          title: motd-banner
          type: string
      title: System_Config
      type: object
    System_Dns:
      description: Enclosing container for DNS resolver data
      properties:
        config:
          $ref: '#/components/schemas/System_Dns_Config'
        host-entries:
          $ref: '#/components/schemas/System_Dns_Host-entries'
        servers:
          $ref: '#/components/schemas/System_Dns_Servers'
        state:
          $ref: '#/components/schemas/System_Dns_State'
      title: System_Dns
      type: object
    System_Dns_Config:
      description: Configuration data for the DNS resolver
      properties:
        search:
          items:
            description: |-
              An ordered list of domains to search when resolving
              a host name.
            maxLength: 253
            minLength: 1
            pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
            title: search
            type: string
          title: search
          type: array
      title: System_Dns_Config
      type: object
    System_Dns_Host-entries:
      description: Enclosing container for list of static host entries
      properties:
        host-entry:
          $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_List'
      title: System_Dns_Host-entries
      type: object
    System_Dns_Host-entries_Host-entry:
      description: List of static host entries (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_Config'
        hostname:
          description: Reference to the hostname list key
          title: hostname
          type: string
          x-go-type: ListKey
          x-leafref: ../config/hostname
        state:
          $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_State'
      required:
      - hostname
      title: System_Dns_Host-entries_Host-entry
      type: object
      x-list-multiple: true
    System_Dns_Host-entries_Host-entry_Config:
      description: Configuration data for static host entries
      properties:
        alias:
          items:
            description: Additional aliases for the hostname
            title: alias
            type: string
          title: alias
          type: array
        hostname:
          description: Hostname for the static DNS entry
          title: hostname
          type: string
        ipv4-address:
          items:
            description: List of IPv4 addressses for the host entry
            pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
            title: ipv4-address
            type: string
          title: ipv4-address
          type: array
        ipv6-address:
          items:
            description: List of IPv6 addresses for the host entry
            pattern: ^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
            title: ipv6-address
            type: string
          title: ipv6-address
          type: array
      title: System_Dns_Host-entries_Host-entry_Config
      type: object
    System_Dns_Host-entries_Host-entry_List:
      description: List of static host entries (list)
      items:
        $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry'
      type: array
      uniqueItems: true
      x-keys:
      - hostname
      x-list-multiple: true
    System_Dns_Host-entries_Host-entry_State:
      description: Operational state data for static host entries
      properties:
        alias:
          items:
            description: Additional aliases for the hostname
            title: alias
            type: string
          title: alias
          type: array
        hostname:
          description: Hostname for the static DNS entry
          title: hostname
          type: string
        ipv4-address:
          items:
            description: List of IPv4 addressses for the host entry
            pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
            title: ipv4-address
            type: string
          title: ipv4-address
          type: array
        ipv6-address:
          items:
            description: List of IPv6 addresses for the host entry
            pattern: ^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
            title: ipv6-address
            type: string
          title: ipv6-address
          type: array
      title: System_Dns_Host-entries_Host-entry_State
      type: object
    System_Dns_Servers:
      description: Enclosing container for DNS resolver list
      properties:
        server:
          $ref: '#/components/schemas/System_Dns_Servers_Server_List'
      title: System_Dns_Servers
      type: object
    System_Dns_Servers_Server:
      description: |-
        List of the DNS servers that the resolver should query.

        When the resolver is invoked by a calling application, it
        sends the query to the first name server in this list.  If
        no response has been received within 'timeout' seconds,
        the resolver continues with the next server in the list.
        If no response is received from any server, the resolver
        continues with the first server again.  When the resolver
        has traversed the list 'attempts' times without receiving
        any response, it gives up and returns an error to the
        calling application.

        Implementations MAY limit the number of entries in this
        list. (single)
      properties:
        address:
          description: References the configured address of the DNS server
          title: address
          type: string
          x-go-type: ListKey
          x-leafref: ../config/address
        config:
          $ref: '#/components/schemas/System_Dns_Servers_Server_Config'
        state:
          $ref: '#/components/schemas/System_Dns_Servers_Server_State'
      required:
      - address
      title: System_Dns_Servers_Server
      type: object
      x-list-multiple: true
      x-must: []
    System_Dns_Servers_Server_Config:
      description: Configuration data for each DNS resolver
      properties:
        address:
          description: |-
            The address of the DNS server, can be either IPv4
            or IPv6.
          title: address
          type: string
        port:
          description: The port number of the DNS server.
          maximum: 65535
          minimum: 0
          title: port
          type: integer
      title: System_Dns_Servers_Server_Config
      type: object
    System_Dns_Servers_Server_List:
      description: |-
        List of the DNS servers that the resolver should query.

        When the resolver is invoked by a calling application, it
        sends the query to the first name server in this list.  If
        no response has been received within 'timeout' seconds,
        the resolver continues with the next server in the list.
        If no response is received from any server, the resolver
        continues with the first server again.  When the resolver
        has traversed the list 'attempts' times without receiving
        any response, it gives up and returns an error to the
        calling application.

        Implementations MAY limit the number of entries in this
        list. (list)
      items:
        $ref: '#/components/schemas/System_Dns_Servers_Server'
      type: array
      uniqueItems: true
      x-keys:
      - address
      x-list-multiple: true
    System_Dns_Servers_Server_State:
      description: Operational state data for each DNS resolver
      properties:
        address:
          description: |-
            The address of the DNS server, can be either IPv4
            or IPv6.
          title: address
          type: string
        port:
          description: The port number of the DNS server.
          maximum: 65535
          minimum: 0
          title: port
          type: integer
      title: System_Dns_Servers_Server_State
      type: object
    System_Dns_State:
      description: Operational state data for the DNS resolver
      properties:
        search:
          items:
            description: |-
              An ordered list of domains to search when resolving
              a host name.
            maxLength: 253
            minLength: 1
            pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
            title: search
            type: string
          title: search
          type: array
      title: System_Dns_State
      type: object
    System_Logging:
      description: Top-level container for data related to logging / syslog
      properties:
        console:
          $ref: '#/components/schemas/System_Logging_Console'
        remote-servers:
          $ref: '#/components/schemas/System_Logging_Remote-servers'
      title: System_Logging
      type: object
    System_Logging_Console:
      description: |-
        Top-level container for data related to console-based
        logging
      properties:
        config:
          $ref: '#/components/schemas/System_Logging_Console_Config'
        selectors:
          $ref: '#/components/schemas/System_Logging_Console_Selectors'
        state:
          $ref: '#/components/schemas/System_Logging_Console_State'
      title: System_Logging_Console
      type: object
    System_Logging_Console_Config:
      description: Configuration data for console logging
      title: System_Logging_Console_Config
      type: object
    System_Logging_Console_Selectors:
      description: 'Enclosing container '
      properties:
        selector:
          $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_List'
      title: System_Logging_Console_Selectors
      type: object
    System_Logging_Console_Selectors_Selector:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of selectors for log messages (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_Config'
        facility:
          description: Reference to facility list key
          title: facility
          type: string
          x-go-type: ListKey
          x-leafref: ../config/facility
        severity:
          description: Reference to severity list key
          title: severity
          type: string
          x-go-type: ListKey
          x-leafref: ../config/severity
        state:
          $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_State'
      required:
      - facility
      - severity
      title: System_Logging_Console_Selectors_Selector
      type: object
      x-list-multiple: true
    System_Logging_Console_Selectors_Selector_Config:
      description: 'Configuration data '
      properties:
        facility:
          description: Specifies the facility, or class of messages to log
          enum:
          - ALL
          - AUDIT
          - AUTH
          - AUTHPRIV
          - CONSOLE
          - KERNEL
          - LOCAL0
          - LOCAL1
          - LOCAL2
          - LOCAL3
          - LOCAL4
          - LOCAL5
          - LOCAL6
          - LOCAL7
          - MAIL
          - NTP
          - SYSLOG
          - SYSTEM_DAEMON
          - USER
          title: facility
          type: string
        severity:
          description: |-
            Specifies that only messages of the given severity (or
            greater severity) for the corresonding facility are logged
          title: severity
          type: string
      title: System_Logging_Console_Selectors_Selector_Config
      type: object
    System_Logging_Console_Selectors_Selector_List:
      description: List of selectors for log messages (list)
      items:
        $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector'
      type: array
      uniqueItems: true
      x-keys:
      - facility
      - severity
      x-list-multiple: true
    System_Logging_Console_Selectors_Selector_State:
      description: 'Operational state data '
      properties:
        facility:
          description: Specifies the facility, or class of messages to log
          enum:
          - ALL
          - AUDIT
          - AUTH
          - AUTHPRIV
          - CONSOLE
          - KERNEL
          - LOCAL0
          - LOCAL1
          - LOCAL2
          - LOCAL3
          - LOCAL4
          - LOCAL5
          - LOCAL6
          - LOCAL7
          - MAIL
          - NTP
          - SYSLOG
          - SYSTEM_DAEMON
          - USER
          title: facility
          type: string
        severity:
          description: |-
            Specifies that only messages of the given severity (or
            greater severity) for the corresonding facility are logged
          title: severity
          type: string
      title: System_Logging_Console_Selectors_Selector_State
      type: object
    System_Logging_Console_State:
      description: Operational state data for console logging
      title: System_Logging_Console_State
      type: object
    System_Logging_Remote-servers:
      description: Enclosing container for the list of remote log servers
      properties:
        remote-server:
          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_List'
      title: System_Logging_Remote-servers
      type: object
    System_Logging_Remote-servers_Remote-server:
      description: List of remote log servers (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Config'
        host:
          description: Reference to the host list key
          title: host
          type: string
          x-go-type: ListKey
          x-leafref: ../config/host
        selectors:
          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors'
        state:
          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_State'
      required:
      - host
      title: System_Logging_Remote-servers_Remote-server
      type: object
      x-list-multiple: true
    System_Logging_Remote-servers_Remote-server_Config:
      description: Configuration data for remote log servers
      properties:
        host:
          description: IP address or hostname of the remote log server
          title: host
          type: string
        remote-port:
          description: |-
            Sets the destination port number for syslog UDP messages to
            the server.  The default for syslog is 514.
          maximum: 65535
          minimum: 0
          title: remote-port
          type: integer
        source-address:
          description: Source IP address for packets to the log server
          title: source-address
          type: string
      title: System_Logging_Remote-servers_Remote-server_Config
      type: object
    System_Logging_Remote-servers_Remote-server_List:
      description: List of remote log servers (list)
      items:
        $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server'
      type: array
      uniqueItems: true
      x-keys:
      - host
      x-list-multiple: true
    System_Logging_Remote-servers_Remote-server_Selectors:
      description: 'Enclosing container '
      properties:
        selector:
          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_List'
      title: System_Logging_Remote-servers_Remote-server_Selectors
      type: object
    System_Logging_Remote-servers_Remote-server_Selectors_Selector:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalPropertyUnchanged'
      description: List of selectors for log messages (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config'
        facility:
          description: Reference to facility list key
          title: facility
          type: string
          x-go-type: ListKey
          x-leafref: ../config/facility
        severity:
          description: Reference to severity list key
          title: severity
          type: string
          x-go-type: ListKey
          x-leafref: ../config/severity
        state:
          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_State'
      required:
      - facility
      - severity
      title: System_Logging_Remote-servers_Remote-server_Selectors_Selector
      type: object
      x-list-multiple: true
    System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config:
      description: 'Configuration data '
      properties:
        facility:
          description: Specifies the facility, or class of messages to log
          enum:
          - ALL
          - AUDIT
          - AUTH
          - AUTHPRIV
          - CONSOLE
          - KERNEL
          - LOCAL0
          - LOCAL1
          - LOCAL2
          - LOCAL3
          - LOCAL4
          - LOCAL5
          - LOCAL6
          - LOCAL7
          - MAIL
          - NTP
          - SYSLOG
          - SYSTEM_DAEMON
          - USER
          title: facility
          type: string
        severity:
          description: |-
            Specifies that only messages of the given severity (or
            greater severity) for the corresonding facility are logged
          title: severity
          type: string
      title: System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config
      type: object
    System_Logging_Remote-servers_Remote-server_Selectors_Selector_List:
      description: List of selectors for log messages (list)
      items:
        $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector'
      type: array
      uniqueItems: true
      x-keys:
      - facility
      - severity
      x-list-multiple: true
    System_Logging_Remote-servers_Remote-server_Selectors_Selector_State:
      description: 'Operational state data '
      properties:
        facility:
          description: Specifies the facility, or class of messages to log
          enum:
          - ALL
          - AUDIT
          - AUTH
          - AUTHPRIV
          - CONSOLE
          - KERNEL
          - LOCAL0
          - LOCAL1
          - LOCAL2
          - LOCAL3
          - LOCAL4
          - LOCAL5
          - LOCAL6
          - LOCAL7
          - MAIL
          - NTP
          - SYSLOG
          - SYSTEM_DAEMON
          - USER
          title: facility
          type: string
        severity:
          description: |-
            Specifies that only messages of the given severity (or
            greater severity) for the corresonding facility are logged
          title: severity
          type: string
      title: System_Logging_Remote-servers_Remote-server_Selectors_Selector_State
      type: object
    System_Logging_Remote-servers_Remote-server_State:
      description: Operational state data for remote log servers
      properties:
        host:
          description: IP address or hostname of the remote log server
          title: host
          type: string
        remote-port:
          description: |-
            Sets the destination port number for syslog UDP messages to
            the server.  The default for syslog is 514.
          maximum: 65535
          minimum: 0
          title: remote-port
          type: integer
        source-address:
          description: Source IP address for packets to the log server
          title: source-address
          type: string
      title: System_Logging_Remote-servers_Remote-server_State
      type: object
    System_Memory:
      description: Top-level container for system memory data
      properties:
        config:
          $ref: '#/components/schemas/System_Memory_Config'
        state:
          $ref: '#/components/schemas/System_Memory_State'
      title: System_Memory
      type: object
    System_Memory_Config:
      description: Configuration data for system memory
      title: System_Memory_Config
      type: object
    System_Memory_State:
      description: Operational state data for system memory
      properties:
        physical:
          description: |-
            Reports the total physical memory available on the
            system.
          format: int64
          minimum: 0
          title: physical
          type: integer
        reserved:
          description: Memory reserved for system use
          format: int64
          minimum: 0
          title: reserved
          type: integer
      title: System_Memory_State
      type: object
    System_Ntp:
      description: Top-level container for NTP configuration and state
      properties:
        config:
          $ref: '#/components/schemas/System_Ntp_Config'
        ntp-keys:
          $ref: '#/components/schemas/System_Ntp_Ntp-keys'
        servers:
          $ref: '#/components/schemas/System_Ntp_Servers'
        state:
          $ref: '#/components/schemas/System_Ntp_State'
      title: System_Ntp
      type: object
    System_Ntp_Config:
      description: Configuration data for NTP client.
      properties:
        enable-ntp-auth:
          default: false
          description: |-
            Enable or disable NTP authentication -- when enabled, the
            system will only use packets containing a trusted
            authentication key to synchronize the time.
          title: enable-ntp-auth
          type: boolean
        enabled:
          default: false
          description: |-
            Enables the NTP protocol and indicates that the system should
            attempt to synchronize the system clock with an NTP server
            from the servers defined in the 'ntp/server' list.
          title: enabled
          type: boolean
        ntp-source-address:
          description: Source address to use on outgoing NTP packets
          title: ntp-source-address
          type: string
      title: System_Ntp_Config
      type: object
    System_Ntp_Ntp-keys:
      description: Enclosing container for list of NTP authentication keys
      properties:
        ntp-key:
          $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_List'
      title: System_Ntp_Ntp-keys
      type: object
    System_Ntp_Ntp-keys_Ntp-key:
      description: List of NTP authentication keys (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_Config'
        key-id:
          description: Reference to auth key-id list key
          title: key-id
          type: integer
          x-leafref: ../config/key-id
        state:
          $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_State'
      required:
      - key-id
      title: System_Ntp_Ntp-keys_Ntp-key
      type: object
      x-list-multiple: true
    System_Ntp_Ntp-keys_Ntp-key_Config:
      description: Configuration data for NTP auth keys
      properties:
        key-id:
          description: |-
            Integer identifier used by the client and server to
            designate a secret key.  The client and server must use
            the same key id.
          maximum: 65535
          minimum: 0
          title: key-id
          type: integer
        key-type:
          description: Encryption type used for the NTP authentication key
          enum:
          - NTP_AUTH_MD5
          title: key-type
          type: string
        key-value:
          description: NTP authentication key value
          title: key-value
          type: string
      title: System_Ntp_Ntp-keys_Ntp-key_Config
      type: object
    System_Ntp_Ntp-keys_Ntp-key_List:
      description: List of NTP authentication keys (list)
      items:
        $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key'
      type: array
      uniqueItems: true
      x-keys:
      - key-id
      x-list-multiple: true
    System_Ntp_Ntp-keys_Ntp-key_State:
      description: Operational state data for NTP auth keys
      properties:
        key-id:
          description: |-
            Integer identifier used by the client and server to
            designate a secret key.  The client and server must use
            the same key id.
          maximum: 65535
          minimum: 0
          title: key-id
          type: integer
        key-type:
          description: Encryption type used for the NTP authentication key
          enum:
          - NTP_AUTH_MD5
          title: key-type
          type: string
        key-value:
          description: NTP authentication key value
          title: key-value
          type: string
      title: System_Ntp_Ntp-keys_Ntp-key_State
      type: object
    System_Ntp_Servers:
      description: Enclosing container for the list of NTP servers
      properties:
        server:
          $ref: '#/components/schemas/System_Ntp_Servers_Server_List'
      title: System_Ntp_Servers
      type: object
    System_Ntp_Servers_Server:
      description: |-
        List of NTP servers to use for system clock
        synchronization.  If '/system/ntp/enabled'
        is 'true', then the system will attempt to
        contact and utilize the specified NTP servers. (single)
      properties:
        address:
          description: |-
            References the configured address or hostname of the
            NTP server.
          title: address
          type: string
          x-go-type: ListKey
          x-leafref: ../config/address
        config:
          $ref: '#/components/schemas/System_Ntp_Servers_Server_Config'
        state:
          $ref: '#/components/schemas/System_Ntp_Servers_Server_State'
      required:
      - address
      title: System_Ntp_Servers_Server
      type: object
      x-list-multiple: true
    System_Ntp_Servers_Server_Config:
      description: Configuration data for an NTP server.
      properties:
        address:
          description: The address or hostname of the NTP server.
          title: address
          type: string
        association-type:
          description: The desired association type for this NTP server.
          title: association-type
          type: string
        iburst:
          default: false
          description: |-
            Indicates whether this server should enable burst
            synchronization or not.
          title: iburst
          type: boolean
        port:
          description: The port number of the NTP server.
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        prefer:
          default: false
          description: |-
            Indicates whether this server should be preferred
            or not.
          title: prefer
          type: boolean
        version:
          description: Version number to put in outgoing NTP packets
          maximum: 4
          minimum: 1
          title: version
          type: integer
      title: System_Ntp_Servers_Server_Config
      type: object
    System_Ntp_Servers_Server_List:
      description: |-
        List of NTP servers to use for system clock
        synchronization.  If '/system/ntp/enabled'
        is 'true', then the system will attempt to
        contact and utilize the specified NTP servers. (list)
      items:
        $ref: '#/components/schemas/System_Ntp_Servers_Server'
      type: array
      uniqueItems: true
      x-keys:
      - address
      x-list-multiple: true
    System_Ntp_Servers_Server_State:
      description: Operational state data for an NTP server.
      properties:
        address:
          description: The address or hostname of the NTP server.
          title: address
          type: string
        association-type:
          description: The desired association type for this NTP server.
          title: association-type
          type: string
        iburst:
          default: false
          description: |-
            Indicates whether this server should enable burst
            synchronization or not.
          title: iburst
          type: boolean
        offset:
          description: |-
            Estimate of the current time offset from the peer.  This is
            the time difference between the local and reference clock.
          format: int64
          minimum: 0
          title: offset
          type: integer
        poll-interval:
          description: Polling interval of the peer
          format: int32
          minimum: 0
          title: poll-interval
          type: integer
        port:
          description: The port number of the NTP server.
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        prefer:
          default: false
          description: |-
            Indicates whether this server should be preferred
            or not.
          title: prefer
          type: boolean
        root-delay:
          description: The round-trip delay to the server, in milliseconds.
          format: int32
          minimum: 0
          title: root-delay
          type: integer
        root-dispersion:
          description: |-
            Dispersion (epsilon) represents the maximum error inherent
            in the measurement
          format: int64
          minimum: 0
          title: root-dispersion
          type: integer
        stratum:
          description: |-
            Indicates the level of the server in the NTP hierarchy. As
            stratum number increases, the accuracy is degraded.  Primary
            servers are stratum while a maximum value of 16 indicates
            unsynchronized.  The values have the following specific
            semantics:

            | 0      | unspecified or invalid
            | 1      | primary server (e.g., equipped with a GPS receiver)
            | 2-15   | secondary server (via NTP)
            | 16     | unsynchronized
            | 17-255 | reserved
          maximum: 255
          minimum: 0
          title: stratum
          type: integer
        version:
          description: Version number to put in outgoing NTP packets
          maximum: 4
          minimum: 1
          title: version
          type: integer
      title: System_Ntp_Servers_Server_State
      type: object
    System_Ntp_State:
      description: Operational state data for NTP services.
      properties:
        auth-mismatch:
          description: |-
            Count of the number of NTP packets received that were not
            processed due to authentication mismatch.
          format: int64
          minimum: 0
          title: auth-mismatch
          type: integer
        enable-ntp-auth:
          default: false
          description: |-
            Enable or disable NTP authentication -- when enabled, the
            system will only use packets containing a trusted
            authentication key to synchronize the time.
          title: enable-ntp-auth
          type: boolean
        enabled:
          default: false
          description: |-
            Enables the NTP protocol and indicates that the system should
            attempt to synchronize the system clock with an NTP server
            from the servers defined in the 'ntp/server' list.
          title: enabled
          type: boolean
        ntp-source-address:
          description: Source address to use on outgoing NTP packets
          title: ntp-source-address
          type: string
      title: System_Ntp_State
      type: object
    System_Openflow:
      description: Container for Openflow model
      properties:
        agent:
          $ref: '#/components/schemas/System_Openflow_Agent'
        controllers:
          $ref: '#/components/schemas/System_Openflow_Controllers'
      title: System_Openflow
      type: object
    System_Openflow_Agent:
      description: Container for the Openflow agent model.
      properties:
        config:
          $ref: '#/components/schemas/System_Openflow_Agent_Config'
        state:
          $ref: '#/components/schemas/System_Openflow_Agent_State'
      title: System_Openflow_Agent
      type: object
    System_Openflow_Agent_Config:
      description: Container for the Openflow agent config.
      properties:
        backoff-interval:
          description: Openflow agent connection backoff interval.
          format: int32
          minimum: 0
          title: backoff-interval
          type: integer
        datapath-id:
          description: |-
            Datapath unique ID. The lower 48-bits are for
            a MAC address, while the upper 16-bits are
            implementer-defined.
          pattern: ^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){7}$
          title: datapath-id
          type: string
        failure-mode:
          description: Failure mode for Openflow.
          title: failure-mode
          type: string
        inactivity-probe:
          description: Openflow agent inactivity probe period.
          format: int32
          minimum: 0
          title: inactivity-probe
          type: integer
        max-backoff:
          description: Openflow agent max backoff time.
          format: int32
          minimum: 0
          title: max-backoff
          type: integer
      title: System_Openflow_Agent_Config
      type: object
    System_Openflow_Agent_State:
      description: Container for the Openflow agent state.
      properties:
        backoff-interval:
          description: Openflow agent connection backoff interval.
          format: int32
          minimum: 0
          title: backoff-interval
          type: integer
        datapath-id:
          description: |-
            Datapath unique ID. The lower 48-bits are for
            a MAC address, while the upper 16-bits are
            implementer-defined.
          pattern: ^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){7}$
          title: datapath-id
          type: string
        failure-mode:
          description: Failure mode for Openflow.
          title: failure-mode
          type: string
        inactivity-probe:
          description: Openflow agent inactivity probe period.
          format: int32
          minimum: 0
          title: inactivity-probe
          type: integer
        max-backoff:
          description: Openflow agent max backoff time.
          format: int32
          minimum: 0
          title: max-backoff
          type: integer
      title: System_Openflow_Agent_State
      type: object
    System_Openflow_Controllers:
      description: Container for the Openflow controllers model
      properties:
        controller:
          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_List'
      title: System_Openflow_Controllers
      type: object
    System_Openflow_Controllers_Controller:
      description: |-
        The Openflow Switch connects to all Openflow controllers
        configured (single)
      properties:
        config:
          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Config'
        connections:
          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections'
        name:
          description: The name identifies the controller.
          title: name
          type: string
          x-go-type: ListKey
          x-leafref: ../config/name
        state:
          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_State'
      required:
      - name
      title: System_Openflow_Controllers_Controller
      type: object
      x-list-multiple: true
    System_Openflow_Controllers_Controller_Config:
      description: Container for the Openflow controller config.
      properties:
        name:
          description: |-
            Name of this Openflow controller. All connections
            for the same controller need to have the same name.
          title: name
          type: string
      title: System_Openflow_Controllers_Controller_Config
      type: object
    System_Openflow_Controllers_Controller_Connections:
      description: Enclosing container for list of controller connections
      properties:
        connection:
          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_List'
      title: System_Openflow_Controllers_Controller_Connections
      type: object
    System_Openflow_Controllers_Controller_Connections_Connection:
      description: |-
        List of connections to the OpenFlow controller.
        The Openflow switch always connects to configured Openflow
        controllers. Each controller can have more than one
        connection, called auxiliary Openflow connections. (single)
      properties:
        aux-id:
          description: Reference to auxiliary id list key
          title: aux-id
          type: integer
          x-leafref: ../config/aux-id
        config:
          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_Config'
        state:
          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_State'
      required:
      - aux-id
      title: System_Openflow_Controllers_Controller_Connections_Connection
      type: object
      x-list-multiple: true
    System_Openflow_Controllers_Controller_Connections_Connection_Config:
      description: Configuration data for OpenFlow controller connections
      properties:
        address:
          description: The IP address of the controller.
          title: address
          type: string
        aux-id:
          description: |-
            Controller auxiliary ID. Must be 0 for the main controller.
            One controller may have multiple auxiliary connections as
            specified by the Openflow protocol. Besides configuring the
            main controller, it is also possible to configure auxiliary
            connections. The main controller must have the aux-id
            set to zero. All others must have an aux-id different
            from 0.
          maximum: 15
          minimum: 0
          title: aux-id
          type: integer
        port:
          description: Controller port to use.
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        priority:
          description: |-
            Optional value for servicing auxiliary connections with
            different priorities.
          maximum: 255
          minimum: 0
          title: priority
          type: integer
        source-interface:
          description: |-
            Optionally specify the source interface for the
            controller connection.
          title: source-interface
          type: string
          x-leafref: /oc-if:interfaces/oc-if:interface/oc-if:name
        transport:
          description: Controller transport protocol used.
          title: transport
          type: string
      title: System_Openflow_Controllers_Controller_Connections_Connection_Config
      type: object
    System_Openflow_Controllers_Controller_Connections_Connection_List:
      description: |-
        List of connections to the OpenFlow controller.
        The Openflow switch always connects to configured Openflow
        controllers. Each controller can have more than one
        connection, called auxiliary Openflow connections. (list)
      items:
        $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection'
      type: array
      uniqueItems: true
      x-keys:
      - aux-id
      x-list-multiple: true
    System_Openflow_Controllers_Controller_Connections_Connection_State:
      description: |-
        Operational state data for OpenFlow controller
        connections
      properties:
        address:
          description: The IP address of the controller.
          title: address
          type: string
        aux-id:
          description: |-
            Controller auxiliary ID. Must be 0 for the main controller.
            One controller may have multiple auxiliary connections as
            specified by the Openflow protocol. Besides configuring the
            main controller, it is also possible to configure auxiliary
            connections. The main controller must have the aux-id
            set to zero. All others must have an aux-id different
            from 0.
          maximum: 15
          minimum: 0
          title: aux-id
          type: integer
        connected:
          description: |-
            When set to true, indicates the connection between the
            switch and controller is established.
          title: connected
          type: boolean
        port:
          description: Controller port to use.
          maximum: 65535
          minimum: 0
          title: port
          type: integer
        priority:
          description: |-
            Optional value for servicing auxiliary connections with
            different priorities.
          maximum: 255
          minimum: 0
          title: priority
          type: integer
        source-interface:
          description: |-
            Optionally specify the source interface for the
            controller connection.
          title: source-interface
          type: string
          x-leafref: /oc-if:interfaces/oc-if:interface/oc-if:name
        transport:
          description: Controller transport protocol used.
          title: transport
          type: string
      title: System_Openflow_Controllers_Controller_Connections_Connection_State
      type: object
    System_Openflow_Controllers_Controller_List:
      description: |-
        The Openflow Switch connects to all Openflow controllers
        configured (list)
      items:
        $ref: '#/components/schemas/System_Openflow_Controllers_Controller'
      type: array
      uniqueItems: true
      x-keys:
      - name
      x-list-multiple: true
    System_Openflow_Controllers_Controller_State:
      description: Container for the Openflow controller state.
      properties:
        name:
          description: |-
            Name of this Openflow controller. All connections
            for the same controller need to have the same name.
          title: name
          type: string
      title: System_Openflow_Controllers_Controller_State
      type: object
    System_Processes:
      description: Parameters related to all monitored processes
      properties:
        process:
          $ref: '#/components/schemas/System_Processes_Process_List'
      title: System_Processes
      type: object
    System_Processes_Process:
      description: List of monitored processes (single)
      properties:
        pid:
          description: Reference to the process pid key
          format: int64
          title: pid
          type: integer
          x-leafref: ../state/pid
        state:
          $ref: '#/components/schemas/System_Processes_Process_State'
      required:
      - pid
      title: System_Processes_Process
      type: object
      x-list-multiple: true
    System_Processes_Process_List:
      description: List of monitored processes (list)
      items:
        $ref: '#/components/schemas/System_Processes_Process'
      type: array
      uniqueItems: true
      x-keys:
      - pid
      x-list-multiple: true
    System_Processes_Process_State:
      description: State parameters related to monitored processes
      properties:
        args:
          items:
            description: |-
              Current process command line arguments.  Arguments with
              a parameter (e.g., --option 10  or -option=10) should be
              represented as a single element of the list with the
              argument name and parameter together.  Flag arguments, i.e.,
              those without a parameter should also be in their own list
              element.
            title: args
            type: string
          title: args
          type: array
        cpu-usage-system:
          description: CPU time consumed by this process in kernel mode.
          format: int64
          minimum: 0
          title: cpu-usage-system
          type: integer
        cpu-usage-user:
          description: CPU time consumed by this process in user mode.
          format: int64
          minimum: 0
          title: cpu-usage-user
          type: integer
        cpu-utilization:
          description: The percentage of CPU that is being used by the process.
          maximum: 100
          minimum: 0
          title: cpu-utilization
          type: integer
        memory-usage:
          description: Bytes allocated and still in use by the process
          format: int64
          minimum: 0
          title: memory-usage
          type: integer
        memory-utilization:
          description: The percentage of RAM that is being used by the process.
          maximum: 100
          minimum: 0
          title: memory-utilization
          type: integer
        name:
          description: The process name
          title: name
          type: string
        pid:
          description: The process pid
          format: int64
          minimum: 0
          title: pid
          type: integer
        start-time:
          description: |-
            The time at which this process started,
            reported as nanoseconds since the UNIX epoch.  The
            system must be synchronized such that the start-time
            can be reported accurately, otherwise it should not be
            reported.
          format: int64
          minimum: 0
          title: start-time
          type: integer
        uptime:
          description: Amount of time elapsed since this process started.
          format: int64
          minimum: 0
          title: uptime
          type: integer
      title: System_Processes_Process_State
      type: object
    System_Ssh-server:
      description: Top-level container for ssh server
      properties:
        config:
          $ref: '#/components/schemas/System_Ssh-server_Config'
        state:
          $ref: '#/components/schemas/System_Ssh-server_State'
      title: System_Ssh-server
      type: object
    System_Ssh-server_Config:
      description: Configuration data for the system ssh server
      properties:
        enable:
          default: true
          description: |-
            Enables the ssh server.  The ssh server is enabled by
            default.
          title: enable
          type: boolean
        protocol-version:
          description: Set the protocol version for SSH connections to the system
          title: protocol-version
          type: string
        rate-limit:
          description: |-
            Set a limit on the number of connection attempts per
            minute to the system for the protocol.
          maximum: 65535
          minimum: 0
          title: rate-limit
          type: integer
        session-limit:
          description: "Set a limit on the number of simultaneous active terminal\nsessions
            to the system for the protocol (e.g., ssh,\ntelnet, ...) "
          maximum: 65535
          minimum: 0
          title: session-limit
          type: integer
        timeout:
          description: |-
            Set the idle timeout in seconds on terminal connections to
            the system for the protocol.
          maximum: 65535
          minimum: 0
          title: timeout
          type: integer
      title: System_Ssh-server_Config
      type: object
    System_Ssh-server_State:
      description: Operational state data for the system ssh server
      properties:
        enable:
          default: true
          description: |-
            Enables the ssh server.  The ssh server is enabled by
            default.
          title: enable
          type: boolean
        protocol-version:
          description: Set the protocol version for SSH connections to the system
          title: protocol-version
          type: string
        rate-limit:
          description: |-
            Set a limit on the number of connection attempts per
            minute to the system for the protocol.
          maximum: 65535
          minimum: 0
          title: rate-limit
          type: integer
        session-limit:
          description: "Set a limit on the number of simultaneous active terminal\nsessions
            to the system for the protocol (e.g., ssh,\ntelnet, ...) "
          maximum: 65535
          minimum: 0
          title: session-limit
          type: integer
        timeout:
          description: |-
            Set the idle timeout in seconds on terminal connections to
            the system for the protocol.
          maximum: 65535
          minimum: 0
          title: timeout
          type: integer
      title: System_Ssh-server_State
      type: object
    System_State:
      description: Global operational state data for the system
      properties:
        boot-time:
          description: |-
            This timestamp indicates the time that the system was last
            restarted.  The value is the timestamp in seconds relative
            to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
          format: int64
          minimum: 0
          title: boot-time
          type: integer
        current-datetime:
          description: The current system date and time.
          pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
          title: current-datetime
          type: string
        domain-name:
          description: |-
            Specifies the domain name used to form fully qualified name
            for unqualified hostnames.
          maxLength: 253
          minLength: 1
          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
          title: domain-name
          type: string
        hostname:
          description: |-
            The hostname of the device -- should be a single domain
            label, without the domain.
          maxLength: 253
          minLength: 1
          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\.
          title: hostname
          type: string
        login-banner:
          description: |-
            The console login message displayed before the login prompt,
            i.e., before a user logs into the system.
          title: login-banner
          type: string
        motd-banner:
          description: |-
            The console message displayed after a user logs into the
            system.  They system may append additional standard
            information such as the current system date and time, uptime,
            last login timestamp, etc.
          title: motd-banner
          type: string
      title: System_State
      type: object
    System_Telnet-server:
      description: Top-level container for telnet terminal servers
      properties:
        config:
          $ref: '#/components/schemas/System_Telnet-server_Config'
        state:
          $ref: '#/components/schemas/System_Telnet-server_State'
      title: System_Telnet-server
      type: object
    System_Telnet-server_Config:
      description: Configuration data for telnet
      properties:
        enable:
          default: false
          description: |-
            Enables the telnet server.  Telnet is disabled by
            default
          title: enable
          type: boolean
        rate-limit:
          description: |-
            Set a limit on the number of connection attempts per
            minute to the system for the protocol.
          maximum: 65535
          minimum: 0
          title: rate-limit
          type: integer
        session-limit:
          description: "Set a limit on the number of simultaneous active terminal\nsessions
            to the system for the protocol (e.g., ssh,\ntelnet, ...) "
          maximum: 65535
          minimum: 0
          title: session-limit
          type: integer
        timeout:
          description: |-
            Set the idle timeout in seconds on terminal connections to
            the system for the protocol.
          maximum: 65535
          minimum: 0
          title: timeout
          type: integer
      title: System_Telnet-server_Config
      type: object
    System_Telnet-server_State:
      description: Operational state data for telnet
      properties:
        enable:
          default: false
          description: |-
            Enables the telnet server.  Telnet is disabled by
            default
          title: enable
          type: boolean
        rate-limit:
          description: |-
            Set a limit on the number of connection attempts per
            minute to the system for the protocol.
          maximum: 65535
          minimum: 0
          title: rate-limit
          type: integer
        session-limit:
          description: "Set a limit on the number of simultaneous active terminal\nsessions
            to the system for the protocol (e.g., ssh,\ntelnet, ...) "
          maximum: 65535
          minimum: 0
          title: session-limit
          type: integer
        timeout:
          description: |-
            Set the idle timeout in seconds on terminal connections to
            the system for the protocol.
          maximum: 65535
          minimum: 0
          title: timeout
          type: integer
      title: System_Telnet-server_State
      type: object
info:
  contact:
    email: info@opennetworking.org
    name: Open Networking Foundation
    url: https://opennetworking.org
  description: OpenAPI 3 specification is generated from devicesim onos-config model
    plugin
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: devicesim-1.0.0
  version: 1.0.0
openapi: 3.0.0
paths:
  /devicesim/v1.0.0/{target}/components:
    delete:
      operationId: deleteComponents
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components
    description: Enclosing container for the components in the system.
    get:
      operationId: getComponents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components'
          description: GET OK 200
      summary: GET /components Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postComponents
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components'
      responses:
        "201":
          description: created
      summary: POST /components
  /devicesim/v1.0.0/{target}/components/component:
    description: List of components, keyed by component name.
    get:
      operationId: getComponents_Component_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_List'
          description: GET OK 200
      summary: GET /components/component List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/components/component/{name}:
    delete:
      operationId: deleteComponents_Component
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components/component
    description: List of components, keyed by component name.
    get:
      operationId: getComponents_Component
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component'
          description: GET OK 200
      summary: GET /components/component Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postComponents_Component
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components_Component'
      responses:
        "201":
          description: created
      summary: POST /components/component
  /devicesim/v1.0.0/{target}/components/component/{name}/config:
    delete:
      operationId: deleteComponents_Component_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components/component/{name}/config
    description: Configuration data for each component
    get:
      operationId: getComponents_Component_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Config'
          description: GET OK 200
      summary: GET /components/component/{name}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postComponents_Component_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components_Component_Config'
      responses:
        "201":
          description: created
      summary: POST /components/component/{name}/config
  /devicesim/v1.0.0/{target}/components/component/{name}/properties:
    delete:
      operationId: deleteComponents_Component_Properties
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components/component/{name}/properties
    description: 'Enclosing container '
    get:
      operationId: getComponents_Component_Properties
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Properties'
          description: GET OK 200
      summary: GET /components/component/{name}/properties Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postComponents_Component_Properties
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components_Component_Properties'
      responses:
        "201":
          description: created
      summary: POST /components/component/{name}/properties
  /devicesim/v1.0.0/{target}/components/component/{name}/properties/property:
    description: List of system properties for the component
    get:
      operationId: getComponents_Component_Properties_Property_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Properties_Property_List'
          description: GET OK 200
      summary: GET /components/component/{name}/properties/property List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/components/component/{name}/properties/property/{name}:
    delete:
      operationId: deleteComponents_Component_Properties_Property
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components/component/{name}/properties/property
    description: List of system properties for the component
    get:
      operationId: getComponents_Component_Properties_Property
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Properties_Property'
          description: GET OK 200
      summary: GET /components/component/{name}/properties/property Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name_1}
      in: path
      name: name_1
      required: true
    post:
      operationId: postComponents_Component_Properties_Property
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components_Component_Properties_Property'
      responses:
        "201":
          description: created
      summary: POST /components/component/{name}/properties/property
  /devicesim/v1.0.0/{target}/components/component/{name}/properties/property/{name}/config:
    delete:
      operationId: deleteComponents_Component_Properties_Property_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components/component/{name}/properties/property/{name}/config
    description: Configuration data for each property
    get:
      operationId: getComponents_Component_Properties_Property_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Properties_Property_Config'
          description: GET OK 200
      summary: GET /components/component/{name}/properties/property/{name}/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name_1}
      in: path
      name: name_1
      required: true
    post:
      operationId: postComponents_Component_Properties_Property_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components_Component_Properties_Property_Config'
      responses:
        "201":
          description: created
      summary: POST /components/component/{name}/properties/property/{name}/config
  /devicesim/v1.0.0/{target}/components/component/{name}/properties/property/{name}/state:
    description: Operational state data for each property
    get:
      operationId: getComponents_Component_Properties_Property_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Properties_Property_State'
          description: GET OK 200
      summary: GET /components/component/{name}/properties/property/{name}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name_1}
      in: path
      name: name_1
      required: true
  /devicesim/v1.0.0/{target}/components/component/{name}/state:
    description: Operational state data for each component
    get:
      operationId: getComponents_Component_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_State'
          description: GET OK 200
      summary: GET /components/component/{name}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/components/component/{name}/state/temperature:
    description: |-
      Temperature in degrees Celsius of the component. Values include
      the instantaneous, average, minimum, and maximum statistics. If
      avg/min/max statistics are not supported, the target is expected
      to just supply the instant value
    get:
      operationId: getComponents_Component_State_Temperature
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_State_Temperature'
          description: GET OK 200
      summary: GET /components/component/{name}/state/temperature Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents:
    delete:
      operationId: deleteComponents_Component_Subcomponents
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components/component/{name}/subcomponents
    description: Enclosing container for subcomponent references
    get:
      operationId: getComponents_Component_Subcomponents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Subcomponents'
          description: GET OK 200
      summary: GET /components/component/{name}/subcomponents Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postComponents_Component_Subcomponents
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components_Component_Subcomponents'
      responses:
        "201":
          description: created
      summary: POST /components/component/{name}/subcomponents
  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents/subcomponent:
    description: List of subcomponent references
    get:
      operationId: getComponents_Component_Subcomponents_Subcomponent_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_List'
          description: GET OK 200
      summary: GET /components/component/{name}/subcomponents/subcomponent List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents/subcomponent/{name}:
    delete:
      operationId: deleteComponents_Component_Subcomponents_Subcomponent
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components/component/{name}/subcomponents/subcomponent
    description: List of subcomponent references
    get:
      operationId: getComponents_Component_Subcomponents_Subcomponent
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent'
          description: GET OK 200
      summary: GET /components/component/{name}/subcomponents/subcomponent Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name_1}
      in: path
      name: name_1
      required: true
    post:
      operationId: postComponents_Component_Subcomponents_Subcomponent
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components_Component_Subcomponents_Subcomponent'
      responses:
        "201":
          description: created
      summary: POST /components/component/{name}/subcomponents/subcomponent
  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents/subcomponent/{name}/config:
    delete:
      operationId: deleteComponents_Component_Subcomponents_Subcomponent_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /components/component/{name}/subcomponents/subcomponent/{name}/config
    description: 'Configuration data '
    get:
      operationId: getComponents_Component_Subcomponents_Subcomponent_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_Config'
          description: GET OK 200
      summary: GET /components/component/{name}/subcomponents/subcomponent/{name}/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name_1}
      in: path
      name: name_1
      required: true
    post:
      operationId: postComponents_Component_Subcomponents_Subcomponent_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Components_Component_Subcomponents_Subcomponent_Config'
      responses:
        "201":
          description: created
      summary: POST /components/component/{name}/subcomponents/subcomponent/{name}/config
  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents/subcomponent/{name}/state:
    description: 'Operational state data '
    get:
      operationId: getComponents_Component_Subcomponents_Subcomponent_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_State'
          description: GET OK 200
      summary: GET /components/component/{name}/subcomponents/subcomponent/{name}/state
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name_1}
      in: path
      name: name_1
      required: true
  /devicesim/v1.0.0/{target}/interfaces:
    delete:
      operationId: deleteInterfaces
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /interfaces
    description: |-
      Top level container for interfaces, including configuration
      and state data.
    get:
      operationId: getInterfaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces'
          description: GET OK 200
      summary: GET /interfaces Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postInterfaces
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Interfaces'
      responses:
        "201":
          description: created
      summary: POST /interfaces
  /devicesim/v1.0.0/{target}/interfaces/interface:
    description: The list of named interfaces on the device.
    get:
      operationId: getInterfaces_Interface_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_List'
          description: GET OK 200
      summary: GET /interfaces/interface List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}:
    delete:
      operationId: deleteInterfaces_Interface
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /interfaces/interface
    description: The list of named interfaces on the device.
    get:
      operationId: getInterfaces_Interface
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface'
          description: GET OK 200
      summary: GET /interfaces/interface Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postInterfaces_Interface
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface'
      responses:
        "201":
          description: created
      summary: POST /interfaces/interface
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/config:
    delete:
      operationId: deleteInterfaces_Interface_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /interfaces/interface/{name}/config
    description: |-
      Configurable items at the global, physical interface
      level
    get:
      operationId: getInterfaces_Interface_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Config'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postInterfaces_Interface_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Config'
      responses:
        "201":
          description: created
      summary: POST /interfaces/interface/{name}/config
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/hold-time:
    delete:
      operationId: deleteInterfaces_Interface_Hold-time
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /interfaces/interface/{name}/hold-time
    description: |-
      Top-level container for hold-time settings to enable
      dampening advertisements of interface transitions.
    get:
      operationId: getInterfaces_Interface_Hold-time
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Hold-time'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/hold-time Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postInterfaces_Interface_Hold-time
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Hold-time'
      responses:
        "201":
          description: created
      summary: POST /interfaces/interface/{name}/hold-time
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/hold-time/config:
    delete:
      operationId: deleteInterfaces_Interface_Hold-time_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /interfaces/interface/{name}/hold-time/config
    description: Configuration data for interface hold-time settings.
    get:
      operationId: getInterfaces_Interface_Hold-time_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Hold-time_Config'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/hold-time/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postInterfaces_Interface_Hold-time_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Hold-time_Config'
      responses:
        "201":
          description: created
      summary: POST /interfaces/interface/{name}/hold-time/config
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/hold-time/state:
    description: Operational state data for interface hold-time.
    get:
      operationId: getInterfaces_Interface_Hold-time_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Hold-time_State'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/hold-time/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/state:
    description: Operational state data at the global interface level
    get:
      operationId: getInterfaces_Interface_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_State'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/state/counters:
    description: A collection of interface-related statistics objects.
    get:
      operationId: getInterfaces_Interface_State_Counters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_State_Counters'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/state/counters Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces:
    delete:
      operationId: deleteInterfaces_Interface_Subinterfaces
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /interfaces/interface/{name}/subinterfaces
    description: |-
      Enclosing container for the list of subinterfaces associated
      with a physical interface
    get:
      operationId: getInterfaces_Interface_Subinterfaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/subinterfaces Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postInterfaces_Interface_Subinterfaces
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Subinterfaces'
      responses:
        "201":
          description: created
      summary: POST /interfaces/interface/{name}/subinterfaces
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface:
    description: |-
      The list of subinterfaces (logical interfaces) associated
      with a physical interface
    get:
      operationId: getInterfaces_Interface_Subinterfaces_Subinterface_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_List'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface/{index}:
    delete:
      operationId: deleteInterfaces_Interface_Subinterfaces_Subinterface
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /interfaces/interface/{name}/subinterfaces/subinterface
    description: |-
      The list of subinterfaces (logical interfaces) associated
      with a physical interface
    get:
      operationId: getInterfaces_Interface_Subinterfaces_Subinterface
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {index}
      in: path
      name: index
      required: true
    post:
      operationId: postInterfaces_Interface_Subinterfaces_Subinterface
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Subinterfaces_Subinterface'
      responses:
        "201":
          description: created
      summary: POST /interfaces/interface/{name}/subinterfaces/subinterface
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface/{index}/config:
    delete:
      operationId: deleteInterfaces_Interface_Subinterfaces_Subinterface_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /interfaces/interface/{name}/subinterfaces/subinterface/{index}/config
    description: Configurable items at the subinterface level
    get:
      operationId: getInterfaces_Interface_Subinterfaces_Subinterface_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_Config'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface/{index}/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {index}
      in: path
      name: index
      required: true
    post:
      operationId: postInterfaces_Interface_Subinterfaces_Subinterface_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Subinterfaces_Subinterface_Config'
      responses:
        "201":
          description: created
      summary: POST /interfaces/interface/{name}/subinterfaces/subinterface/{index}/config
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface/{index}/state:
    description: Operational state data for logical interfaces
    get:
      operationId: getInterfaces_Interface_Subinterfaces_Subinterface_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface/{index}/state
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {index}
      in: path
      name: index
      required: true
  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface/{index}/state/counters:
    description: A collection of interface-related statistics objects.
    get:
      operationId: getInterfaces_Interface_Subinterfaces_Subinterface_State_Counters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State_Counters'
          description: GET OK 200
      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface/{index}/state/counters
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {index}
      in: path
      name: index
      required: true
  /devicesim/v1.0.0/{target}/system:
    delete:
      operationId: deleteSystem
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system
    description: |-
      Enclosing container for system-related configuration and
      operational state data
    get:
      operationId: getSystem
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: GET OK 200
      summary: GET /system Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System'
      responses:
        "201":
          description: created
      summary: POST /system
  /devicesim/v1.0.0/{target}/system/aaa:
    delete:
      operationId: deleteSystem_Aaa
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa
    description: Top-level container for AAA services
    get:
      operationId: getSystem_Aaa
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa'
          description: GET OK 200
      summary: GET /system/aaa Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa'
      responses:
        "201":
          description: created
      summary: POST /system/aaa
  /devicesim/v1.0.0/{target}/system/aaa/accounting:
    delete:
      operationId: deleteSystem_Aaa_Accounting
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/accounting
    description: Top-level container for AAA accounting
    get:
      operationId: getSystem_Aaa_Accounting
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Accounting'
          description: GET OK 200
      summary: GET /system/aaa/accounting Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Accounting
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/accounting
  /devicesim/v1.0.0/{target}/system/aaa/accounting/config:
    delete:
      operationId: deleteSystem_Aaa_Accounting_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/accounting/config
    description: Configuration data for user activity accounting.
    get:
      operationId: getSystem_Aaa_Accounting_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Accounting_Config'
          description: GET OK 200
      summary: GET /system/aaa/accounting/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Accounting_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/accounting/config
  /devicesim/v1.0.0/{target}/system/aaa/accounting/events:
    delete:
      operationId: deleteSystem_Aaa_Accounting_Events
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/accounting/events
    description: |-
      Enclosing container for defining handling of events
      for accounting
    get:
      operationId: getSystem_Aaa_Accounting_Events
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Accounting_Events'
          description: GET OK 200
      summary: GET /system/aaa/accounting/events Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Accounting_Events
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting_Events'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/accounting/events
  /devicesim/v1.0.0/{target}/system/aaa/accounting/events/event:
    description: List of events subject to accounting
    get:
      operationId: getSystem_Aaa_Accounting_Events_Event_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_List'
          description: GET OK 200
      summary: GET /system/aaa/accounting/events/event List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/aaa/accounting/events/event/{event-type}:
    delete:
      operationId: deleteSystem_Aaa_Accounting_Events_Event
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/accounting/events/event
    description: List of events subject to accounting
    get:
      operationId: getSystem_Aaa_Accounting_Events_Event
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event'
          description: GET OK 200
      summary: GET /system/aaa/accounting/events/event Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {event-type}
      in: path
      name: event-type
      required: true
    post:
      operationId: postSystem_Aaa_Accounting_Events_Event
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting_Events_Event'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/accounting/events/event
  /devicesim/v1.0.0/{target}/system/aaa/accounting/events/event/{event-type}/config:
    delete:
      operationId: deleteSystem_Aaa_Accounting_Events_Event_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/accounting/events/event/{event-type}/config
    description: Configuration data for accounting events
    get:
      operationId: getSystem_Aaa_Accounting_Events_Event_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_Config'
          description: GET OK 200
      summary: GET /system/aaa/accounting/events/event/{event-type}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {event-type}
      in: path
      name: event-type
      required: true
    post:
      operationId: postSystem_Aaa_Accounting_Events_Event_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting_Events_Event_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/accounting/events/event/{event-type}/config
  /devicesim/v1.0.0/{target}/system/aaa/accounting/events/event/{event-type}/state:
    description: Operational state data for accounting events
    get:
      operationId: getSystem_Aaa_Accounting_Events_Event_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_State'
          description: GET OK 200
      summary: GET /system/aaa/accounting/events/event/{event-type}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {event-type}
      in: path
      name: event-type
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/accounting/state:
    description: Operational state data for user accounting.
    get:
      operationId: getSystem_Aaa_Accounting_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Accounting_State'
          description: GET OK 200
      summary: GET /system/aaa/accounting/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/aaa/authentication:
    delete:
      operationId: deleteSystem_Aaa_Authentication
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authentication
    description: Top-level container for global authentication data
    get:
      operationId: getSystem_Aaa_Authentication
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication'
          description: GET OK 200
      summary: GET /system/aaa/authentication Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Authentication
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authentication
  /devicesim/v1.0.0/{target}/system/aaa/authentication/admin-user:
    delete:
      operationId: deleteSystem_Aaa_Authentication_Admin-user
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authentication/admin-user
    description: |-
      Top-level container for the system root or admin user
      configuration and operational state
    get:
      operationId: getSystem_Aaa_Authentication_Admin-user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user'
          description: GET OK 200
      summary: GET /system/aaa/authentication/admin-user Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Authentication_Admin-user
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Admin-user'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authentication/admin-user
  /devicesim/v1.0.0/{target}/system/aaa/authentication/admin-user/config:
    delete:
      operationId: deleteSystem_Aaa_Authentication_Admin-user_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authentication/admin-user/config
    description: Configuration data for the root user account
    get:
      operationId: getSystem_Aaa_Authentication_Admin-user_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_Config'
          description: GET OK 200
      summary: GET /system/aaa/authentication/admin-user/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Authentication_Admin-user_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Admin-user_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authentication/admin-user/config
  /devicesim/v1.0.0/{target}/system/aaa/authentication/admin-user/state:
    description: Operational state data for the root user account
    get:
      operationId: getSystem_Aaa_Authentication_Admin-user_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_State'
          description: GET OK 200
      summary: GET /system/aaa/authentication/admin-user/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/aaa/authentication/config:
    delete:
      operationId: deleteSystem_Aaa_Authentication_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authentication/config
    description: Configuration data for global authentication services
    get:
      operationId: getSystem_Aaa_Authentication_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Config'
          description: GET OK 200
      summary: GET /system/aaa/authentication/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Authentication_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authentication/config
  /devicesim/v1.0.0/{target}/system/aaa/authentication/state:
    description: |-
      Operational state data for global authentication
      services
    get:
      operationId: getSystem_Aaa_Authentication_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_State'
          description: GET OK 200
      summary: GET /system/aaa/authentication/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/aaa/authentication/users:
    delete:
      operationId: deleteSystem_Aaa_Authentication_Users
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authentication/users
    description: Enclosing container list of local users
    get:
      operationId: getSystem_Aaa_Authentication_Users
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Users'
          description: GET OK 200
      summary: GET /system/aaa/authentication/users Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Authentication_Users
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Users'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authentication/users
  /devicesim/v1.0.0/{target}/system/aaa/authentication/users/user:
    description: List of local users on the system
    get:
      operationId: getSystem_Aaa_Authentication_Users_User_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_List'
          description: GET OK 200
      summary: GET /system/aaa/authentication/users/user List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/aaa/authentication/users/user/{username}:
    delete:
      operationId: deleteSystem_Aaa_Authentication_Users_User
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authentication/users/user
    description: List of local users on the system
    get:
      operationId: getSystem_Aaa_Authentication_Users_User
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Users_User'
          description: GET OK 200
      summary: GET /system/aaa/authentication/users/user Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {username}
      in: path
      name: username
      required: true
    post:
      operationId: postSystem_Aaa_Authentication_Users_User
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Users_User'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authentication/users/user
  /devicesim/v1.0.0/{target}/system/aaa/authentication/users/user/{username}/config:
    delete:
      operationId: deleteSystem_Aaa_Authentication_Users_User_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authentication/users/user/{username}/config
    description: Configuration data for local users
    get:
      operationId: getSystem_Aaa_Authentication_Users_User_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_Config'
          description: GET OK 200
      summary: GET /system/aaa/authentication/users/user/{username}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {username}
      in: path
      name: username
      required: true
    post:
      operationId: postSystem_Aaa_Authentication_Users_User_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Users_User_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authentication/users/user/{username}/config
  /devicesim/v1.0.0/{target}/system/aaa/authentication/users/user/{username}/state:
    description: Operational state data for local users
    get:
      operationId: getSystem_Aaa_Authentication_Users_User_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_State'
          description: GET OK 200
      summary: GET /system/aaa/authentication/users/user/{username}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {username}
      in: path
      name: username
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/authorization:
    delete:
      operationId: deleteSystem_Aaa_Authorization
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authorization
    description: |-
      Top-level container for AAA authorization configuration
      and operational state data
    get:
      operationId: getSystem_Aaa_Authorization
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authorization'
          description: GET OK 200
      summary: GET /system/aaa/authorization Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Authorization
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authorization
  /devicesim/v1.0.0/{target}/system/aaa/authorization/config:
    delete:
      operationId: deleteSystem_Aaa_Authorization_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authorization/config
    description: |-
      Configuration data for authorization based on AAA
      methods
    get:
      operationId: getSystem_Aaa_Authorization_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authorization_Config'
          description: GET OK 200
      summary: GET /system/aaa/authorization/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Authorization_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authorization/config
  /devicesim/v1.0.0/{target}/system/aaa/authorization/events:
    delete:
      operationId: deleteSystem_Aaa_Authorization_Events
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authorization/events
    description: |-
      Enclosing container for the set of events subject
      to authorization
    get:
      operationId: getSystem_Aaa_Authorization_Events
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authorization_Events'
          description: GET OK 200
      summary: GET /system/aaa/authorization/events Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Authorization_Events
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization_Events'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authorization/events
  /devicesim/v1.0.0/{target}/system/aaa/authorization/events/event:
    description: List of events subject to AAA authorization
    get:
      operationId: getSystem_Aaa_Authorization_Events_Event_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_List'
          description: GET OK 200
      summary: GET /system/aaa/authorization/events/event List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/aaa/authorization/events/event/{event-type}:
    delete:
      operationId: deleteSystem_Aaa_Authorization_Events_Event
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authorization/events/event
    description: List of events subject to AAA authorization
    get:
      operationId: getSystem_Aaa_Authorization_Events_Event
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event'
          description: GET OK 200
      summary: GET /system/aaa/authorization/events/event Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {event-type}
      in: path
      name: event-type
      required: true
    post:
      operationId: postSystem_Aaa_Authorization_Events_Event
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization_Events_Event'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authorization/events/event
  /devicesim/v1.0.0/{target}/system/aaa/authorization/events/event/{event-type}/config:
    delete:
      operationId: deleteSystem_Aaa_Authorization_Events_Event_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/authorization/events/event/{event-type}/config
    description: Configuration data for each authorized event
    get:
      operationId: getSystem_Aaa_Authorization_Events_Event_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_Config'
          description: GET OK 200
      summary: GET /system/aaa/authorization/events/event/{event-type}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {event-type}
      in: path
      name: event-type
      required: true
    post:
      operationId: postSystem_Aaa_Authorization_Events_Event_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization_Events_Event_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/authorization/events/event/{event-type}/config
  /devicesim/v1.0.0/{target}/system/aaa/authorization/events/event/{event-type}/state:
    description: Operational state data for each authorized activity
    get:
      operationId: getSystem_Aaa_Authorization_Events_Event_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_State'
          description: GET OK 200
      summary: GET /system/aaa/authorization/events/event/{event-type}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {event-type}
      in: path
      name: event-type
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/authorization/state:
    description: Operational state data for authorization based on AAA
    get:
      operationId: getSystem_Aaa_Authorization_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Authorization_State'
          description: GET OK 200
      summary: GET /system/aaa/authorization/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/aaa/config:
    delete:
      operationId: deleteSystem_Aaa_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/config
    description: Configuration data for top level AAA services
    get:
      operationId: getSystem_Aaa_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Config'
          description: GET OK 200
      summary: GET /system/aaa/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/config
  /devicesim/v1.0.0/{target}/system/aaa/server-groups:
    delete:
      operationId: deleteSystem_Aaa_Server-groups
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups
    description: Enclosing container for AAA server groups
    get:
      operationId: getSystem_Aaa_Server-groups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups'
          description: GET OK 200
      summary: GET /system/aaa/server-groups Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Aaa_Server-groups
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group:
    description: |-
      List of AAA server groups.  All servers in a group
      must have the same type as indicated by the server
      type.
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_List'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group
    description: |-
      List of AAA server groups.  All servers in a group
      must have the same type as indicated by the server
      type.
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/config:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group/{name}/config
    description: Configuration data for each server group
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Config'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group/{name}/config
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers
    description: Enclosing container the list of servers
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group_Servers
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group/{name}/servers
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server:
    description: List of AAA servers
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_List'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server
    description: List of AAA servers
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/config:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/config
    description: 'Configuration data '
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Config'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/config
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius
    description: Top-level container for RADIUS server data
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/config:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/config
    description: Configuration data for RADIUS servers
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/config
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/state:
    description: Operational state data for RADIUS servers
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/state
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/state/counters:
    description: A collection of RADIUS related state objects.
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/state/counters
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/state:
    description: 'Operational state data '
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_State'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/state
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs
    description: Top-level container for TACACS+ server data
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/config:
    delete:
      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/config
    description: Configuration data for TACACS+ server
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config'
      responses:
        "201":
          description: created
      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/config
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/state:
    description: Operational state data for TACACS+ server
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/state
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/state:
    description: Operational state data for each server group
    get:
      operationId: getSystem_Aaa_Server-groups_Server-group_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_State'
          description: GET OK 200
      summary: GET /system/aaa/server-groups/server-group/{name}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/system/aaa/state:
    description: 'Operational state data for top level AAA services '
    get:
      operationId: getSystem_Aaa_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Aaa_State'
          description: GET OK 200
      summary: GET /system/aaa/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/clock:
    delete:
      operationId: deleteSystem_Clock
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/clock
    description: Top-level container for clock configuration data
    get:
      operationId: getSystem_Clock
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Clock'
          description: GET OK 200
      summary: GET /system/clock Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Clock
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Clock'
      responses:
        "201":
          description: created
      summary: POST /system/clock
  /devicesim/v1.0.0/{target}/system/clock/config:
    delete:
      operationId: deleteSystem_Clock_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/clock/config
    description: Configuration data for system clock
    get:
      operationId: getSystem_Clock_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Clock_Config'
          description: GET OK 200
      summary: GET /system/clock/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Clock_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Clock_Config'
      responses:
        "201":
          description: created
      summary: POST /system/clock/config
  /devicesim/v1.0.0/{target}/system/clock/state:
    description: Operational state data for system clock
    get:
      operationId: getSystem_Clock_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Clock_State'
          description: GET OK 200
      summary: GET /system/clock/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/config:
    delete:
      operationId: deleteSystem_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/config
    description: Global configuration data for the system
    get:
      operationId: getSystem_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Config'
          description: GET OK 200
      summary: GET /system/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Config'
      responses:
        "201":
          description: created
      summary: POST /system/config
  /devicesim/v1.0.0/{target}/system/dns:
    delete:
      operationId: deleteSystem_Dns
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/dns
    description: Enclosing container for DNS resolver data
    get:
      operationId: getSystem_Dns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns'
          description: GET OK 200
      summary: GET /system/dns Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Dns
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Dns'
      responses:
        "201":
          description: created
      summary: POST /system/dns
  /devicesim/v1.0.0/{target}/system/dns/config:
    delete:
      operationId: deleteSystem_Dns_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/dns/config
    description: Configuration data for the DNS resolver
    get:
      operationId: getSystem_Dns_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Config'
          description: GET OK 200
      summary: GET /system/dns/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Dns_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Dns_Config'
      responses:
        "201":
          description: created
      summary: POST /system/dns/config
  /devicesim/v1.0.0/{target}/system/dns/host-entries:
    delete:
      operationId: deleteSystem_Dns_Host-entries
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/dns/host-entries
    description: Enclosing container for list of static host entries
    get:
      operationId: getSystem_Dns_Host-entries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Host-entries'
          description: GET OK 200
      summary: GET /system/dns/host-entries Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Dns_Host-entries
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Dns_Host-entries'
      responses:
        "201":
          description: created
      summary: POST /system/dns/host-entries
  /devicesim/v1.0.0/{target}/system/dns/host-entries/host-entry:
    description: List of static host entries
    get:
      operationId: getSystem_Dns_Host-entries_Host-entry_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_List'
          description: GET OK 200
      summary: GET /system/dns/host-entries/host-entry List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/dns/host-entries/host-entry/{hostname}:
    delete:
      operationId: deleteSystem_Dns_Host-entries_Host-entry
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/dns/host-entries/host-entry
    description: List of static host entries
    get:
      operationId: getSystem_Dns_Host-entries_Host-entry
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry'
          description: GET OK 200
      summary: GET /system/dns/host-entries/host-entry Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {hostname}
      in: path
      name: hostname
      required: true
    post:
      operationId: postSystem_Dns_Host-entries_Host-entry
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Dns_Host-entries_Host-entry'
      responses:
        "201":
          description: created
      summary: POST /system/dns/host-entries/host-entry
  /devicesim/v1.0.0/{target}/system/dns/host-entries/host-entry/{hostname}/config:
    delete:
      operationId: deleteSystem_Dns_Host-entries_Host-entry_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/dns/host-entries/host-entry/{hostname}/config
    description: Configuration data for static host entries
    get:
      operationId: getSystem_Dns_Host-entries_Host-entry_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_Config'
          description: GET OK 200
      summary: GET /system/dns/host-entries/host-entry/{hostname}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {hostname}
      in: path
      name: hostname
      required: true
    post:
      operationId: postSystem_Dns_Host-entries_Host-entry_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Dns_Host-entries_Host-entry_Config'
      responses:
        "201":
          description: created
      summary: POST /system/dns/host-entries/host-entry/{hostname}/config
  /devicesim/v1.0.0/{target}/system/dns/host-entries/host-entry/{hostname}/state:
    description: Operational state data for static host entries
    get:
      operationId: getSystem_Dns_Host-entries_Host-entry_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_State'
          description: GET OK 200
      summary: GET /system/dns/host-entries/host-entry/{hostname}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {hostname}
      in: path
      name: hostname
      required: true
  /devicesim/v1.0.0/{target}/system/dns/servers:
    delete:
      operationId: deleteSystem_Dns_Servers
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/dns/servers
    description: Enclosing container for DNS resolver list
    get:
      operationId: getSystem_Dns_Servers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Servers'
          description: GET OK 200
      summary: GET /system/dns/servers Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Dns_Servers
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Dns_Servers'
      responses:
        "201":
          description: created
      summary: POST /system/dns/servers
  /devicesim/v1.0.0/{target}/system/dns/servers/server:
    description: |-
      List of the DNS servers that the resolver should query.

      When the resolver is invoked by a calling application, it
      sends the query to the first name server in this list.  If
      no response has been received within 'timeout' seconds,
      the resolver continues with the next server in the list.
      If no response is received from any server, the resolver
      continues with the first server again.  When the resolver
      has traversed the list 'attempts' times without receiving
      any response, it gives up and returns an error to the
      calling application.

      Implementations MAY limit the number of entries in this
      list.
    get:
      operationId: getSystem_Dns_Servers_Server_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Servers_Server_List'
          description: GET OK 200
      summary: GET /system/dns/servers/server List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/dns/servers/server/{address}:
    delete:
      operationId: deleteSystem_Dns_Servers_Server
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/dns/servers/server
    description: |-
      List of the DNS servers that the resolver should query.

      When the resolver is invoked by a calling application, it
      sends the query to the first name server in this list.  If
      no response has been received within 'timeout' seconds,
      the resolver continues with the next server in the list.
      If no response is received from any server, the resolver
      continues with the first server again.  When the resolver
      has traversed the list 'attempts' times without receiving
      any response, it gives up and returns an error to the
      calling application.

      Implementations MAY limit the number of entries in this
      list.
    get:
      operationId: getSystem_Dns_Servers_Server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Servers_Server'
          description: GET OK 200
      summary: GET /system/dns/servers/server Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Dns_Servers_Server
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Dns_Servers_Server'
      responses:
        "201":
          description: created
      summary: POST /system/dns/servers/server
  /devicesim/v1.0.0/{target}/system/dns/servers/server/{address}/config:
    delete:
      operationId: deleteSystem_Dns_Servers_Server_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/dns/servers/server/{address}/config
    description: Configuration data for each DNS resolver
    get:
      operationId: getSystem_Dns_Servers_Server_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Servers_Server_Config'
          description: GET OK 200
      summary: GET /system/dns/servers/server/{address}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Dns_Servers_Server_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Dns_Servers_Server_Config'
      responses:
        "201":
          description: created
      summary: POST /system/dns/servers/server/{address}/config
  /devicesim/v1.0.0/{target}/system/dns/servers/server/{address}/state:
    description: Operational state data for each DNS resolver
    get:
      operationId: getSystem_Dns_Servers_Server_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_Servers_Server_State'
          description: GET OK 200
      summary: GET /system/dns/servers/server/{address}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
  /devicesim/v1.0.0/{target}/system/dns/state:
    description: Operational state data for the DNS resolver
    get:
      operationId: getSystem_Dns_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Dns_State'
          description: GET OK 200
      summary: GET /system/dns/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/logging:
    delete:
      operationId: deleteSystem_Logging
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging
    description: Top-level container for data related to logging / syslog
    get:
      operationId: getSystem_Logging
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging'
          description: GET OK 200
      summary: GET /system/logging Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Logging
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging'
      responses:
        "201":
          description: created
      summary: POST /system/logging
  /devicesim/v1.0.0/{target}/system/logging/console:
    delete:
      operationId: deleteSystem_Logging_Console
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/console
    description: |-
      Top-level container for data related to console-based
      logging
    get:
      operationId: getSystem_Logging_Console
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Console'
          description: GET OK 200
      summary: GET /system/logging/console Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Logging_Console
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console'
      responses:
        "201":
          description: created
      summary: POST /system/logging/console
  /devicesim/v1.0.0/{target}/system/logging/console/config:
    delete:
      operationId: deleteSystem_Logging_Console_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/console/config
    description: Configuration data for console logging
    get:
      operationId: getSystem_Logging_Console_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Console_Config'
          description: GET OK 200
      summary: GET /system/logging/console/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Logging_Console_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console_Config'
      responses:
        "201":
          description: created
      summary: POST /system/logging/console/config
  /devicesim/v1.0.0/{target}/system/logging/console/selectors:
    delete:
      operationId: deleteSystem_Logging_Console_Selectors
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/console/selectors
    description: 'Enclosing container '
    get:
      operationId: getSystem_Logging_Console_Selectors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Console_Selectors'
          description: GET OK 200
      summary: GET /system/logging/console/selectors Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Logging_Console_Selectors
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console_Selectors'
      responses:
        "201":
          description: created
      summary: POST /system/logging/console/selectors
  /devicesim/v1.0.0/{target}/system/logging/console/selectors/selector:
    description: List of selectors for log messages
    get:
      operationId: getSystem_Logging_Console_Selectors_Selector_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_List'
          description: GET OK 200
      summary: GET /system/logging/console/selectors/selector List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/logging/console/selectors/selector/{facility}/{severity}:
    delete:
      operationId: deleteSystem_Logging_Console_Selectors_Selector
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/console/selectors/selector
    description: List of selectors for log messages
    get:
      operationId: getSystem_Logging_Console_Selectors_Selector
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector'
          description: GET OK 200
      summary: GET /system/logging/console/selectors/selector Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {facility}
      in: path
      name: facility
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {severity}
      in: path
      name: severity
      required: true
    post:
      operationId: postSystem_Logging_Console_Selectors_Selector
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console_Selectors_Selector'
      responses:
        "201":
          description: created
      summary: POST /system/logging/console/selectors/selector
  /devicesim/v1.0.0/{target}/system/logging/console/selectors/selector/{facility}/{severity}/config:
    delete:
      operationId: deleteSystem_Logging_Console_Selectors_Selector_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/console/selectors/selector/{facility}/{severity}/config
    description: 'Configuration data '
    get:
      operationId: getSystem_Logging_Console_Selectors_Selector_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_Config'
          description: GET OK 200
      summary: GET /system/logging/console/selectors/selector/{facility}/{severity}/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {facility}
      in: path
      name: facility
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {severity}
      in: path
      name: severity
      required: true
    post:
      operationId: postSystem_Logging_Console_Selectors_Selector_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console_Selectors_Selector_Config'
      responses:
        "201":
          description: created
      summary: POST /system/logging/console/selectors/selector/{facility}/{severity}/config
  /devicesim/v1.0.0/{target}/system/logging/console/selectors/selector/{facility}/{severity}/state:
    description: 'Operational state data '
    get:
      operationId: getSystem_Logging_Console_Selectors_Selector_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_State'
          description: GET OK 200
      summary: GET /system/logging/console/selectors/selector/{facility}/{severity}/state
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {facility}
      in: path
      name: facility
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {severity}
      in: path
      name: severity
      required: true
  /devicesim/v1.0.0/{target}/system/logging/console/state:
    description: Operational state data for console logging
    get:
      operationId: getSystem_Logging_Console_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Console_State'
          description: GET OK 200
      summary: GET /system/logging/console/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/logging/remote-servers:
    delete:
      operationId: deleteSystem_Logging_Remote-servers
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/remote-servers
    description: Enclosing container for the list of remote log servers
    get:
      operationId: getSystem_Logging_Remote-servers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers'
          description: GET OK 200
      summary: GET /system/logging/remote-servers Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Logging_Remote-servers
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers'
      responses:
        "201":
          description: created
      summary: POST /system/logging/remote-servers
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server:
    description: List of remote log servers
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_List'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}:
    delete:
      operationId: deleteSystem_Logging_Remote-servers_Remote-server
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/remote-servers/remote-server
    description: List of remote log servers
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {host}
      in: path
      name: host
      required: true
    post:
      operationId: postSystem_Logging_Remote-servers_Remote-server
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server'
      responses:
        "201":
          description: created
      summary: POST /system/logging/remote-servers/remote-server
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/config:
    delete:
      operationId: deleteSystem_Logging_Remote-servers_Remote-server_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/remote-servers/remote-server/{host}/config
    description: Configuration data for remote log servers
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Config'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server/{host}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {host}
      in: path
      name: host
      required: true
    post:
      operationId: postSystem_Logging_Remote-servers_Remote-server_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server_Config'
      responses:
        "201":
          description: created
      summary: POST /system/logging/remote-servers/remote-server/{host}/config
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors:
    delete:
      operationId: deleteSystem_Logging_Remote-servers_Remote-server_Selectors
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/remote-servers/remote-server/{host}/selectors
    description: 'Enclosing container '
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {host}
      in: path
      name: host
      required: true
    post:
      operationId: postSystem_Logging_Remote-servers_Remote-server_Selectors
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server_Selectors'
      responses:
        "201":
          description: created
      summary: POST /system/logging/remote-servers/remote-server/{host}/selectors
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors/selector:
    description: List of selectors for log messages
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_List'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors/selector
        List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {host}
      in: path
      name: host
      required: true
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}:
    delete:
      operationId: deleteSystem_Logging_Remote-servers_Remote-server_Selectors_Selector
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/remote-servers/remote-server/{host}/selectors/selector
    description: List of selectors for log messages
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors_Selector
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors/selector
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {host}
      in: path
      name: host
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {facility}
      in: path
      name: facility
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {severity}
      in: path
      name: severity
      required: true
    post:
      operationId: postSystem_Logging_Remote-servers_Remote-server_Selectors_Selector
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector'
      responses:
        "201":
          description: created
      summary: POST /system/logging/remote-servers/remote-server/{host}/selectors/selector
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/config:
    delete:
      operationId: deleteSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/config
    description: 'Configuration data '
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {host}
      in: path
      name: host
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {facility}
      in: path
      name: facility
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {severity}
      in: path
      name: severity
      required: true
    post:
      operationId: postSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config'
      responses:
        "201":
          description: created
      summary: POST /system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/config
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/state:
    description: 'Operational state data '
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_State'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/state
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {host}
      in: path
      name: host
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {facility}
      in: path
      name: facility
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {severity}
      in: path
      name: severity
      required: true
  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/state:
    description: Operational state data for remote log servers
    get:
      operationId: getSystem_Logging_Remote-servers_Remote-server_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_State'
          description: GET OK 200
      summary: GET /system/logging/remote-servers/remote-server/{host}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {host}
      in: path
      name: host
      required: true
  /devicesim/v1.0.0/{target}/system/memory:
    delete:
      operationId: deleteSystem_Memory
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/memory
    description: Top-level container for system memory data
    get:
      operationId: getSystem_Memory
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Memory'
          description: GET OK 200
      summary: GET /system/memory Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Memory
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Memory'
      responses:
        "201":
          description: created
      summary: POST /system/memory
  /devicesim/v1.0.0/{target}/system/memory/config:
    delete:
      operationId: deleteSystem_Memory_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/memory/config
    description: Configuration data for system memory
    get:
      operationId: getSystem_Memory_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Memory_Config'
          description: GET OK 200
      summary: GET /system/memory/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Memory_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Memory_Config'
      responses:
        "201":
          description: created
      summary: POST /system/memory/config
  /devicesim/v1.0.0/{target}/system/memory/state:
    description: Operational state data for system memory
    get:
      operationId: getSystem_Memory_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Memory_State'
          description: GET OK 200
      summary: GET /system/memory/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/ntp:
    delete:
      operationId: deleteSystem_Ntp
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ntp
    description: Top-level container for NTP configuration and state
    get:
      operationId: getSystem_Ntp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp'
          description: GET OK 200
      summary: GET /system/ntp Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Ntp
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ntp'
      responses:
        "201":
          description: created
      summary: POST /system/ntp
  /devicesim/v1.0.0/{target}/system/ntp/config:
    delete:
      operationId: deleteSystem_Ntp_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ntp/config
    description: Configuration data for NTP client.
    get:
      operationId: getSystem_Ntp_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Config'
          description: GET OK 200
      summary: GET /system/ntp/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Ntp_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Config'
      responses:
        "201":
          description: created
      summary: POST /system/ntp/config
  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys:
    delete:
      operationId: deleteSystem_Ntp_Ntp-keys
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ntp/ntp-keys
    description: Enclosing container for list of NTP authentication keys
    get:
      operationId: getSystem_Ntp_Ntp-keys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Ntp-keys'
          description: GET OK 200
      summary: GET /system/ntp/ntp-keys Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Ntp_Ntp-keys
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Ntp-keys'
      responses:
        "201":
          description: created
      summary: POST /system/ntp/ntp-keys
  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys/ntp-key:
    description: List of NTP authentication keys
    get:
      operationId: getSystem_Ntp_Ntp-keys_Ntp-key_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_List'
          description: GET OK 200
      summary: GET /system/ntp/ntp-keys/ntp-key List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys/ntp-key/{key-id}:
    delete:
      operationId: deleteSystem_Ntp_Ntp-keys_Ntp-key
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ntp/ntp-keys/ntp-key
    description: List of NTP authentication keys
    get:
      operationId: getSystem_Ntp_Ntp-keys_Ntp-key
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key'
          description: GET OK 200
      summary: GET /system/ntp/ntp-keys/ntp-key Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {key-id}
      in: path
      name: key-id
      required: true
    post:
      operationId: postSystem_Ntp_Ntp-keys_Ntp-key
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Ntp-keys_Ntp-key'
      responses:
        "201":
          description: created
      summary: POST /system/ntp/ntp-keys/ntp-key
  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys/ntp-key/{key-id}/config:
    delete:
      operationId: deleteSystem_Ntp_Ntp-keys_Ntp-key_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ntp/ntp-keys/ntp-key/{key-id}/config
    description: Configuration data for NTP auth keys
    get:
      operationId: getSystem_Ntp_Ntp-keys_Ntp-key_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_Config'
          description: GET OK 200
      summary: GET /system/ntp/ntp-keys/ntp-key/{key-id}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {key-id}
      in: path
      name: key-id
      required: true
    post:
      operationId: postSystem_Ntp_Ntp-keys_Ntp-key_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Ntp-keys_Ntp-key_Config'
      responses:
        "201":
          description: created
      summary: POST /system/ntp/ntp-keys/ntp-key/{key-id}/config
  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys/ntp-key/{key-id}/state:
    description: Operational state data for NTP auth keys
    get:
      operationId: getSystem_Ntp_Ntp-keys_Ntp-key_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_State'
          description: GET OK 200
      summary: GET /system/ntp/ntp-keys/ntp-key/{key-id}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {key-id}
      in: path
      name: key-id
      required: true
  /devicesim/v1.0.0/{target}/system/ntp/servers:
    delete:
      operationId: deleteSystem_Ntp_Servers
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ntp/servers
    description: Enclosing container for the list of NTP servers
    get:
      operationId: getSystem_Ntp_Servers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Servers'
          description: GET OK 200
      summary: GET /system/ntp/servers Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Ntp_Servers
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Servers'
      responses:
        "201":
          description: created
      summary: POST /system/ntp/servers
  /devicesim/v1.0.0/{target}/system/ntp/servers/server:
    description: |-
      List of NTP servers to use for system clock
      synchronization.  If '/system/ntp/enabled'
      is 'true', then the system will attempt to
      contact and utilize the specified NTP servers.
    get:
      operationId: getSystem_Ntp_Servers_Server_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Servers_Server_List'
          description: GET OK 200
      summary: GET /system/ntp/servers/server List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/ntp/servers/server/{address}:
    delete:
      operationId: deleteSystem_Ntp_Servers_Server
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ntp/servers/server
    description: |-
      List of NTP servers to use for system clock
      synchronization.  If '/system/ntp/enabled'
      is 'true', then the system will attempt to
      contact and utilize the specified NTP servers.
    get:
      operationId: getSystem_Ntp_Servers_Server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Servers_Server'
          description: GET OK 200
      summary: GET /system/ntp/servers/server Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Ntp_Servers_Server
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Servers_Server'
      responses:
        "201":
          description: created
      summary: POST /system/ntp/servers/server
  /devicesim/v1.0.0/{target}/system/ntp/servers/server/{address}/config:
    delete:
      operationId: deleteSystem_Ntp_Servers_Server_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ntp/servers/server/{address}/config
    description: Configuration data for an NTP server.
    get:
      operationId: getSystem_Ntp_Servers_Server_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Servers_Server_Config'
          description: GET OK 200
      summary: GET /system/ntp/servers/server/{address}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
    post:
      operationId: postSystem_Ntp_Servers_Server_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Servers_Server_Config'
      responses:
        "201":
          description: created
      summary: POST /system/ntp/servers/server/{address}/config
  /devicesim/v1.0.0/{target}/system/ntp/servers/server/{address}/state:
    description: Operational state data for an NTP server.
    get:
      operationId: getSystem_Ntp_Servers_Server_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_Servers_Server_State'
          description: GET OK 200
      summary: GET /system/ntp/servers/server/{address}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {address}
      in: path
      name: address
      required: true
  /devicesim/v1.0.0/{target}/system/ntp/state:
    description: Operational state data for NTP services.
    get:
      operationId: getSystem_Ntp_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ntp_State'
          description: GET OK 200
      summary: GET /system/ntp/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/openflow:
    delete:
      operationId: deleteSystem_Openflow
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow
    description: Container for Openflow model
    get:
      operationId: getSystem_Openflow
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow'
          description: GET OK 200
      summary: GET /system/openflow Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Openflow
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow'
      responses:
        "201":
          description: created
      summary: POST /system/openflow
  /devicesim/v1.0.0/{target}/system/openflow/agent:
    delete:
      operationId: deleteSystem_Openflow_Agent
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow/agent
    description: Container for the Openflow agent model.
    get:
      operationId: getSystem_Openflow_Agent
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Agent'
          description: GET OK 200
      summary: GET /system/openflow/agent Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Openflow_Agent
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Agent'
      responses:
        "201":
          description: created
      summary: POST /system/openflow/agent
  /devicesim/v1.0.0/{target}/system/openflow/agent/config:
    delete:
      operationId: deleteSystem_Openflow_Agent_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow/agent/config
    description: Container for the Openflow agent config.
    get:
      operationId: getSystem_Openflow_Agent_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Agent_Config'
          description: GET OK 200
      summary: GET /system/openflow/agent/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Openflow_Agent_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Agent_Config'
      responses:
        "201":
          description: created
      summary: POST /system/openflow/agent/config
  /devicesim/v1.0.0/{target}/system/openflow/agent/state:
    description: Container for the Openflow agent state.
    get:
      operationId: getSystem_Openflow_Agent_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Agent_State'
          description: GET OK 200
      summary: GET /system/openflow/agent/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/openflow/controllers:
    delete:
      operationId: deleteSystem_Openflow_Controllers
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow/controllers
    description: Container for the Openflow controllers model
    get:
      operationId: getSystem_Openflow_Controllers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers'
          description: GET OK 200
      summary: GET /system/openflow/controllers Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Openflow_Controllers
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers'
      responses:
        "201":
          description: created
      summary: POST /system/openflow/controllers
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller:
    description: |-
      The Openflow Switch connects to all Openflow controllers
      configured
    get:
      operationId: getSystem_Openflow_Controllers_Controller_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_List'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}:
    delete:
      operationId: deleteSystem_Openflow_Controllers_Controller
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow/controllers/controller
    description: |-
      The Openflow Switch connects to all Openflow controllers
      configured
    get:
      operationId: getSystem_Openflow_Controllers_Controller
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postSystem_Openflow_Controllers_Controller
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller'
      responses:
        "201":
          description: created
      summary: POST /system/openflow/controllers/controller
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/config:
    delete:
      operationId: deleteSystem_Openflow_Controllers_Controller_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow/controllers/controller/{name}/config
    description: Container for the Openflow controller config.
    get:
      operationId: getSystem_Openflow_Controllers_Controller_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Config'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller/{name}/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postSystem_Openflow_Controllers_Controller_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller_Config'
      responses:
        "201":
          description: created
      summary: POST /system/openflow/controllers/controller/{name}/config
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections:
    delete:
      operationId: deleteSystem_Openflow_Controllers_Controller_Connections
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow/controllers/controller/{name}/connections
    description: Enclosing container for list of controller connections
    get:
      operationId: getSystem_Openflow_Controllers_Controller_Connections
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller/{name}/connections Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    post:
      operationId: postSystem_Openflow_Controllers_Controller_Connections
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller_Connections'
      responses:
        "201":
          description: created
      summary: POST /system/openflow/controllers/controller/{name}/connections
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections/connection:
    description: |-
      List of connections to the OpenFlow controller.
      The Openflow switch always connects to configured Openflow
      controllers. Each controller can have more than one
      connection, called auxiliary Openflow connections.
    get:
      operationId: getSystem_Openflow_Controllers_Controller_Connections_Connection_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_List'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller/{name}/connections/connection
        List
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections/connection/{aux-id}:
    delete:
      operationId: deleteSystem_Openflow_Controllers_Controller_Connections_Connection
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow/controllers/controller/{name}/connections/connection
    description: |-
      List of connections to the OpenFlow controller.
      The Openflow switch always connects to configured Openflow
      controllers. Each controller can have more than one
      connection, called auxiliary Openflow connections.
    get:
      operationId: getSystem_Openflow_Controllers_Controller_Connections_Connection
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller/{name}/connections/connection
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {aux-id}
      in: path
      name: aux-id
      required: true
    post:
      operationId: postSystem_Openflow_Controllers_Controller_Connections_Connection
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller_Connections_Connection'
      responses:
        "201":
          description: created
      summary: POST /system/openflow/controllers/controller/{name}/connections/connection
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/config:
    delete:
      operationId: deleteSystem_Openflow_Controllers_Controller_Connections_Connection_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/config
    description: Configuration data for OpenFlow controller connections
    get:
      operationId: getSystem_Openflow_Controllers_Controller_Connections_Connection_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_Config'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/config
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {aux-id}
      in: path
      name: aux-id
      required: true
    post:
      operationId: postSystem_Openflow_Controllers_Controller_Connections_Connection_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller_Connections_Connection_Config'
      responses:
        "201":
          description: created
      summary: POST /system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/config
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/state:
    description: |-
      Operational state data for OpenFlow controller
      connections
    get:
      operationId: getSystem_Openflow_Controllers_Controller_Connections_Connection_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_State'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/state
        Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {aux-id}
      in: path
      name: aux-id
      required: true
  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/state:
    description: Container for the Openflow controller state.
    get:
      operationId: getSystem_Openflow_Controllers_Controller_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_State'
          description: GET OK 200
      summary: GET /system/openflow/controllers/controller/{name}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {name}
      in: path
      name: name
      required: true
  /devicesim/v1.0.0/{target}/system/processes:
    delete:
      operationId: deleteSystem_Processes
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/processes
    description: Parameters related to all monitored processes
    get:
      operationId: getSystem_Processes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Processes'
          description: GET OK 200
      summary: GET /system/processes Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Processes
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Processes'
      responses:
        "201":
          description: created
      summary: POST /system/processes
  /devicesim/v1.0.0/{target}/system/processes/process:
    description: List of monitored processes
    get:
      operationId: getSystem_Processes_Process_List
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Processes_Process_List'
          description: GET OK 200
      summary: GET /system/processes/process List
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/processes/process/{pid}:
    description: List of monitored processes
    get:
      operationId: getSystem_Processes_Process
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Processes_Process'
          description: GET OK 200
      summary: GET /system/processes/process Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {pid}
      in: path
      name: pid
      required: true
  /devicesim/v1.0.0/{target}/system/processes/process/{pid}/state:
    description: State parameters related to monitored processes
    get:
      operationId: getSystem_Processes_Process_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Processes_Process_State'
          description: GET OK 200
      summary: GET /system/processes/process/{pid}/state Container
    parameters:
    - $ref: '#/components/parameters/target'
    - content:
        text/plain; charset=utf-8:
          schema:
            type: string
      description: key {pid}
      in: path
      name: pid
      required: true
  /devicesim/v1.0.0/{target}/system/ssh-server:
    delete:
      operationId: deleteSystem_Ssh-server
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ssh-server
    description: Top-level container for ssh server
    get:
      operationId: getSystem_Ssh-server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ssh-server'
          description: GET OK 200
      summary: GET /system/ssh-server Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Ssh-server
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ssh-server'
      responses:
        "201":
          description: created
      summary: POST /system/ssh-server
  /devicesim/v1.0.0/{target}/system/ssh-server/config:
    delete:
      operationId: deleteSystem_Ssh-server_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/ssh-server/config
    description: Configuration data for the system ssh server
    get:
      operationId: getSystem_Ssh-server_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ssh-server_Config'
          description: GET OK 200
      summary: GET /system/ssh-server/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Ssh-server_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Ssh-server_Config'
      responses:
        "201":
          description: created
      summary: POST /system/ssh-server/config
  /devicesim/v1.0.0/{target}/system/ssh-server/state:
    description: Operational state data for the system ssh server
    get:
      operationId: getSystem_Ssh-server_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Ssh-server_State'
          description: GET OK 200
      summary: GET /system/ssh-server/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/state:
    description: Global operational state data for the system
    get:
      operationId: getSystem_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_State'
          description: GET OK 200
      summary: GET /system/state Container
    parameters:
    - $ref: '#/components/parameters/target'
  /devicesim/v1.0.0/{target}/system/telnet-server:
    delete:
      operationId: deleteSystem_Telnet-server
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/telnet-server
    description: Top-level container for telnet terminal servers
    get:
      operationId: getSystem_Telnet-server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Telnet-server'
          description: GET OK 200
      summary: GET /system/telnet-server Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Telnet-server
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Telnet-server'
      responses:
        "201":
          description: created
      summary: POST /system/telnet-server
  /devicesim/v1.0.0/{target}/system/telnet-server/config:
    delete:
      operationId: deleteSystem_Telnet-server_Config
      responses:
        "200":
          description: DELETE 200 OK
      summary: DELETE /system/telnet-server/config
    description: Configuration data for telnet
    get:
      operationId: getSystem_Telnet-server_Config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Telnet-server_Config'
          description: GET OK 200
      summary: GET /system/telnet-server/config Container
    parameters:
    - $ref: '#/components/parameters/target'
    post:
      operationId: postSystem_Telnet-server_Config
      requestBody:
        $ref: '#/components/requestBodies/RequestBody_System_Telnet-server_Config'
      responses:
        "201":
          description: created
      summary: POST /system/telnet-server/config
  /devicesim/v1.0.0/{target}/system/telnet-server/state:
    description: Operational state data for telnet
    get:
      operationId: getSystem_Telnet-server_State
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System_Telnet-server_State'
          description: GET OK 200
      summary: GET /system/telnet-server/state Container
    parameters:
    - $ref: '#/components/parameters/target'
